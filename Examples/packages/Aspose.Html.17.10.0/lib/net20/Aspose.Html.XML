<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Aspose.Html</name>
  </assembly>
  <members>
    <member name="T:Aspose.Html.Services.ICssEngineService">
      <summary>
            Provides an interface for accessing to CSS engine that is associated with the current document.
            </summary>
      <seealso cref="T:Aspose.Html.Services.ICssService" />
    </member>
    <member name="P:Aspose.Html.Services.ICssEngineService.CounterStyles">
      <summary>
            Gets the counter styles that are associated with the current document.
            </summary>
      <value>
            The counter styles.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSKeyframeRule">
      <summary>
            The CSSKeyframeRule interface represents the style rule for a single key.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSKeyframeRule.KeyText">
      <summary>
            This attribute represents the keyframe selector as a comma-separated list of percentage values. The ‘from’ and ‘to’ keywords map to ‘0%’ and ‘100%’, respectively.
            </summary>
      <value>
            The key text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSKeyframeRule.Style">
      <summary>
            This attribute represents the style associated with this keyframe.
            </summary>
      <value>
            The style.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSKeyframesRule">
      <summary>
            The CSSKeyframesRule interface represents a complete set of keyframes for a single animation
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSKeyframesRule.AppendRule(System.String)">
      <summary>
            The appendRule method appends the passed CSSKeyframeRule into the list at the passed key
            </summary>
      <param name="rule">The rule to be appended, expressed in the same syntax as one entry in the ‘@keyframes’ rule</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSKeyframesRule.DeleteRule(System.String)">
      <summary>
            The deleteRule method deletes the CSSKeyframeRule with the passed key. If a rule with this key does not exist, the method does nothing
            </summary>
      <param name="key">The key which describes the rule to be deleted. The key must resolve to a number between 0 and 1, or the rule is ignored</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSKeyframesRule.FindRule(System.String)">
      <summary>
            The findRule method returns the rule with a key matching the passed key. If no such rule exists, a null value is returned
            </summary>
      <param name="key">The key which described the rule to find. The key must resolve to a number between 0 and 1, or the rule is ignored.</param>
      <returns>The found rule</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSKeyframesRule.Name">
      <summary>
            This attribute is the name of the keyframes, used by the ‘animation-name’ property.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSKeyframesRule.CSSRules">
      <summary>
            This attribute gives access to the keyframes in the list
            </summary>
      <value>
            The CSS rules.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IViewCSS">
      <summary>
            This interface represents a CSS view.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Views.IAbstractView" />
    </member>
    <member name="M:Aspose.Html.Dom.Css.IViewCSS.GetComputedStyle(Aspose.Html.Dom.Element,System.String)">
      <summary>
            This method is used to get the computed style as it is defined in CSS2.
            </summary>
      <param name="element">The element whose style is to be computed. This parameter cannot be null.</param>
      <param name="pseudoElement">The pseudo element.</param>
      <returns>The computed style</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.Counter">
      <summary>
            The Counter interface is used to represent any counter or counters function value. This interface reflects the values in the underlying style property.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Counter.Identifier">
      <summary>
            This attribute is used for the identifier of the counter.
            </summary>
      <value>
            The counter identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Counter.ListStyle">
      <summary>
            This attribute is used for the style of the list.
            </summary>
      <value>
            The list style identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Counter.Separator">
      <summary>
            This attribute is used for the separator of the nested counters.
            </summary>
      <value>
            The counter separator.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.CSSPrimitiveValue">
      <summary>
            The CSSPrimitiveValue interface represents a single CSS value. This interface may be used to determine the value of a specific style property currently set in a block or to set a specific style property explicitly within the block. An instance of this interface might be obtained from the getPropertyCSSValue method of the CSSStyleDeclaration interface. A CSSPrimitiveValue object only occurs in a context of a CSS property.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_UNKNOWN">
      <summary>
            The value is not a recognized CSS2 value. The value can only be obtained by using the cssText attribute.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_NUMBER">
      <summary>
            The value is a simple number. The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_PERCENTAGE">
      <summary>
            The value is a percentage. The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_EMS">
      <summary>
            The value is a length (ems). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_EXS">
      <summary>
            The value is a length (exs). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_PX">
      <summary>
            The value is a length (px). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_CM">
      <summary>
            The value is a length (cm). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_MM">
      <summary>
            The value is a length (mm). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_IN">
      <summary>
            The value is a length (in). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_PT">
      <summary>
            The value is a length (pt). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_PC">
      <summary>
            The value is a length (pc). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_DEG">
      <summary>
            The value is an angle (deg). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_RAD">
      <summary>
            The value is an angle (rad). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_GRAD">
      <summary>
            The value is an angle (grad). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_MS">
      <summary>
            The value is a time (ms). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_S">
      <summary>
            The value is a time (s). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_HZ">
      <summary>
            The value is a frequency (Hz). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_KHZ">
      <summary>
            The value is a frequency (kHz). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_DIMENSION">
      <summary>
            The value is a number with an unknown dimension. The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_REM">
      <summary>
            The value is a length (rem). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_CH">
      <summary>
            The value is a length (ch). The value can be obtained by using the getFloatValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_STRING">
      <summary>
            The value is a STRING. The value can be obtained by using the getStringValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_URI">
      <summary>
            The value is a URI. The value can be obtained by using the getStringValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_IDENT">
      <summary>
            The value is an identifier. The value can be obtained by using the getStringValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_ATTR">
      <summary>
            The value is a attribute function. The value can be obtained by using the getStringValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_COUNTER">
      <summary>
            The value is a counter or counters function. The value can be obtained by using the GetCounterValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_RECT">
      <summary>
            The value is a rect function. The value can be obtained by using the GetRectValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_RGBCOLOR">
      <summary>
            The value is a RGB color. The value can be obtained by using the GetRGBColorValue method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_DPI">
      <summary>
            The value is a dots per inch (dpi).
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_DPCM">
      <summary>
            The value is a dots per centimeter (dpcm).
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSPrimitiveValue.CSS_DPPX">
      <summary>
            The value is a dots per ‘px’ unit (dppx).
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.#ctor(System.Int16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Css.CSSPrimitiveValue" /> class.
            </summary>
      <param name="unitType">Type of the unit.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.SetFloatValue(System.Int16,System.Single)">
      <summary>
            A method to set the float value with a specified unit. If the property attached with this value can not accept the specified unit or the float value, the value will be unchanged and a DOMException will be raised.
            </summary>
      <param name="unitType">Type of the unit.</param>
      <param name="floatValue">The float value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetFloatValue(System.Int16)">
      <summary>
            This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value or can't be converted into the specified unit, a DOMException is raised.
            </summary>
      <param name="unitType">Type of the unit.</param>
      <returns>Returns value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.SetIntValue(System.Int16,System.Int32)">
      <summary>
            A method to set the int value with a specified unit. If the property attached with this value can not accept the specified unit or the int value, the value will be unchanged and a DOMException will be raised.
            </summary>
      <param name="unitType">Type of the unit.</param>
      <param name="intValue">The int value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetIntValue(System.Int16)">
      <summary>
            This method is used to get an int value in a specified unit. If this CSS value doesn't contain an int value or can't be converted into the specified unit, a DOMException is raised.
            </summary>
      <param name="unitType">Type of the unit.</param>
      <returns>Returns value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.SetStringValue(System.Int16,System.String)">
      <summary>
            A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit or the string value, the value will be unchanged and a DOMException will be raised.
            </summary>
      <param name="stringType">Type of the string.</param>
      <param name="stringValue">The string value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetStringValue">
      <summary>
            This method is used to get the string value. If the CSS value doesn't contain a string value, a DOMException is raised.
            </summary>
      <returns>Returns value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetCounterValue">
      <summary>
            This method is used to get the Counter value. If this CSS value doesn't contain a counter value, a DOMException is raised. Modification to the corresponding style property can be achieved using the Counter interface.
            </summary>
      <returns>Returns Counter value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetRectValue">
      <summary>
            This method is used to get the Rect value. If this CSS value doesn't contain a rect value, a DOMException is raised. Modification to the corresponding style property can be achieved using the Rect interface.
            </summary>
      <returns>Returns Rect value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSPrimitiveValue.GetRGBColorValue">
      <summary>
            This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DOMException is raised. Modification to the corresponding style property can be achieved using the RGBColor interface.
            </summary>
      <returns>Returns RGB color value</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSPrimitiveValue.PrimitiveType">
      <summary>
            The type of the value as defined by the constants specified above.
            </summary>
      <value>
            The type of the primitive.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.CSSValue">
      <summary>
            Represents a simple or a complex value. A CSSValue object only occurs in a context of a CSS property.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSValue.CSS_INHERIT">
      <summary>
            The value is inherited and the cssText contains "inherit".
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSValue.CSS_PRIMITIVE_VALUE">
      <summary>
            The value is a primitive value and an instance of the CSSPrimitiveValue interface can be obtained by using binding-specific casting methods on this instance of the CSSValue interface.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSValue.CSS_VALUE_LIST">
      <summary>
            The value is a CSSValue list and an instance of the CSSValueList interface can be obtained by using binding-specific casting methods on this instance of the CSSValue interface.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.CSSValue.CSS_CUSTOM">
      <summary>
            The value is a custom value.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.#ctor(System.Int16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Css.CSSValue" /> class.
            </summary>
      <param name="valueType">Type of the value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.Equals(Aspose.Html.Dom.Css.CSSValue)">
      <summary>
            Determines whether the specified object is equal to this instance.
            </summary>
      <param name="obj">The object to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Dom.Css.CSSValue" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
      <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
              </exception>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.op_Equality(Aspose.Html.Dom.Css.CSSValue,Aspose.Html.Dom.Css.CSSValue)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="left">The left element.</param>
      <param name="right">The right element.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValue.op_Inequality(Aspose.Html.Dom.Css.CSSValue,Aspose.Html.Dom.Css.CSSValue)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="left">The left element.</param>
      <param name="right">The right element.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSValue.CSSText">
      <summary>
            A string representation of the current value.
            </summary>
      <value>
            The CSS text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSValue.CSSValueType">
      <summary>
            A code defining the type of the value.
            </summary>
      <value>
            The type of the CSS value.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.CSSValueList">
      <summary>
            The CSSValueList interface provides the abstraction of an ordered collection of CSS values.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValueList.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Css.CSSValueList" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValueList.#ctor(System.Collections.Generic.IEnumerable{Aspose.Html.Dom.Css.CSSValue})">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Css.CSSValueList" /> class.
            </summary>
      <param name="values">The values.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValueList.#ctor(Aspose.Html.Dom.Css.CSSValue[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Css.CSSValueList" /> class.
            </summary>
      <param name="values">The values.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValueList.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.CSSValueList.Equals(Aspose.Html.Dom.Css.CSSValue)">
      <summary>
            Determines whether the specified object is equal to this instance.
            </summary>
      <param name="obj">The object to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Dom.Css.CSSValue" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSValueList.CSSText">
      <summary>
            A string representation of the current value.
            </summary>
      <value>
            The CSS text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSValueList.Length">
      <summary>
            The number of CSSValues in the list.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.CSSValueList.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Html.Dom.Css.CSSValue" /> at the specified index.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Css.CSSValue" />.
            </value>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSS2Properties">
      <summary>
            Provides interface for CSS2 properties set values manipulation in the context of certain HTML element
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Azimuth">
      <summary>
            See the azimuth property definition in CSS2.
            </summary>
      <returns>The azimuth property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Background">
      <summary>
            See the background property definition in CSS2.
            </summary>
      <returns>the background property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BackgroundAttachment">
      <summary>
            See the background-attachment property definition in CSS2.
            </summary>
      <returns>background-attachment property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BackgroundColor">
      <summary>
            See the background-color property definition in CSS2.
            </summary>
      <returns>background-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BackgroundImage">
      <summary>
            See the background-image property definition in CSS2.
            </summary>
      <returns>background-image property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BackgroundPosition">
      <summary>
            See the background-position property definition in CSS2.
            </summary>
      <returns>background-position property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BackgroundRepeat">
      <summary>
            See the background-repeat property definition in CSS2.
            </summary>
      <returns>background-repeat property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Border">
      <summary>
            See the border property definition in CSS2.
            </summary>
      <returns>border property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderCollapse">
      <summary>
            See the border-collapse property definition in CSS2.
            </summary>
      <returns>border-collapse property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderColor">
      <summary>
            See the border-color property definition in CSS2.
            </summary>
      <returns>border-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderSpacing">
      <summary>
            See the border-spacing property definition in CSS2.
            </summary>
      <returns>border-spacing property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderStyle">
      <summary>
            See the border-style property definition in CSS2.
            </summary>
      <returns>border-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderTop">
      <summary>
            See the border-top property definition in CSS2.
            </summary>
      <returns>border-top property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderRight">
      <summary>
            See the border-right property definition in CSS2.
            </summary>
      <returns>border-right property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderBottom">
      <summary>
            See the border-bottom property definition in CSS2.
            </summary>
      <returns>border-bottom property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderLeft">
      <summary>
            See the border-left property definition in CSS2.
            </summary>
      <returns>border-left property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderTopColor">
      <summary>
            See the border-top-color property definition in CSS2.
            </summary>
      <returns>border-top-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderRightColor">
      <summary>
            See the border-right-color property definition in CSS2.
            </summary>
      <returns>border-right-color property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderBottomColor">
      <summary>
            See the border-bottom-color property definition in CSS2.
            </summary>
      <returns>border-bottom-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderLeftColor">
      <summary>
            See the border-left-color property definition in CSS2.
            </summary>
      <returns>border-left-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderTopStyle">
      <summary>
            See the border-top-style property definition in CSS2.
            </summary>
      <returns>border-top-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderRightStyle">
      <summary>
            See the border-right-style property definition in CSS2.
            </summary>
      <returns>border-right-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderBottomStyle">
      <summary>
            See the border-bottom-style property definition in CSS2.
            </summary>
      <returns>border-bottom-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderLeftStyle">
      <summary>
            See the border-left-style property definition in CSS2.
            </summary>
      <returns>border-left-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderTopWidth">
      <summary>
            See the border-top-width property definition in CSS2.
            </summary>
      <returns>border-top-width property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderRightWidth">
      <summary>
            See the border-right-width property definition in CSS2.
            </summary>
      <returns>border-right-width property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderBottomWidth">
      <summary>
            See the border-bottom-width property definition in CSS2.
            </summary>
      <returns>border-bottom-width property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderLeftWidth">
      <summary>
            See the border-left-width property definition in CSS2.
            </summary>
      <returns>border-left-width property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.BorderWidth">
      <summary>
            See the border-width property definition in CSS2.
            </summary>
      <returns>border-width property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Bottom">
      <summary>
            See the bottom property definition in CSS2.
            </summary>
      <returns>bottom property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.CaptionSide">
      <summary>
            See the caption-side property definition in CSS2.
            </summary>
      <returns>caption-side property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Clear">
      <summary>
            See the clear property definition in CSS2.
            </summary>
      <returns>clear property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Clip">
      <summary>
            See the clip property definition in CSS2.
            </summary>
      <returns>clip property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Color">
      <summary>
            See the color property definition in CSS2.
            </summary>
      <returns>color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Content">
      <summary>
            See the content property definition in CSS2.
            </summary>
      <returns>content property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.CounterIncrement">
      <summary>
            See the counter-increment property definition in CSS2.
            </summary>
      <returns>counter-increment property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.CounterReset">
      <summary>
            See the counter-reset property definition in CSS2.
            </summary>
      <returns>counter-reset property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Cue">
      <summary>
            See the cue property definition in CSS2.
            </summary>
      <returns>cue property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.CueAfter">
      <summary>
            See the cue-after property definition in CSS2.
            </summary>
      <returns>cue-after property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.CueBefore">
      <summary>
            See the cue-before property definition in CSS2.
            </summary>
      <returns>cue-before property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Cursor">
      <summary>
            See the cursor property definition in CSS2.
            </summary>
      <returns>cursor property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Direction">
      <summary>
            See the direction property definition in CSS2.
            </summary>
      <returns>direction property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Display">
      <summary>
            See the display property definition in CSS2.
            </summary>
      <returns>display property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Elevation">
      <summary>
            See the elevation property definition in CSS2.
            </summary>
      <returns>elevation property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.EmptyCells">
      <summary>
            See the empty-cells property definition in CSS2.
            </summary>
      <returns>empty-cells property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Float">
      <summary>
            See the float property definition in CSS2.
            </summary>
      <returns>float property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Font">
      <summary>
            See the font property definition in CSS2.
            </summary>
      <returns>font property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontFamily">
      <summary>
            See the font-family property definition in CSS2.
            </summary>
      <returns>font-family property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontSize">
      <summary>
            See the font-size property definition in CSS2.
            </summary>
      <returns>font-size property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontSizeAdjust">
      <summary>
            See the font-size-adjust property definition in CSS2.
            </summary>
      <returns>font-size-adjust property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontStretch">
      <summary>
            See the font-stretch property definition in CSS2.
            </summary>
      <returns>font-stretch property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontStyle">
      <summary>
            See the font-style property definition in CSS2.
            </summary>
      <returns>font-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontVariant">
      <summary>
            See the font-variant property definition in CSS2.
            </summary>
      <returns>font-variant property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.FontWeight">
      <summary>
            See the font-weight property definition in CSS2.
            </summary>
      <returns>font-weight property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Height">
      <summary>
            See the height property definition in CSS2.
            </summary>
      <returns>height property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Left">
      <summary>
            See the left property definition in CSS2.
            </summary>
      <returns>left property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.LetterSpacing">
      <summary>
            See the letter-spacing property definition in CSS2.
            </summary>
      <returns>letter-spacing property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.LineHeight">
      <summary>
            See the line-height property definition in CSS2.
            </summary>
      <returns>line-height property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.ListStyle">
      <summary>
            See the list-style property definition in CSS2.
            </summary>
      <returns>list-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.ListStyleImage">
      <summary>
            See the list-style-image property definition in CSS2.
            </summary>
      <returns>list-style-image property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.ListStylePosition">
      <summary>
            See the list-style-position property definition in CSS2.
            </summary>
      <returns>list-style-position property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.ListStyleType">
      <summary>
            See the list-style-type property definition in CSS2.
            </summary>
      <returns>list-style-type property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Margin">
      <summary>
            See the margin property definition in CSS2.
            </summary>
      <returns>margin property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MarginTop">
      <summary>
            See the margin-top property definition in CSS2.
            </summary>
      <returns>The margin top</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MarginRight">
      <summary>
            See the margin-right property definition in CSS2.
            </summary>
      <returns>The margin-right value</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MarginBottom">
      <summary>
            See the margin-bottom property definition in CSS2.
            </summary>
      <returns>margin-bottom </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MarginLeft">
      <summary>
            See the margin-left property definition in CSS2.
            </summary>
      <returns>margin-left property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MarkerOffset">
      <summary>
            See the marker-offset property definition in CSS2.
            </summary>
      <returns>marker-offset property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Marks">
      <summary>
            See the marks property definition in CSS2.
            </summary>
      <returns>marks property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MaxHeight">
      <summary>
            See the max-height property definition in CSS2.
            </summary>
      <returns>max-height property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MaxWidth">
      <summary>
            See the max-width property definition in CSS2.
            </summary>
      <returns>max-width property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MinHeight">
      <summary>
            See the min-height property definition in CSS2.
            </summary>
      <returns>min-height property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.MinWidth">
      <summary>
            See the min-width property definition in CSS2.
            </summary>
      <returns>min-width property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Orphans">
      <summary>
            See the orphans property definition in CSS2.
            </summary>
      <returns>orphans property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Outline">
      <summary>
            See the outline property definition in CSS2.
            </summary>
      <returns>outline property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.OutlineColor">
      <summary>
            See the outline-color property definition in CSS2.
            </summary>
      <returns>outline-color property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.OutlineStyle">
      <summary>
            See the outline-style property definition in CSS2.
            </summary>
      <returns>outline-style property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.OutlineWidth">
      <summary>
            See the outline-width property definition in CSS2.
            </summary>
      <returns>outline-width property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Overflow">
      <summary>
            See the overflow property definition in CSS2.
            </summary>
      <returns>overflow property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Padding">
      <summary>
            See the padding property definition in CSS2.
            </summary>
      <returns>padding property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PaddingTop">
      <summary>
            See the padding-top property definition in CSS2.
            </summary>
      <returns>padding-top property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PaddingRight">
      <summary>
            See the padding-right property definition in CSS2.
            </summary>
      <returns>padding-right property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PaddingBottom">
      <summary>
            See the padding-bottom property definition in CSS2.
            </summary>
      <returns>padding-bottom property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PaddingLeft">
      <summary>
            See the padding-left property definition in CSS2.
            </summary>
      <returns>padding-left property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Page">
      <summary>
            See the page property definition in CSS2.
            </summary>
      <returns>page property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PageBreakAfter">
      <summary>
            See the page-break-after property definition in CSS2.
            </summary>
      <returns>page-break-after property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PageBreakBefore">
      <summary>
            See the page-break-before property definition in CSS2.
            </summary>
      <returns>page-break-before property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PageBreakInside">
      <summary>
            See the page-break-inside property definition in CSS2.
            </summary>
      <returns>page-break-inside property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Pause">
      <summary>
            See the pause property definition in CSS2.
            </summary>
      <returns>pause property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PauseAfter">
      <summary>
            See the pause-after property definition in CSS2.
            </summary>
      <returns>pause-after property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PauseBefore">
      <summary>
            See the pause-before property definition in CSS2.
            </summary>
      <returns>pause-before property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Pitch">
      <summary>
            See the pitch property definition in CSS2.
            </summary>
      <returns>pitch property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PitchRange">
      <summary>
            See the pitch-range property definition in CSS2.
            </summary>
      <returns>pitch-range property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.PlayDuring">
      <summary>
            See the play-during property definition in CSS2.
            </summary>
      <returns>play-during property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Position">
      <summary>
            See the position property definition in CSS2.
            </summary>
      <returns>position property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Quotes">
      <summary>
            See the quotes property definition in CSS2.
            </summary>
      <returns>quotes property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Richness">
      <summary>
            See the richness property definition in CSS2.
            </summary>
      <returns>richness property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Right">
      <summary>
            See the right property definition in CSS2.
            </summary>
      <returns>right property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Size">
      <summary>
            See the size property definition in CSS2.
            </summary>
      <returns>size property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Speak">
      <summary>
            See the speak property definition in CSS2.
            </summary>
      <returns>speak property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.SpeakHeader">
      <summary>
            See the speak-header property definition in CSS2.
            </summary>
      <returns>speak-header property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.SpeakNumeral">
      <summary>
            See the speak-numeral property definition in CSS2.
            </summary>
      <returns>speak-numeral property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.SpeakPunctuation">
      <summary>
            See the speak-punctuation property definition in CSS2.
            </summary>
      <returns>speak-punctuation property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.SpeechRate">
      <summary>
            See the speech-rate property definition in CSS2.
            </summary>
      <returns>speech-rate property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Stress">
      <summary>
            See the stress property definition in CSS2.
            </summary>
      <returns>stress property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TableLayout">
      <summary>
            See the table-layout property definition in CSS2.
            </summary>
      <returns>table-layout property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TextAlign">
      <summary>
            See the text-align property definition in CSS2.
            </summary>
      <returns>text-align property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TextDecoration">
      <summary>
            See the text-decoration property definition in CSS2.
            </summary>
      <returns>text-decoration property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TextIndent">
      <summary>
            See the text-indent property definition in CSS2.
            </summary>
      <returns>text-indent property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TextShadow">
      <summary>
            See the text-shadow property definition in CSS2.
            </summary>
      <returns>text-shadow property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.TextTransform">
      <summary>
            See the text-transform property definition in CSS2.
            </summary>
      <returns>text-transform property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Top">
      <summary>
            See the top property definition in CSS2.
            </summary>
      <returns>top property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.UnicodeBidi">
      <summary>
            See the unicode-bidi property definition in CSS2.
            </summary>
      <returns>unicode-bidi property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.VerticalAlign">
      <summary>
            See the vertical-align property definition in CSS2.
            </summary>
      <returns>vertical-align property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Visibility">
      <summary>
            See the visibility property definition in CSS2.
            </summary>
      <returns>visibility property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.VoiceFamily">
      <summary>
            See the voice-family property definition in CSS2.
            </summary>
      <returns>voice-family property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Volume">
      <summary>
            See the volume property definition in CSS2.
            </summary>
      <returns>volume property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.WhiteSpace">
      <summary>
            See the white-space property definition in CSS2.
            </summary>
      <returns>white-space property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Widows">
      <summary>
            See the widows property definition in CSS2.
            </summary>
      <returns>widows property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.Width">
      <summary>
            See the width property definition in CSS2.
            </summary>
      <returns>width property </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.WordSpacing">
      <summary>
            See the word-spacing property definition in CSS2.
            </summary>
      <returns>word-spacing property</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSS2Properties.ZIndex">
      <summary>
            See the z-index property definition in CSS2.
            </summary>
      <returns>z-index property</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSCharsetRule">
      <summary>
            The CSSCharsetRule interface represents a @charset rule in a CSS style sheet. 
            The value of the encoding attribute does not affect the encoding of text data in the DOM objects; this encoding is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value found in the @charset rule. If there was no @charset in the original document, then no CSSCharsetRule is created. 
            The value of the encoding attribute may also be used as a hint for the encoding used on serialization of the style sheet.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCharsetRule.Encoding">
      <summary>
            The encoding information used in this @charset rule.
            </summary>
      <value>
            The encoding.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSCounterStyleRule">
      <summary>
            The @counter-style rule allows authors to define a custom counter style.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.Name">
      <summary>
            Gets the name.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.CounterType">
      <summary>
            Gets the type of the counter.
            </summary>
      <value>
            The type of the counter.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.Glyphs">
      <summary>
            Gets the glyphs.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.Prefix">
      <summary>
            Gets the prefix.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.Suffix">
      <summary>
            Gets the suffix.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSCounterStyleRule.Fallback">
      <summary>
            Gets the fallback.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSFontFaceRule">
      <summary>
            The CSSFontFaceRule interface represents a @font-face rule in a CSS style sheet. The @font-face rule is used to hold a set of font descriptions.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSFontFaceRule.Family">
      <summary>
            Gets the family.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSFontFaceRule.Src">
      <summary>
            Gets the SRC.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSFontFaceRule.FontStyle">
      <summary>
            Gets the font style.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSFontFaceRule.Weight">
      <summary>
            Gets the weight.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSFontFaceRule.Stretch">
      <summary>
            Gets the stretch.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSFontFaceRule.Variant">
      <summary>
            Gets the variant.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSFontFaceRule.Style">
      <summary>
            The declaration-block of this rule.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSImportRule">
      <summary>
            The CSSImportRule interface represents a @import rule within a CSS style sheet. The @import rule is used to import style rules from other style sheets.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSImportRule.Href">
      <summary>
            The location of the style sheet to be imported. The attribute will not contain the "url(...)" specifier around the URI.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSImportRule.Media">
      <summary>
            A list of media types for which this style sheet may be used.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSImportRule.StyleSheet">
      <summary>
            The style sheet referred to by this rule, if it has been loaded. The value of this attribute is null if the style sheet has not yet been loaded or if it will not be loaded (e.g. if the style sheet is for a media type not supported by the user agent).
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSMediaRule">
      <summary>
            The CSSMediaRule interface represents a @media rule in a CSS style sheet. A @media rule can be used to delimit style rules for specific media types.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSMediaRule.InsertRule(System.String,System.Int64)">
      <summary>
            Used to insert a new rule into the media block.
            </summary>
      <param name="rule">The media rule.</param>
      <param name="index">The index.</param>
      <returns>The inserted index.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSMediaRule.DeleteRule(System.Int64)">
      <summary>
            Used to delete a rule from the media block.
            </summary>
      <param name="index">The index.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSMediaRule.Media">
      <summary>
            A list of media types for this rule.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSMediaRule.CSSRules">
      <summary>
            A list of all CSS rules contained within the media block.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSPageRule">
      <summary>
            The CSSPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to specify the dimensions, orientation, margins, etc. of a page box for paged media.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSPageRule.SelectorText">
      <summary>
            The parsable textual representation of the page selector for the rule.
            </summary>
      <value>
            The selector text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSPageRule.Style">
      <summary>
            The declaration-block of this rule.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSRule">
      <summary>
            The CSSRule interface is the abstract base interface for any type of CSS statement. This includes both rule sets and at-rules. An implementation is expected to preserve all rules specified in a CSS style sheet, even if the rule is not recognized by the parser. Unrecognized rules are represented using the <see cref="T:Aspose.Html.Dom.Css.ICSSUnknownRule" /> interface.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRule.Type">
      <summary>
            The type of the rule, as defined above. The expectation is that binding-specific casting methods can be used to cast down from an instance of the CSSRule interface to the specific derived interface implied by the type.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRule.CSSText">
      <summary>
            The parsable textual representation of the rule. This reflects the current state of the rule and not its initial value.
            </summary>
      <value>
            The CSS text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRule.ParentStyleSheet">
      <summary>
            The style sheet that contains this rule.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRule.ParentRule">
      <summary>
            If this rule is contained inside another rule (e.g. a style rule inside an @media block), this is the containing rule. If this rule is not nested inside any other rules, this returns null.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSRuleList">
      <summary>
            The CSSRuleList interface provides the abstraction of an ordered collection of CSS rules.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRuleList.Length">
      <summary>
            The number of CSSRules in the list. The range of valid child rule indices is 0 to length-1 inclusive.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSRuleList.Item(System.Int32)">
      <summary>
            Used to retrieve a CSS rule by method item() (http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList). The order in this collection represents the order of the rules in the CSS style sheet. If index is greater than or equal to the number of rules in the list, this returns null.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Css.ICSSRule" />.
            </value>
      <param name="index">The rule index</param>
      <returns>The CSS rule instance.</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSStyleDeclaration">
      <summary>
            The CSSStyleDeclaration interface represents a single CSS declaration block. This interface may be used to determine the style properties currently set in a block or to set style properties explicitly within the block.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleDeclaration.GetPropertyValue(System.String)">
      <summary>
            Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block.
            </summary>
      <param name="propertyName">Name of the property.</param>
      <returns>Returns property value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleDeclaration.GetPropertyCSSValue(System.String)">
      <summary>
            Used to retrieve the object representation of the value of a CSS property if it has been explicitly set within this declaration block. This method returns null if the property is a shorthand property. Shorthand property values can only be accessed and modified as strings, using the getPropertyValue and setProperty methods.
            </summary>
      <param name="propertyName">Name of the property.</param>
      <returns>Returns property value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleDeclaration.RemoveProperty(System.String)">
      <summary>
            Used to remove a CSS property if it has been explicitly set within this declaration block.
            </summary>
      <param name="propertyName">Name of the property.</param>
      <returns>Returns property value</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleDeclaration.GetPropertyPriority(System.String)">
      <summary>
            Used to retrieve the priority of a CSS property (e.g. the "important" qualifier) if the property has been explicitly set in this declaration block.
            </summary>
      <param name="propertyName">Name of the property.</param>
      <returns>Returns property priority</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleDeclaration.SetProperty(System.String,System.String,System.String)">
      <summary>
            Used to set a property value and priority within this declaration block.
            </summary>
      <param name="propertyName">Name of the property.</param>
      <param name="value">The value.</param>
      <param name="priority">The priority.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleDeclaration.CSSText">
      <summary>
            The parsable textual representation of the declaration block (excluding the surrounding curly braces). Setting this attribute will result in the parsing of the new value and resetting of all the properties in the declaration block including the removal or addition of properties.
            </summary>
      <value>
            The CSS text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleDeclaration.Length">
      <summary>
            The number of properties that have been explicitly set in this declaration block. The range of valid indices is 0 to length-1 inclusive.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleDeclaration.Item(System.Int32)">
      <summary>
            Used to retrieve the properties that have been explicitly set in this declaration block. The order of the properties retrieved using this method does not have to be the order in which they were set. This method can be used to iterate over all properties in this declaration block.
            </summary>
      <param name="index">The property index</param>
      <returns>The CSS value.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleDeclaration.ParentRule">
      <summary>
            The CSS rule that contains this declaration block or null if this CSSStyleDeclaration is not attached to a CSSRule.
            </summary>
      <value>
            The parent rule.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSStyleRule">
      <summary>
            The CSSStyleRule interface represents a single rule set in a CSS style sheet.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleRule.SelectorText">
      <summary>
            The textual representation of the selector for the rule set. The implementation may have stripped out insignificant whitespace while parsing the selector.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleRule.Style">
      <summary>
            The declaration-block of this rule set.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSStyleSheet">
      <summary>
            The CSSStyleSheet interface is a concrete interface used to represent a CSS style sheet i.e., a style sheet whose content type is "text/css".
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleSheet.InsertRule(System.String,System.Int32)">
      <summary>
            Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade.
            </summary>
      <param name="rule">The style rule.</param>
      <param name="index">The rule index.</param>
      <returns>The inserted index</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Css.ICSSStyleSheet.DeleteRule(System.Int32)">
      <summary>
            Used to delete a rule from the style sheet.
            </summary>
      <param name="index">The index.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleSheet.OwnerRule">
      <summary>
            If this style sheet comes from an @import rule, the ownerRule attribute will contain the CSSImportRule. In that case, the ownerNode attribute in the StyleSheet interface will be null. If the style sheet comes from an element or a processing instruction, the ownerRule attribute will be null and the ownerNode attribute will contain the Node.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSStyleSheet.CSSRules">
      <summary>
            The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSUnknownRule">
      <summary>
            The CSSUnknownRule interface represents an at-rule not supported by this user agent.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ICSSValueList">
      <summary>
            The interface provides the abstraction of an ordered collection of CSS values.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSValueList.Length">
      <summary>
            The number of CSSValues in the list.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ICSSValueList.Item(System.Int32)">
      <summary>
            Method returns the <see cref="T:Aspose.Html.Dom.Css.CSSValue" /> at the specified index.
            http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/css.html#CSS-CSSValueList
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Css.CSSValue" />.
            </value>
      <param name="index">The index.</param>
      <returns>
            The CSSValue.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IDocumentCSS">
      <summary>
            This interface represents a document with a CSS view.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.IDocumentCSS.GetOverrideStyle(Aspose.Html.Dom.Element,System.String)">
      <summary>
            This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element.
             </summary>
      <param name="elt">The element whose style is to be modified. This parameter cannot be null.</param>
      <param name="pseudoElt">The pseudo-element or null if none.</param>
      <returns>The override style declaration</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IDocumentStyle">
      <summary>
            The DocumentStyle interface provides a mechanism by which the style sheets embedded in a document can be retrieved. The expectation is that an instance of the DocumentStyle interface can be obtained by using binding-specific casting methods on an instance of the Document interface.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IDocumentStyle.StyleSheets">
      <summary>
            A list containing all the style sheets explicitly linked into or embedded in a document. For HTML documents, this includes external style sheets, included via the HTML LINK element, and inline STYLE elements.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IElementCSSInlineStyle">
      <summary>
            Inline style information attached to elements is exposed through the style attribute. This represents the contents of the STYLE attribute for HTML elements (or elements in other schemas or DTDs which use the STYLE attribute in the same way). 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IElementCSSInlineStyle.Style">
      <summary>
            Represents Represents a style attribute that allows author to directly apply style information to specific element.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.ILinkStyle">
      <summary>
            The LinkStyle interface provides a mechanism by which a style sheet can be retrieved from the node responsible for linking it into a document. An instance of the LinkStyle interface can be obtained using binding-specific casting methods on an instance of a linking node (HTMLLinkElement, HTMLStyleElement or ProcessingInstruction in DOM Level 2).
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.ILinkStyle.Sheet">
      <summary>
            Gets the associated style sheet.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IMediaList">
      <summary>
            The MediaList interface provides the abstraction of an ordered collection of media, without defining or constraining how this collection is implemented. An empty list is the same as a list that contains the medium "all".
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.IMediaList.DeleteMedium(System.String)">
      <summary>
            Deletes the medium indicated by oldMedium from the list.
            </summary>
      <param name="oldMedium">The old medium.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Css.IMediaList.AppendMedium(System.String)">
      <summary>
            Adds the medium newMedium to the end of the list. If the newMedium is already used, it is first removed.
            </summary>
      <param name="newMedium">The new medium.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IMediaList.MediaText">
      <summary>
            The parsable textual representation of the media list. This is a comma-separated list of media.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IMediaList.Length">
      <summary>
            The number of media in the list. The range of valid media is 0 to length-1 inclusive.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IMediaList.Item(System.Int32)">
      <summary>
            Returns the indexth in the list. If index is greater than or equal to the number of media in the list, this returns null.
            <param name="index">The media index.</param></summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IStyleSheet">
      <summary>
            The StyleSheet interface is the abstract base interface for any type of style sheet. It represents a single style sheet associated with a structured document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.Type">
      <summary>
            This specifies the style sheet language for this style sheet. The style sheet language is specified as a content type (e.g. "text/css").
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.Disabled">
      <summary>
            false if the style sheet is applied to the document. true if it is not. Modifying this attribute may cause a new resolution of style for the document. A stylesheet only applies if both an appropriate medium definition is present and the disabled attribute is false. So, if the media doesn't apply to the current user agent, the disabled attribute is ignored.
            </summary>
      <value>
        <c>true</c> if disabled; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.OwnerNode">
      <summary>
            The node that associates this style sheet with the document. For HTML, this may be the corresponding LINK or STYLE element. For XML, it may be the linking processing instruction. For style sheets that are included by other style sheets, the value of this attribute is null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.ParentStyleSheet">
      <summary>
            For style sheet languages that support the concept of style sheet inclusion, this attribute represents the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style sheet language does not support inclusion, the value of this attribute is null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.Href">
      <summary>
            If the style sheet is a linked style sheet, the value of its attribute is its location. For inline style sheets, the value of this attribute is null. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.Title">
      <summary>
            The advisory title. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheet.Media">
      <summary>
            The intended destination media for style information.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.IStyleSheetList">
      <summary>
            The StyleSheetList interface provides the abstraction of an ordered collection of style sheets.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheetList.Length">
      <summary>
            The number of StyleSheets in the list. The range of valid child stylesheet indices is 0 to length-1 inclusive.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.IStyleSheetList.Item(System.Int32)">
      <summary>
            Used to retrieve a style sheet by method item(int index) accordind to http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113/stylesheets.html.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Css.ICSSStyleSheet" />.
            </value>
      <param name="index">The style sheet index</param>
      <returns>The CSS stylesheet instance.</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.Rect">
      <summary>
            The Rect interface is used to represent any rect value. This interface reflects the values in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify the style property.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Rect.Top">
      <summary>
            This attribute is used for the top of the rect.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Rect.Right">
      <summary>
            This attribute is used for the right of the rect.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Rect.Bottom">
      <summary>
            This attribute is used for the bottom of the rect.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Rect.Left">
      <summary>
            This attribute is used for the left of the rect.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.RGBColor">
      <summary>
            The RGBColor interface is used to represent any RGB color value. This interface reflects the values in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify the style property.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.RGBColor.ToNative">
      <summary>
            Converts to the native color object.
            </summary>
      <returns>The <see cref="T:System.Drawing.Color" /> object.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.RGBColor.Red">
      <summary>
            This attribute is used for the red value of the RGB color.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.RGBColor.Green">
      <summary>
            This attribute is used for the green value of the RGB color.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.RGBColor.Blue">
      <summary>
            This attribute is used for the blue value of the RGB color.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.RGBColor.Alpha">
      <summary>
            This attribute is used for the alpha value of the RGB color.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.Counters.CounterStyleType">
      <summary>
             Represents enumeration of the counter styles
             </summary>
      <enum emulation="true" keepNames="true" />
    </member>
    <member name="F:Aspose.Html.Dom.Css.Counters.CounterStyleType.Repeating">
      <summary>
            Repeating style
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.Counters.CounterStyleType.Numeric">
      <summary>
            Numeric style
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.Counters.CounterStyleType.Alphabetic">
      <summary>
            Alphabetic style
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.Counters.CounterStyleType.Symbolic">
      <summary>
            Symbolic style
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.Counters.CounterStyleType.Additive">
      <summary>
            Additive style
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.Counters.CounterStyleType.NonRepeating">
      <summary>
            NonRepeating style
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Css.Counters.CounterStyleType.Override">
      <summary>
            Override style
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Css.Counters.ICounterStyle">
      <summary>
            Represents CounterStyle interface
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Counters.ICounterStyle.Name">
      <summary>
            Gets the counter name.
            </summary>
      <value>
            The counter name.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Counters.ICounterStyle.Type">
      <summary>
            Gets the counter style type.
            </summary>
      <value>
            The counter type.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Counters.ICounterStyle.Converter">
      <summary>
            Gets the counter converter.
            </summary>
      <value>
            The counter converter.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Css.Counters.ICounterStyleConverter">
      <summary>
            Represents base interface for the all counter converters
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.Counters.ICounterStyleConverter.Convert(System.Int32)">
      <summary>
            Converts the specified value to string representation.
            </summary>
      <param name="value">The value.</param>
      <returns>The string representation.</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Css.Counters.CounterStyleCollection">
      <summary>
            Represents CSS counters collection
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Css.Counters.CounterStyleCollection.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Css.Counters.CounterStyleCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Html.Dom.Css.Counters.CounterStyle" /> with the specified style name.
            </summary>
      <param name="styleName">The style name</param>
      <returns>The <see cref="T:Aspose.Html.Dom.Css.Counters.CounterStyle" /></returns>
    </member>
    <member name="T:Aspose.Html.Rendering.EpubRenderer">
      <summary>
            Represents a EPub document renderer.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.EpubRenderer.Render(Aspose.Html.Rendering.IDevice,System.IO.Stream)">
      <summary>
            Renders ePub document into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The device.</param>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.EpubRenderer.Render(Aspose.Html.Rendering.IDevice,System.IO.Stream,Aspose.Html.Configuration)">
      <summary>
            Renders ePub document into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The device.</param>
      <param name="document">The document.</param>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="T:Aspose.Html.Drawing.ITrueTypeFont">
      <summary>
            Declares methods for working with truetype font.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.ITrueTypeFont.GetData">
      <summary>
            Open the stream with font data. The caller is responsible for disposing the stream.
            </summary>
      <returns>Stream with the font data</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.ITrueTypeFont.GetDescent(System.Single)">
      <summary>
            Returns the descent, in design units. Corresponds to FontFamily.GetCellDescent.
            </summary>
      <param name="fontSize">Size of the font.</param>
      <returns>The descent.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.ITrueTypeFont.GetAscent(System.Single)">
      <summary>
            Returns the ascent, in design units. Corresponds to FontFamily.GetCellAscent.
            </summary>
      <param name="fontSize">Size of the font.</param>
      <returns>The ascent.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITrueTypeFont.FamilyName">
      <summary>
            Get the name of the font family.
            </summary>
      <returns>Famiy name of font</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITrueTypeFont.SubFamilyName">
      <summary>
            The Font Subfamily name distinguishes the font in a group with the same Font Family name. 
            This is assumed to address style (italic, oblique) and weight (light, bold, black, etc.). 
            A font with no particular differences in weight or style (e.g. medium weight, not italic and fsSelection bit 6 set) should have the string "Regular" stored in this position. 
            </summary>
      <returns>Subfamiy name of font</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITrueTypeFont.FullFontName">
      <summary>
            This should be a combination of "FamilyName" and "SubFamilyName". Exception: if the font is "Regular" as indicated 
            in "SubFamilyName", then use only the family name contained in "FamilyName". 
            An exception to the above definition of Full font name is for Microsoft platform strings 
            for CFF OpenType fonts: in this case, the Full font name string must be identical to the PostScript 
            FontName in the CFF Name INDEX.
            </summary>
      <returns>Full name of font</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITrueTypeFont.DataSize">
      <summary>
            Returns the size of the font data in bytes
            </summary>
      <returns>Size of the font data</returns>
    </member>
    <member name="T:Aspose.Html.IUrlSearchParams">
      <summary>
            Provides methods to work with URLs query string.
            </summary>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Append(System.String,System.String)">
      <summary>
            Appends a new name-value pair whose name is <c>name</c> and value is <c>value</c>.
            </summary>
      <param name="name">Name of the new name-value pair.</param>
      <param name="value">Value of the new name-value pair.</param>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Delete(System.String)">
      <summary>
            Removes all name-value pairs whose name is <c>name</c>.
            </summary>
      <param name="name">Key which will be used to find name-value pairs.</param>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Get(System.String)">
      <summary>
            Returns value of the first name-value pair whose name is <c>name</c>.
            </summary>
      <param name="name">Key which will be used to find name-value pair.</param>
      <returns> Value of the first name-value pair whose name is <c>name</c> or null 
            if there is none.</returns>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.GetAll(System.String)">
      <summary>
            Returns all values whose name is <c>name</c>.
            </summary>
      <param name="name">Key which will be used to find name-value pair.</param>
      <returns> List containing all values whose name is <c>name</c>.</returns>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Has(System.String)">
      <summary>
            Checks if there is a name-value pair whose name is <c>name</c> in list.
            </summary>
      <param name="name">Key which will be used to find name-value pair.</param>
      <returns>
        <c>True</c> if there is a name-value pair whose name is <c>name</c> 
            in list, and <c>false</c> otherwise.</returns>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Set(System.String,System.String)">
      <summary>
            Sets value of the first found name-value pair to the specified value and removes the others.
            If no name-value pairs with the specified name are found, new one will be appended to the list.
            </summary>
      <param name="name">Key which will be used to find name-value pairs.</param>
      <param name="value">Value which will be set.</param>
    </member>
    <member name="M:Aspose.Html.IUrlSearchParams.Sort">
      <summary>
            Sorts all name-value pairs, if any, by their names.
            </summary>
    </member>
    <member name="T:Aspose.Html.IDocumentFragmentElement">
      <summary>
            Represents common interface for all Document Fragment elements.
            </summary>
    </member>
    <member name="P:Aspose.Html.IDocumentFragmentElement.Content">
      <summary>
            Gets the instance of the <see cref="T:Aspose.Html.Dom.DocumentFragment" />.
            </summary>
      <value>
            The content.
            </value>
    </member>
    <member name="T:Aspose.Html.IHTMLFormElement">
      <summary>
            Represents a base interface that should be implemented by HTML Form Elements.
            </summary>
    </member>
    <member name="P:Aspose.Html.IHTMLFormElement.Elements">
      <summary>
            Gets the collection of the child form elements.
            </summary>
      <value>
            The elements.
            </value>
    </member>
    <member name="T:Aspose.Html.IFormAssociatedElement">
      <summary>
            A form-associated element can have a relationship with a form element, which is called the element's form owner. If a form-associated element is not associated with a form element, its form owner is said to be null.
            A form-associated element is, by default, associated with its nearest ancestor form element (as described below), but, if it is reassociateable, may have a form attribute specified to override this.
            </summary>
    </member>
    <member name="P:Aspose.Html.IFormAssociatedElement.Form">
      <summary>
            Gets or sets the form instance.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Element" /> instance.
            </value>
    </member>
    <member name="T:Aspose.Html.MimeType">
      <summary>
            Represents an Internet Media Types 
            </summary>
      <seealso cref="!:System.IEquatable&lt;Aspose.Html.MimeType&gt;" />
    </member>
    <member name="M:Aspose.Html.MimeType.#ctor(System.String)">
      <summary>
            Initializes a new instance of MIME type based on serialized string value.
            </summary>
      <param name="value">The value.</param>
    </member>
    <member name="M:Aspose.Html.MimeType.Equals(Aspose.Html.MimeType)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:System.Object" />.</param>
      <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents Mime type.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.op_Equality(Aspose.Html.MimeType,Aspose.Html.MimeType)">
      <summary>
            Compares two Mime type and returns a boolean indicating if the two do match.
            </summary>
      <param name="a">The first Mime to compare.</param>
      <param name="b">The second Mime to compare.</param>
      <returns>
        <value>True</value> if both priorities are equal, otherwise <value>false</value>.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.op_Inequality(Aspose.Html.MimeType,Aspose.Html.MimeType)">
      <summary>
            Compares two Mime type and returns a boolean indicating if the two do match.
            </summary>
      <param name="a">The first Mime to compare.</param>
      <param name="b">The second Mime to compare.</param>
      <returns>
        <value>True</value> if both priorities are not equal, otherwise <value>false</value>.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.op_Implicit(System.String)~Aspose.Html.MimeType">
      <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:Aspose.Html.MimeType" />.
            </summary>
      <param name="string">The string.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.op_Implicit(Aspose.Html.MimeType)~System.String">
      <summary>
            Performs an implicit conversion from <see cref="T:Aspose.Html.MimeType" /> to <see cref="T:System.String" />.
            </summary>
      <param name="type">The mime type.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:Aspose.Html.MimeType.FromFileExtension(System.String)">
      <summary>
            Creates a new MIME type based on file extension.
            </summary>
      <param name="fileName">The name of the file.</param>
      <returns>The new instance of MIME type</returns>
    </member>
    <member name="P:Aspose.Html.MimeType.Type">
      <summary>
            Gets the media type.
            </summary>
      <value>
            The media type.
            </value>
    </member>
    <member name="P:Aspose.Html.MimeType.SubType">
      <summary>
            Gets the sub media type.
            </summary>
      <value>
            The sub media type.
            </value>
    </member>
    <member name="T:Aspose.Html.Sandbox">
      <summary>
            A sandboxing flag set is a set of zero or more of the following flags, which are used to restrict the abilities that potentially untrusted resources.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.None">
      <summary>
            No flag is set, every sandbox feature is accepted
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Navigation">
      <summary>
            This flag prevents content from navigating browsing contexts other than the sandboxed browsing context itself (or browsing contexts further nested inside it), auxiliary browsing contexts (which are protected by the sandboxed auxiliary navigation browsing context flag defined next), and the top-level browsing context (which is protected by the sandboxed top-level navigation browsing context flag defined below). 
            If the sandboxed auxiliary navigation browsing context flag is not set, then in certain cases the restrictions nonetheless allow popups (new top-level browsing contexts) to be opened. These browsing contexts always have one permitted sandboxed navigator, set when the browsing context is created, which allows the browsing context that created them to actually navigate them. (Otherwise, the sandboxed navigation browsing context flag would prevent them from being navigated even if they were opened.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.AuxiliaryNavigation">
      <summary>
            This flag prevents content from creating new auxiliary browsing contexts, e.g. using the target attribute, or the window.open() method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.TopLevelNavigation">
      <summary>
            This flag prevents content from navigating their top-level browsing context and prevents content from closing their top-level browsing context. 
            When the sandboxed top-level navigation browsing context flag is not set, content can navigate its top-level browsing context, but other browsing contexts are still protected by the sandboxed navigation browsing context flag and possibly the sandboxed auxiliary navigation browsing context flag.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Plugins">
      <summary>
            This flag prevents content from instantiating plugins, whether using the embed element, the object element, the applet element, or through navigation of a nested browsing context, unless those plugins can be secured.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Origin">
      <summary>
            This flag forces content into a unique origin, thus preventing it from accessing other content from the same origin.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Forms">
      <summary>
            This flag blocks form submission.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.PointerLock">
      <summary>
            This flag disables the Pointer Lock API. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Scripts">
      <summary>
            This flag blocks script execution.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.AutomaticFeatures">
      <summary>
            This flag blocks features that trigger automatically, such as automatically playing a video or automatically focusing a form control.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.Fullscreen">
      <summary>
            This flag prevents content from using the requestFullscreen() method.
            </summary>
    </member>
    <member name="F:Aspose.Html.Sandbox.DocumentDomain">
      <summary>
            This flag prevents content from using the document.domain feature to change the effective script origin.
            </summary>
    </member>
    <member name="T:Aspose.Html.Url">
      <summary>
            Provides an object representation of a universal identifier (URL).
            </summary>
    </member>
    <member name="M:Aspose.Html.Url.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Url" /> with the specified URL.
            </summary>
      <param name="url">The URL to process.</param>
      <exception cref="T:Aspose.Html.Dom.Error">
            TypeError: raised if <c>url</c> cannot be parsed as valid URL.
            </exception>
    </member>
    <member name="M:Aspose.Html.Url.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Url" /> with the specified URL
            and base URL.
            </summary>
      <param name="url">The URL to process.</param>
      <param name="baseUrl">The base URL.</param>
      <exception cref="T:Aspose.Html.Dom.Error">
            TypeError: raised if <c>url</c> or <c>baseUrl</c> cannot be parsed as valid URL.
            </exception>
    </member>
    <member name="M:Aspose.Html.Url.ToJson">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Url.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Url.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Url.Equals(Aspose.Html.Url)">
      <summary>
            Determines whether the specified <see cref="T:Aspose.Html.Url" />, is equal to this instance.
            </summary>
      <param name="url">The <see cref="T:Aspose.Html.Url" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Url" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Url.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="P:Aspose.Html.Url.Origin">
      <summary>
            Gets a string representation for the specified URL origin.
            </summary>
      <value>
            The origin.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Username">
      <summary>
            Gets or sets a string representation for the specified URL username.
            </summary>
      <value>
            The username.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Password">
      <summary>
            Gets or sets a string representation for the specified URL password.
            </summary>
      <value>
            The password.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Protocol">
      <summary>
            Gets or sets a string representation for the specified URL schema.
            </summary>
      <value>
            The protocol.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Host">
      <summary>
            Gets or sets a string representation for the specified URL host.
            </summary>
      <value>
            The host.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Hostname">
      <summary>
            Gets or sets a string representation for the specified URL hostname.
            </summary>
      <value>
            The name of the host.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Port">
      <summary>
            Gets or sets a string representation for the specified URL port.
            </summary>
      <value>
            The port.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Pathname">
      <summary>
            Gets or sets a string representation for the specified URL path.
            </summary>
      <value>
            The name of the path.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Search">
      <summary>
            Gets or sets a string representation for the specified URL search segment.
            </summary>
      <value>
            The search.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Hash">
      <summary>
            Gets or sets a string representation for the specified URL hash segment.
            </summary>
      <value>
            The hash.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.SearchParams">
      <summary>
            Gets an associated <see cref="T:Aspose.Html.IUrlSearchParams" /> object.
            </summary>
      <value>
        <see cref="T:Aspose.Html.IUrlSearchParams" /> object.
            </value>
    </member>
    <member name="P:Aspose.Html.Url.Href">
      <summary>
            Gets or sets a serialized representation for the specified URL instance.
            </summary>
      <value>
            The href.
            </value>
      <exception cref="T:Aspose.Html.Dom.Error">
            TypeError: raised if <c>value</c> cannot be parsed as valid URL.
            </exception>
    </member>
    <member name="T:Aspose.Html.Window.Location">
      <summary>
            Location objects provide a representation of the address of the active document of their Document's browsing context, and allow the current entry of the browsing context's session history to be changed, by adding or replacing entries in the history object.
            </summary>
    </member>
    <member name="M:Aspose.Html.Window.Location.Assign(System.String)">
      <summary>
            Navigates to the given page.
            </summary>
      <param name="url">The URL to navigate.</param>
    </member>
    <member name="M:Aspose.Html.Window.Location.Reload">
      <summary>
            Reloads the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Window.Location.Replace(System.String)">
      <summary>
            Removes the current page from the session history and navigates to the given page.
            </summary>
      <param name="url">The URL to navigate.</param>
    </member>
    <member name="T:Aspose.Html.Window.IWindowTimers">
      <summary>
            Allows authors to schedule timer-based callbacks.
            </summary>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetTimeout(System.Object,System.Int32,System.Object[])">
      <summary>
            Schedules a timeout to run handler after timeout milliseconds. Any arguments are passed straight through to the handler.
            </summary>
      <param name="handler">The handler.</param>
      <param name="timeout">The timeout.</param>
      <param name="args">The arguments.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetTimeout(System.Object,System.Int32)">
      <summary>
            Schedules a timeout to run handler after timeout milliseconds. Any arguments are passed straight through to the handler.
            </summary>
      <param name="handler">The handler.</param>
      <param name="timeout">The timeout.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetTimeout(System.Object)">
      <summary>
            Schedules a timeout to run handler after timeout milliseconds. Any arguments are passed straight through to the handler.
            </summary>
      <param name="handler">The handler.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetTimeout(System.String,System.Int32)">
      <summary>
            Schedules a timeout to compile and run code after timeout milliseconds.
            </summary>
      <param name="code">The js code.</param>
      <param name="timeout">The timeout.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetTimeout(System.String)">
      <summary>
            Schedules a timeout to compile and run code after timeout milliseconds.
            </summary>
      <param name="code">The js code.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.ClearTimeout(System.Int32)">
      <summary>
            Cancels the timeout set with setTimeout() identified by handle.
            </summary>
      <param name="handle">The handle.</param>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetInterval(System.Object,System.Int32,System.Object[])">
      <summary>
            Schedules a timeout to run handler every timeout milliseconds. Any arguments are passed straight through to the handler.
            </summary>
      <param name="handler">The handler.</param>
      <param name="timeout">The timeout.</param>
      <param name="args">The arguments.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetInterval(System.Object,System.Int32)">
      <summary>
            Schedules a timeout to run handler every timeout milliseconds. Any arguments are passed straight through to the handler.
            </summary>
      <param name="handler">The handler.</param>
      <param name="timeout">The timeout.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetInterval(System.Object)">
      <summary>
            Schedules a timeout to run handler every timeout milliseconds. Any arguments are passed straight through to the handler.
            </summary>
      <param name="handler">The handler.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetInterval(System.String,System.Int32)">
      <summary>
            Schedules a timeout to compile and run code every timeout milliseconds.
            </summary>
      <param name="code">The js code.</param>
      <param name="timeout">The timeout.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.SetInterval(System.String)">
      <summary>
            Schedules a timeout to compile and run code every timeout milliseconds.
            </summary>
      <param name="code">Thejs  code.</param>
      <returns>The handle</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindowTimers.ClearInterval(System.Int32)">
      <summary>
            Cancels the timeout set with setInterval() identified by handle
            </summary>
      <param name="handle">The handle.</param>
    </member>
    <member name="T:Aspose.Html.Window.IWindow">
      <summary>
            The window object represents a window containing a DOM document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Window.IWindow.Alert(System.String)">
      <summary>
            Displays a modal alert with the given message, and waits for the user to dismiss it
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Aspose.Html.Window.IWindow.Confirm(System.String)">
      <summary>
            Displays a modal OK/Cancel prompt with the given message, waits for the user to dismiss it, and returns true if the user clicks OK and false if the user clicks Cancel.
            </summary>
      <param name="message">The message.</param>
      <returns>Returns true if the user clicks OK and false if the user clicks Cancel</returns>
    </member>
    <member name="M:Aspose.Html.Window.IWindow.Prompt(System.String,System.String)">
      <summary>
            Displays a modal text field prompt with the given message, waits for the user to dismiss it, and returns the value that the user entered. If the user cancels the prompt, then returns null instead. If the second argument is present, then the given value is used as a default.
            </summary>
      <param name="message">The message.</param>
      <param name="default">The default.</param>
      <returns>Returns the value that the user entered</returns>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Window">
      <summary>
            Returns the Window object's browsing context's WindowProxy object.
            </summary>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Self">
      <summary>
            Returns the Window object's browsing context's WindowProxy object.
            </summary>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Document">
      <summary>
            The document attribute must return the Window object's newest Document object.
            </summary>
      <value>
            The document.
            </value>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Name">
      <summary>
            The name attribute of the Window object must, on getting, return the current name of the browsing context, and, on setting, set the name of the browsing context to the new value.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Location">
      <summary>
            The location attribute of the Window interface must return the Location object for that Window object's Document.
            </summary>
      <value>
            The location.
            </value>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Top">
      <summary>
            The top IDL attribute on the Window object of a Document in a browsing context b must return the WindowProxy object of its top-level browsing context (which would be its own WindowProxy object if it was a top-level browsing context itself), if it has one, or its own WindowProxy object otherwise (e.g. if it was a detached nested browsing context).
            </summary>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Opener">
      <summary>
            The opener IDL attribute on the Window object, on getting, must return the WindowProxy object of the browsing context from which the current browsing context was created (its opener browsing context), if there is one, if it is still available, and if the current browsing context has not disowned its opener; otherwise, it must return null. On setting, if the new value is null then the current browsing context must disown its opener; if the new value is anything else then the user agent must call the [[DefineOwnProperty]] internal method of the Window object, passing the property name "opener" as the property key, and the Property Descriptor { [[Value]]: value, [[Writable]]: true, [[Enumerable]]: true, [[Configurable]]: true } as the property descriptor, where value is the new value.
            </summary>
      <value>
            The opener.
            </value>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.Parent">
      <summary>
            The parent IDL attribute on the Window object of a Document in a browsing context b must return the WindowProxy object of the parent browsing context, if there is one (i.e. if b is a child browsing context), or the WindowProxy object of the browsing context b itself, otherwise (i.e. if it is a top-level browsing context or a detached nested browsing context).
            </summary>
      <value>
            The parent.
            </value>
    </member>
    <member name="P:Aspose.Html.Window.IWindow.FrameElement">
      <summary>
            The frameElement object of a Document.
            </summary>
      <value>
            The frame element.
            </value>
    </member>
    <member name="T:Aspose.Html.Window.IWindowEventHandlers">
      <summary>
            Represents interface that must be inherited by window object
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnAfterPrint">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnBeforePrint">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnBeforeUnload">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnHashChange">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnMessage">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnOffline">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnOnline">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnPageHide">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnPageShow">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnPopState">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnStorage">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="E:Aspose.Html.Window.IWindowEventHandlers.OnUnload">
      <summary>
            Gets or sets event handler
            </summary>
    </member>
    <member name="T:Aspose.Html.Services.ICssService">
      <summary>
            Provides base an interface for CSS services.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IService" />
    </member>
    <member name="T:Aspose.Html.Services.IDeviceInformationService">
      <summary>
            An interface that is described an environment in which <see cref="T:Aspose.Html.Dom.Document" /> is presented to the user.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IService" />
    </member>
    <member name="P:Aspose.Html.Services.IDeviceInformationService.ScreenSize">
      <summary>
            Gets or sets the size of the screen.
            </summary>
      <value>
            The size of the screen.
            </value>
    </member>
    <member name="P:Aspose.Html.Services.IDeviceInformationService.WindowSize">
      <summary>
            Gets or sets the size of the window.
            </summary>
      <value>
            The size of the window.
            </value>
    </member>
    <member name="T:Aspose.Html.Services.IUserAgentService">
      <summary>
             An interface that is described a user agent environment.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IService" />
    </member>
    <member name="P:Aspose.Html.Services.IUserAgentService.Language">
      <summary>
            The <see cref="P:Aspose.Html.Services.IUserAgentService.Language" /> specifies the primary language for the element's contents and for any of the element's attributes that contain text. 
            Its value must be a valid BCP 47 (<seealso cref="!:http://www.ietf.org/rfc/bcp/bcp47.txt" />) language tag, or the empty string. Setting the attribute to the empty string indicates that the primary language is unknown.
            </summary>
      <value>
            The user agent language.
            </value>
    </member>
    <member name="P:Aspose.Html.Services.IUserAgentService.UserStyleSheet">
      <summary>
            Allows to specify style information for a particular document
            </summary>
    </member>
    <member name="P:Aspose.Html.Services.IUserAgentService.CharSet">
      <summary>
            Gets or sets the primary character-set for a document.
            </summary>
      <value>
            The character set.
            </value>
    </member>
    <member name="T:Aspose.Html.Services.INetworkService">
      <summary>
            Provides an interface for the network operations.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IService" />
    </member>
    <member name="P:Aspose.Html.Services.INetworkService.UrlResolver">
      <summary>
            Gets or sets the URL resolver.
            </summary>
      <value>
            The URL resolver.
            </value>
    </member>
    <member name="P:Aspose.Html.Services.INetworkService.MessageHandlers">
      <summary>
            Gets an list of <see cref="T:Aspose.Html.Net.MessageHandler" /> instances to be invoked as an <see cref="T:Aspose.Html.Net.RequestMessage" /> executes.
            </summary>
      <value>
            The message handlers.
            </value>
    </member>
    <member name="T:Aspose.Html.Services.IService">
      <summary>
            Defines a base interface for service implementation.
            </summary>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="T:Aspose.Html.Services.IServiceContainer">
      <summary>
            Provides a container for services.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IServiceProvider" />
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:Aspose.Html.Services.IServiceContainer.AddService``1(``0)">
      <summary>
            Adds the specified service to the service container.
            </summary>
      <typeparam name="TService">The type of the service.</typeparam>
      <param name="service">The service instance.</param>
    </member>
    <member name="T:Aspose.Html.Services.IServiceProvider">
      <summary>
            Provides an immutable container for services.
            </summary>
    </member>
    <member name="M:Aspose.Html.Services.IServiceProvider.GetService``1">
      <summary>
            Gets a service object of the specified type.
            </summary>
      <typeparam name="TService">The type of the service.</typeparam>
      <returns>The service object </returns>
    </member>
    <member name="T:Aspose.Html.Net.INetwork">
      <summary>
            Provides an interface for network services.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.INetwork.Send(Aspose.Html.Net.RequestMessage)">
      <summary>
            Sends a <see cref="T:Aspose.Html.Net.RequestMessage" /> message.
            </summary>
      <param name="message">The message to send.</param>
      <returns>A <see cref="T:Aspose.Html.Net.ResponseMessage" /> message</returns>
    </member>
    <member name="T:Aspose.Html.Net.MessageHandlerCollection">
      <summary>
            Represents collection of the <see cref="T:Aspose.Html.Net.MessageHandler" />.
            </summary>
      <seealso cref="T:Aspose.Html.Net.MessageHandler" />
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlerCollection.SetItem(System.Int32,Aspose.Html.Net.MessageHandler)">
      <summary>
            Replaces the element at the specified index.
            </summary>
      <param name="index">The zero-based index of the element to replace.</param>
      <param name="item">The new value for the element at the specified index. The value can be null for reference types.</param>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlerCollection.InsertItem(System.Int32,Aspose.Html.Net.MessageHandler)">
      <summary>
            Inserts an element into the <see cref="T:System.Collections.ObjectModel.Collection`1" /> at the specified index.
            </summary>
      <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
      <param name="item">The object to insert. The value can be null for reference types.</param>
    </member>
    <member name="T:Aspose.Html.Net.INetworkOperationContext">
      <summary>
            Provides contextual information for the network services.
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.INetworkOperationContext.CreationTime">
      <summary>
            Gets the operation creation time.
            </summary>
      <value>
            The creation time.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.INetworkOperationContext.Request">
      <summary>
            Gets or sets the request message.
            </summary>
      <value>
            The request message.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.INetworkOperationContext.Response">
      <summary>
            Gets or sets the response message.
            </summary>
      <value>
            The response message.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.MessageFilter">
      <summary>
            Represents abstract base class for different classes of filters used to query messages
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageFilter.Match(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class, tests whether a Context satisfies the filter criteria.
            </summary>
      <param name="context">The context.</param>
      <returns>
        <value>true</value> if the Context object satisfies the filter criteria; otherwise, <value>false</value>.</returns>
    </member>
    <member name="T:Aspose.Html.Net.MessageHandler">
      <summary>
            Represents a base type for message handlers.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandler.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MessageHandler" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandler.Next(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            Invokes the next <see cref="T:Aspose.Html.Net.MessageHandler" /> in chain of handlers, if any.
            </summary>
      <param name="context">The context.</param>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandler.Invoke(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class is used to implement the message handling.
            </summary>
      <param name="context">The context.</param>
    </member>
    <member name="P:Aspose.Html.Net.MessageHandler.Filters">
      <summary>
            Gets the filters list that are corresponding to the specified handler type.
            </summary>
      <value>
            The filters.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.RequestMessage">
      <summary>
            Represents a request message.
            </summary>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:Aspose.Html.Net.RequestMessage.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.RequestMessage" /> class.
            </summary>
      <param name="address">The request address.</param>
    </member>
    <member name="M:Aspose.Html.Net.RequestMessage.#ctor(Aspose.Html.Url)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.RequestMessage" /> class.
            </summary>
      <param name="uri">The request URL.</param>
    </member>
    <member name="M:Aspose.Html.Net.RequestMessage.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:Aspose.Html.Net.RequestMessage.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.Method">
      <summary>
            Gets or sets the <see cref="T:Aspose.Html.Net.HttpMethod" />.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Net.HttpMethod" />.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.RequestUri">
      <summary>
            Gets or sets the request URI.
            </summary>
      <value>
            The request URI.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.Headers">
      <summary>
            Gets the <see cref="T:Aspose.Html.Net.RequestHeaders" />.
            </summary>
      <value>
            The headers.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.RequestMessage.Body">
      <summary>
            Gets or sets the request body.
            </summary>
      <value>
            The body.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.HttpMethod">
      <summary>
            Represents utility class for retrieving and comparing standard HTTP methods.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.HttpMethod" /> class with a specific HTTP method.
            </summary>
      <param name="method">The method.</param>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.op_Equality(Aspose.Html.Net.HttpMethod,Aspose.Html.Net.HttpMethod)">
      <summary>
            Implements the equality operator.
            </summary>
      <param name="left">The left operand.</param>
      <param name="right">The left operand.</param>
      <returns>
            The result of the operation.
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.op_Inequality(Aspose.Html.Net.HttpMethod,Aspose.Html.Net.HttpMethod)">
      <summary>
            Implements the equality operator.
            </summary>
      <param name="left">The left operand.</param>
      <param name="right">The left operand.</param>
      <returns>
            The result of the operation.
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.Equals(Aspose.Html.Net.HttpMethod)">
      <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
      <param name="other">An object to compare with this object.</param>
      <returns>
            true if the current object is equal to the <paramref name="other" /> parameter; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Html.Net.HttpMethod.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Net.HttpMethod.Get">
      <summary>
            Represents an HTTP GET protocol method.
            </summary>
      <value>
            The HTTP GET method.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.HttpMethod.Put">
      <summary>
            Represents an HTTP PUT protocol method.
            </summary>
      <value>
            The HTTP PUT protocol method.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.HttpMethod.Post">
      <summary>
            Represents an HTTP POST protocol method.
            </summary>
      <value>
            The HTTP POST protocol method.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.HttpMethod.Delete">
      <summary>
            Represents an HTTP DELETE protocol method.
            </summary>
      <value>
            The HTTP DELETE protocol method.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.RequestHeaders">
      <summary>
            Contains protocol headers associated with a request.
            </summary>
      <seealso cref="T:System.Net.WebHeaderCollection" />
    </member>
    <member name="M:Aspose.Html.Net.RequestHeaders.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.RequestHeaders" /> class.
            </summary>
    </member>
    <member name="T:Aspose.Html.Net.ResponseHeaders">
      <summary>
            Contains protocol headers associated with a response.
            </summary>
      <seealso cref="T:System.Net.WebHeaderCollection" />
    </member>
    <member name="T:Aspose.Html.Net.ResponseMessage">
      <summary>
            Represents a response message.
            </summary>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:Aspose.Html.Net.ResponseMessage.#ctor(System.Net.HttpStatusCode)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.ResponseMessage" /> class.
            </summary>
      <param name="status">The status.</param>
    </member>
    <member name="M:Aspose.Html.Net.ResponseMessage.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="M:Aspose.Html.Net.ResponseMessage.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.Headers">
      <summary>
            Gets the headers.
            </summary>
      <value>
            The headers.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.ContentType">
      <summary>
            Gets or sets the <see cref="T:Aspose.Html.MimeType" /> of the response.
            </summary>
      <value>
            The type of the content.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.ContentEncoding">
      <summary>
            Gets or sets the content encoding.
            </summary>
      <value>
            The content encoding.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.Body">
      <summary>
            Gets or sets the response body.
            </summary>
      <value>
            The body.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.Request">
      <summary>
            Gets or sets the associated request.
            </summary>
      <value>
            The request.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.StatusCode">
      <summary>
            Gets or sets the status code.
            </summary>
      <value>
            The status code.
            </value>
    </member>
    <member name="P:Aspose.Html.Net.ResponseMessage.IsSuccess">
      <summary>
            Gets a value indicating whether this instance is success.
            </summary>
      <value>
        <c>true</c> if this instance is success; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Net.UrlResolver">
      <summary>
            Represents utility class for resolving absolute URL by a Uniform Resource Identifier (URI).
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.UrlResolver.Resolve(System.String,System.String)">
      <summary>
            Resolves the absolute URI from the base and relative URIs.
            </summary>
      <param name="baseUri">The base URI.</param>
      <param name="relativeUri">The relative URI.</param>
      <returns>The absolute URI</returns>
    </member>
    <member name="M:Aspose.Html.Net.UrlResolver.Resolve(Aspose.Html.Url,System.String)">
      <summary>
            Resolves the absolute URI from the base and relative URIs.
            </summary>
      <param name="baseUri">The base URI.</param>
      <param name="relativeUri">The relative URI.</param>
      <returns>The absolute URI</returns>
    </member>
    <member name="T:Aspose.Html.Net.MessageHandlers.FtpProtocolMessageHandler">
      <summary>
            Represents the <c>ftp:</c> protocol message handler.
            </summary>
      <seealso cref="T:Aspose.Html.Net.MessageHandler" />
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.FtpProtocolMessageHandler.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MessageHandlers.FtpProtocolMessageHandler" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.FtpProtocolMessageHandler.Invoke(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class is used to implement the message handling.
            </summary>
      <param name="context">The context.</param>
    </member>
    <member name="T:Aspose.Html.Net.MessageHandlers.HttpProtocolMessageHandler">
      <summary>
            Represents the <c>http:</c> protocol message handler.
            </summary>
      <seealso cref="T:Aspose.Html.Net.MessageHandler" />
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.HttpProtocolMessageHandler.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MessageHandlers.HttpProtocolMessageHandler" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.HttpProtocolMessageHandler.Invoke(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class is used to implement the message handling.
            </summary>
      <param name="context">The context.</param>
    </member>
    <member name="T:Aspose.Html.Net.MessageHandlers.FileProtocolMessageHandler">
      <summary>
            Represents the <c>file:</c> protocol message handler.
            </summary>
      <seealso cref="T:Aspose.Html.Net.MessageHandler" />
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.FileProtocolMessageHandler.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MessageHandlers.FileProtocolMessageHandler" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Net.MessageHandlers.FileProtocolMessageHandler.Invoke(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class is used to implement the message handling.
            </summary>
      <param name="context">The context.</param>
    </member>
    <member name="T:Aspose.Html.Net.MessageFilters.ProtocolMessageFilter">
      <summary>
            Represents implementation of message filter by the resource protocol.
            </summary>
      <seealso cref="T:Aspose.Html.Net.MessageFilter" />
    </member>
    <member name="M:Aspose.Html.Net.MessageFilters.ProtocolMessageFilter.#ctor(System.String[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Net.MessageFilters.ProtocolMessageFilter" /> class.
            </summary>
      <param name="protocols">The protocols.</param>
    </member>
    <member name="M:Aspose.Html.Net.MessageFilters.ProtocolMessageFilter.Match(Aspose.Html.Net.INetworkOperationContext)">
      <summary>
            When overridden in a derived class, tests whether a Context satisfies the filter criteria.
            </summary>
      <param name="context">The context.</param>
      <returns>
        <value>true</value> if the Context object satisfies the filter criteria; otherwise, <value>false</value>.
            </returns>
    </member>
    <member name="T:Aspose.Html.IO.FileCreateStreamProvider">
      <summary>
            Represents <see cref="T:System.IO.FileStream" /> implementation for providing streams to the rendering devices.
            </summary>
      <seealso cref="T:Aspose.Html.IO.ICreateStreamProvider" />
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.IO.FileCreateStreamProvider" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.IO.FileCreateStreamProvider" /> class.
            </summary>
      <param name="name">The file name.</param>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.IO.FileCreateStreamProvider" /> class.
            </summary>
      <param name="directory">The directory.</param>
      <param name="name">The file name.</param>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.GetStream(System.String,System.String)">
      <summary>
            Provides a stream for rendering.
            </summary>
      <param name="name">The name of the stream.</param>
      <param name="extension">The file name extension to use if a file stream is being created.</param>
      <returns>
            A Stream object that is used for writing data during the rendering operations.
            </returns>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.GetStream(System.String,System.String,System.Int32)">
      <summary>
            Provides a stream for rendering.
            </summary>
      <param name="name">The name of the stream.</param>
      <param name="extension">The file name extension to use if a file stream is being created.</param>
      <param name="page">The page number of the document.</param>
      <returns>
            A Stream object that is used for writing data during the rendering operations.
            </returns>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary>
            Releases the stream.
            </summary>
      <param name="stream">The stream being released.</param>
    </member>
    <member name="M:Aspose.Html.IO.FileCreateStreamProvider.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.IO.FileCreateStreamProvider.Directory">
      <summary>
            Gets or sets the directory.
            </summary>
      <value>
            The directory.
            </value>
    </member>
    <member name="P:Aspose.Html.IO.FileCreateStreamProvider.Name">
      <summary>
            Gets or sets the name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="T:Aspose.Html.IO.ICreateStreamProvider">
      <summary>
            Represents an interface that can be implemented by classes providing streams to the rendering devices.
            </summary>
    </member>
    <member name="M:Aspose.Html.IO.ICreateStreamProvider.GetStream(System.String,System.String)">
      <summary>
            Provides a stream for rendering.
            </summary>
      <param name="name">The name of the stream.</param>
      <param name="extension">The file name extension to use if a file stream is being created.</param>
      <returns>
            A Stream object that is used for writing data during the rendering operations.
            </returns>
    </member>
    <member name="M:Aspose.Html.IO.ICreateStreamProvider.GetStream(System.String,System.String,System.Int32)">
      <summary>
            Provides a stream for rendering.
            </summary>
      <param name="name">The name of the stream.</param>
      <param name="extension">The file name extension to use if a file stream is being created.</param>
      <param name="page">The page number of the document.</param>
      <returns>
            A Stream object that is used for writing data during the rendering operations.
            </returns>
    </member>
    <member name="M:Aspose.Html.IO.ICreateStreamProvider.ReleaseStream(System.IO.Stream)">
      <summary>
            Releases the stream.
            </summary>
      <param name="stream">The stream being released.</param>
    </member>
    <member name="T:Aspose.Html.Drawing.Dimension">
      <summary>
            Provides the base class for dimensions. 
            The general term 'dimension' refers to a number with a unit attached to it, and are denoted by <see cref="T:Aspose.Html.Drawing.UnitType" />.
            </summary>
      <seealso cref="T:Aspose.Html.Drawing.Unit" />
    </member>
    <member name="M:Aspose.Html.Drawing.Dimension.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.Numeric">
      <summary>
            Provides the base class for numeric types.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.GetValue">
      <summary>
            Gets the unit value.
            </summary>
      <returns>
            The object value.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.CompareTo(Aspose.Html.Drawing.Numeric)">
      <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
      <param name="other">The other object to compare.</param>
      <returns>A value that indicates the relative order of the objects being compared.</returns>
      <exception cref="T:System.ArgumentNullException">other</exception>
      <exception cref="T:System.ArgumentException">
      </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.Equals(Aspose.Html.Drawing.Unit)">
      <summary>
            Determines whether the specified <see cref="T:Aspose.Html.Drawing.Unit" />, is equal to this instance.
            </summary>
      <param name="other">The <see cref="T:Aspose.Html.Drawing.Unit" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Drawing.Unit" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
      <exception cref="T:System.NotImplementedException">
      </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.GetValue(Aspose.Html.Drawing.UnitType)">
      <summary>
            Gets the value converted to the specified <see cref="T:Aspose.Html.Drawing.UnitType" />.
            </summary>
      <param name="unitType">Type of the unit.</param>
      <returns>
            Returns value that is converted to specified type.
            </returns>
      <exception cref="T:System.ArgumentNullException">unitType</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Numeric.OnConvert(System.Double,Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Called when unit is converted to the specified unit type.
            </summary>
      <param name="value">The value.</param>
      <param name="fromType">From unit type.</param>
      <param name="toType">To unit type.</param>
      <returns>
            Returns value that is converted to specified type.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.Unit">
      <summary>
            Provides the base class for units of measurement.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.#ctor(Aspose.Html.Drawing.UnitType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Unit" /> class.
            </summary>
      <param name="type">The unit type.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.Equals(Aspose.Html.Drawing.Unit)">
      <summary>
            Determines whether the specified <see cref="T:Aspose.Html.Drawing.Unit" />, is equal to this instance.
            </summary>
      <param name="other">The <see cref="T:Aspose.Html.Drawing.Unit" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Drawing.Unit" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromCentimeters(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in centimeters.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromMillimeters(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in millimeters.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromQuarterMillimeters(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in quarter-millimeters.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromInches(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in inches.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromPicas(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in picas.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromPoints(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in points.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromPixels(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object that is represented in pixels.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Length" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromDegrees(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object that is represented in degrees.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromGradians(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object that is represented in gradians.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromRadians(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object that is represented in radians.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromTurns(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object that is represented in turns.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Angle" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromSeconds(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Time" /> object that is represented in seconds.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Time" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromMilliseconds(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Time" /> object that is represented in milliseconds.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Time" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromHertz(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Frequency" /> object that is represented in hertz.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Frequency" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromKiloHertz(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Frequency" /> object that is represented in kiloHertz.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Frequency" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromDotsPerInch(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object that is represented in dots per inch.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromDotsPerCentimeters(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object that is represented in dots per centimeters.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object.</returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Unit.FromDotsPerPixel(System.Double)">
      <summary>
            Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object that is represented in dots per pixels.
            </summary>
      <param name="value">The value.</param>
      <returns>Returns a <see cref="T:Aspose.Html.Drawing.Resolution" /> object.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.Unit.UnitType">
      <summary>
            Gets the unit type of the <see cref="T:Aspose.Html.Drawing.Unit" />.
            </summary>
      <value>
            The type of the unit.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.UnitType">
      <summary>
            Specifies the unit of measurement.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Em">
      <summary>
            Measurement is relative to the height of the parent element's font.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Ex">
      <summary>
            Measurement is relative to the height of the lowercase letter x of the parent element's font.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Ch">
      <summary>
            Measurement is relative to width of the "0" (zero).
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Rem">
      <summary>
            Measurement is relative to font-size of the root element.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Vw">
      <summary>
            Measurement is relative to 1% of the width of the viewport*
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Vh">
      <summary>
            Measurement is relative to 1% of the height of the viewport* Try it
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Vmin">
      <summary>
            Measurement is relative to 1% of viewport's* smaller dimension Try it
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Vmax">
      <summary>
            Measurement is relative to 1% of viewport's* larger dimension Try it
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Cm">
      <summary>
            Measurement is in centimeters
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Mm">
      <summary>
            Measurement is in millimeters
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Q">
      <summary>
            Measurement is in quarter-millimeters
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.In">
      <summary>
            Measurement is in inches
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Pc">
      <summary>
            Measurement is in picas
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Pt">
      <summary>
            Measurement is in points
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Px">
      <summary>
            Measurement is in pixels
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Deg">
      <summary>
            Measurement is in degrees.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Grad">
      <summary>
            Measurement is in gradians.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Rad">
      <summary>
            Measurement is in radians.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Turn">
      <summary>
            Measurement is in turns.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.S">
      <summary>
            Measurement is in seconds.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Ms">
      <summary>
            Measurement is in milliseconds.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Hz">
      <summary>
            Measurement is in hertz.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.KHz">
      <summary>
            Measurement is in kiloHertz.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Dpi">
      <summary>
            Measurement is in dots per inch.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Dpcm">
      <summary>
            Measurement is in dots per centimeters.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Dppx">
      <summary>
            Measurement is in Dots per pixels unit.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Auto">
      <summary>
            Measurement is not defined.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Percentage">
      <summary>
            Measurement is in percentage.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Integer">
      <summary>
            Measurement is an integer number.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.UnitType.Real">
      <summary>
            Measurement is a real number.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.Equals(Aspose.Html.Drawing.UnitType)">
      <summary>
            Determines whether the specified <see cref="T:Aspose.Html.Drawing.UnitType" />, is equal to this instance.
            </summary>
      <param name="other">The <see cref="T:Aspose.Html.Drawing.UnitType" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:Aspose.Html.Drawing.UnitType" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.op_Equality(Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Determines whether the two specified <see cref="T:Aspose.Html.Drawing.UnitType" /> values are equal.
            </summary>
      <param name="first">The first <see cref="T:Aspose.Html.Drawing.UnitType" /> value to compare.</param>
      <param name="second">The second <see cref="T:Aspose.Html.Drawing.UnitType" /> value to compare.</param>
      <returns>
        <c>true</c> if the both <see cref="T:Aspose.Html.Drawing.UnitType" /> are equal; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.op_Inequality(Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Determines whether the two specified <see cref="T:Aspose.Html.Drawing.UnitType" /> values are not equal.
            </summary>
      <param name="first">The first <see cref="T:Aspose.Html.Drawing.UnitType" /> value to compare.</param>
      <param name="second">The second <see cref="T:Aspose.Html.Drawing.UnitType" /> value to compare.</param>
      <returns>
        <c>true</c> if the both <see cref="T:Aspose.Html.Drawing.UnitType" /> are not equal; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.op_Implicit(System.String)~Aspose.Html.Drawing.UnitType">
      <summary>
            Performs an implicit conversion from <see cref="T:System.String" /> to <see cref="T:Aspose.Html.Drawing.UnitType" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.UnitType.op_Explicit(Aspose.Html.Drawing.UnitType)~System.String">
      <summary>
            Performs an explicit conversion from <see cref="T:Aspose.Html.Drawing.UnitType" /> to <see cref="T:System.String" />.
            </summary>
      <param name="value">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.LengthOrAuto">
      <summary>
            Represents a container for storage length or 'auto' units..
            </summary>
      <seealso cref="T:Aspose.Html.Drawing.Unit" />
    </member>
    <member name="M:Aspose.Html.Drawing.LengthOrAuto.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.LengthOrAuto" /> class and sets state to 'auto'.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.LengthOrAuto.#ctor(Aspose.Html.Drawing.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.LengthOrAuto" /> class and sets state to 'lenght'.
            </summary>
      <param name="length">The length.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.LengthOrAuto.SetAuto">
      <summary>
            Resets container to state 'auto'.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.LengthOrAuto.op_Implicit(Aspose.Html.Drawing.Length)~Aspose.Html.Drawing.LengthOrAuto">
      <summary>
            Performs an implicit conversion from <see cref="P:Aspose.Html.Drawing.LengthOrAuto.Length" /> to <see cref="T:Aspose.Html.Drawing.LengthOrAuto" />.
            </summary>
      <param name="length">The value.</param>
      <returns>
            The result of the conversion.
            </returns>
    </member>
    <member name="P:Aspose.Html.Drawing.LengthOrAuto.UnitType">
      <summary>
            Gets the unit type of the <see cref="T:Aspose.Html.Drawing.Unit" />.
            </summary>
      <value>
            The type of the unit.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.LengthOrAuto.Length">
      <summary>
            Gets or sets the length.
            </summary>
      <value>
            The length.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.LengthOrAuto.IsAuto">
      <summary>
            Gets a value indicating whether this instance is in 'auto'.
            </summary>
      <value>
        <c>true</c> if this instance is automatic; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.Angle">
      <summary>
            The angle data type
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.OnConvert(System.Double,Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Called when unit is converted to the specified unit type.
            </summary>
      <param name="value">The value.</param>
      <param name="fromType">From unit type.</param>
      <param name="toType">To unit type.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_Addition(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator +.
            </summary>
      <param name="a">Parameter a.</param>
      <param name="b">Parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolution
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_Subtraction(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator -.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolutions
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_LessThan(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator &lt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_GreaterThan(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator &gt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_LessThanOrEqual(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator &lt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_GreaterThanOrEqual(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator &gt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_Equality(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Angle.op_Inequality(Aspose.Html.Drawing.Angle,Aspose.Html.Drawing.Angle)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.BrushType">
      <summary>
            Specifies the type of brush.
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.BrushType.Solid">
      <summary>
            Type is ISolidBrush 
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.BrushType.Texture">
      <summary>
            Type is ITextureBrush 
            </summary>
    </member>
    <member name="F:Aspose.Html.Drawing.BrushType.LinearGradient">
      <summary>
            Type is ILinearGradientBrush 
            </summary>
    </member>
    <member name="T:Aspose.Html.Drawing.Frequency">
      <summary>
            The 'frequency' unit.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_Addition(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator +.
            </summary>
      <param name="a">Parameter a.</param>
      <param name="b">Parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolution
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_Subtraction(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator -.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolutions
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_LessThan(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator &lt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_GreaterThan(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator &gt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_LessThanOrEqual(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator &lt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_GreaterThanOrEqual(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator &gt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_Equality(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Frequency.op_Inequality(Aspose.Html.Drawing.Frequency,Aspose.Html.Drawing.Frequency)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.IBrush">
      <summary>
             Declares method for getting of brush type.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.IBrush.Type">
      <summary>
            Get type of brush;
            </summary>
      <returns>Type of brush</returns>
    </member>
    <member name="T:Aspose.Html.Drawing.IGradientBrush">
      <summary>
            Declare methods for getting common properties of gradient brushes.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.IGradientBrush.InterpolationColors">
      <summary>
            Get the interpolation colors that defines a multicolor linear gradient.
            </summary>
      <returns>Interpolation colors.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.IGradientBrush.BlendPositions">
      <summary>
            Get the blend positions that define a custom falloff for the gradient.
            </summary>
      <returns>Blend positions.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.IGradientBrush.BlendFactors">
      <summary>
            Get the blend factors that define a custom falloff for the gradient.
            </summary>
      <returns>Blend factors.</returns>
    </member>
    <member name="T:Aspose.Html.Drawing.IInterpolationColor">
      <summary>
            Desclares methods for getting interpolation color.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.IInterpolationColor.Color">
      <summary>
            Get the color that represents the colors to use at corresponding positions along a gradient.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.IInterpolationColor.Position">
      <summary>
            Gets the color position.
            </summary>
      <value>
            The position.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.ILinearGradientBrush">
      <summary>
             Defines brush interface with a linear gradient.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.Rect">
      <summary>
            Get a rectangular region that defines the starting and ending points of the gradient.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.StartColor">
      <summary>
            Get the starting color of the linear gradient.
            </summary>
      <returns>Start color</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.EndColor">
      <summary>
            Get the ending color of the linear gradient.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.StartPoint">
      <summary>
            Get the starting point of the linear gradient.
            </summary>
      <returns>Start point.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.EndPoint">
      <summary>
            Get the starting point of the linear gradient.
            </summary>
      <returns>End point.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ILinearGradientBrush.Angle">
      <summary>
            Gets the angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.
            </summary>
      <value>
            The angle.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.ISolidBrush">
      <summary>
            Defines brush interface of a single color
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.ISolidBrush.Color">
      <summary>
            Get color of the brush.
            </summary>
      <returns>Color of brush</returns>
    </member>
    <member name="T:Aspose.Html.Drawing.ITextureBrush">
      <summary>
            Defines brush interface that uses an image to fill the interior of a shape.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.ITextureBrush.Image">
      <summary>
            Gets or sets the image used by the brush.
            </summary>
      <returns>Image data.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITextureBrush.Opacity">
      <summary>
            Get opacity value in a color transform matrix.
            </summary>
      <returns>Opacity.</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITextureBrush.ImageArea">
      <summary>
            Specifies the portion of the image used by the brush.
            If it equals RectangleF.Empty then the whole image will be used.
            Coordinates are in pixels.
            </summary>
      <returns>Image area</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITextureBrush.ColorMap">
      <summary>
            The number of elements must be even. Every even element is old color. Every odd element is new color.
            </summary>
      <value>
            The color map.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.ITransformableBrush">
      <summary>
            Desclares methods for getting transformation matrix and wrap mode.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.ITransformableBrush.TransformationMatrix">
      <summary>
             Get the transform. The transform defines a local geometric transform for this brush.
            </summary>
      <returns>Transform matrix</returns>
    </member>
    <member name="P:Aspose.Html.Drawing.ITransformableBrush.WrapMode">
      <summary>
            Gets or sets the wrap mode. Wrap mode specifies how a texture or gradient is tiled
            when it is smaller than the area being filled.
            </summary>
      <returns>Wrap mode</returns>
    </member>
    <member name="T:Aspose.Html.Drawing.Length">
      <summary>
            Represents a length measurement unit.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.OnConvert(System.Double,Aspose.Html.Drawing.UnitType,Aspose.Html.Drawing.UnitType)">
      <summary>
            Called when unit is converted to the specified unit type.
            </summary>
      <param name="value">The value.</param>
      <param name="fromType">From unit type.</param>
      <param name="toType">To unit type.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_Addition(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator +.
            </summary>
      <param name="a">Parameter a.</param>
      <param name="b">Parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolution
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_Subtraction(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator -.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolutions
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_LessThan(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator &lt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_GreaterThan(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator &gt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_LessThanOrEqual(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator &lt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_GreaterThanOrEqual(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator &gt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_Equality(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Length.op_Inequality(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.Margin">
      <summary>
            Represents page margin.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Margin.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Margin" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Margin.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Margin" /> class.
            </summary>
      <param name="anyMargin">Any margin size.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Margin.#ctor(Aspose.Html.Drawing.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Margin" /> class.
            </summary>
      <param name="anyMargin">Any margin size.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Margin.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Margin" /> class.
            </summary>
      <param name="left">The left size.</param>
      <param name="top">The top size.</param>
      <param name="right">The right size.</param>
      <param name="bottom">The bottom size.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Margin.#ctor(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Margin" /> class.
            </summary>
      <param name="left">The left size.</param>
      <param name="top">The top size.</param>
      <param name="right">The right size.</param>
      <param name="bottom">The bottom size.</param>
    </member>
    <member name="P:Aspose.Html.Drawing.Margin.Top">
      <summary>
            Gets or sets the top.
            </summary>
      <value>
            The top.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.Margin.Right">
      <summary>
            Gets or sets the right.
            </summary>
      <value>
            The right.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.Margin.Bottom">
      <summary>
            Gets or sets the bottom.
            </summary>
      <value>
            The bottom.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.Margin.Left">
      <summary>
            Gets or sets the left.
            </summary>
      <value>
            The left.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.Page">
      <summary>
            Represents a page object is used for configuration output page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Page.#ctor(Aspose.Html.Drawing.Size,Aspose.Html.Drawing.Margin)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Page" /> class.
            </summary>
      <param name="size">The page size.</param>
      <param name="margin">The margin.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Page.#ctor(Aspose.Html.Drawing.Size)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Page" /> class.
            </summary>
      <param name="size">The page size.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Page.#ctor(Aspose.Html.Drawing.Margin)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Page" /> class.
            </summary>
      <param name="margin">The margin.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Page.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Page" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Html.Drawing.Page.Size">
      <summary>
            Gets or sets the page size.
            </summary>
      <value>
            The size.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.Page.Margin">
      <summary>
            Gets or sets the page margin.
            </summary>
      <value>
            The margin.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.Resolution">
      <summary>
            Represents a resolution unit.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_Addition(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator +.
            </summary>
      <param name="a">Parameter a.</param>
      <param name="b">Parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolution
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_Subtraction(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator -.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolutions
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_LessThan(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator &lt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_GreaterThan(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator &gt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_LessThanOrEqual(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator &lt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_GreaterThanOrEqual(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator &gt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_Equality(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Resolution.op_Inequality(Aspose.Html.Drawing.Resolution,Aspose.Html.Drawing.Resolution)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Html.Drawing.Size">
      <summary>
            Stores a values which specify a Height and Width.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Size.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Size" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Size.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Size" /> class and specify a Height and Width in pixels.
            </summary>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
    </member>
    <member name="M:Aspose.Html.Drawing.Size.#ctor(Aspose.Html.Drawing.Length,Aspose.Html.Drawing.Length)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Drawing.Size" /> class.
            </summary>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
    </member>
    <member name="P:Aspose.Html.Drawing.Size.Height">
      <summary>
            Gets or sets the vertical component of this <see cref="T:Aspose.Html.Drawing.Size" />.
            </summary>
      <value>
            The vertical component of this <see cref="T:Aspose.Html.Drawing.Size" />.
            </value>
    </member>
    <member name="P:Aspose.Html.Drawing.Size.Width">
      <summary>
            Gets or sets the horizontal component of this <see cref="T:Aspose.Html.Drawing.Size" />.
            </summary>
      <value>
            The horizontal component of this <see cref="T:Aspose.Html.Drawing.Size" />.
            </value>
    </member>
    <member name="T:Aspose.Html.Drawing.Time">
      <summary>
            Represents a time unit.
            </summary>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_Addition(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator +.
            </summary>
      <param name="a">Parameter a.</param>
      <param name="b">Parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolution
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_Subtraction(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator -.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentNullException">Arguments are null</exception>
      <exception cref="T:System.ArgumentException">
            Arguments have different types
            or
            Arguments have different resolutions
            or
            </exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_LessThan(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator &lt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_GreaterThan(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator &gt;.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_LessThanOrEqual(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator &lt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_GreaterThanOrEqual(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator &gt;=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
      <exception cref="T:System.ArgumentException">Arguments have different types</exception>
      <exception cref="T:System.ArgumentNullException">An argument is null</exception>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_Equality(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="M:Aspose.Html.Drawing.Time.op_Inequality(Aspose.Html.Drawing.Time,Aspose.Html.Drawing.Time)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="a">The parameter a.</param>
      <param name="b">The parameter b.</param>
      <returns>
            The result of the operator.
            </returns>
    </member>
    <member name="T:Aspose.Html.Collections.IDOMCollectionIndexer`1">
      <summary>
            Indexer for DOM Collection classes.
            </summary>
      <typeparam name="T">Collection entity type</typeparam>
    </member>
    <member name="P:Aspose.Html.Collections.IDOMCollectionIndexer`1.Item(System.Int32)">
      <summary>
            Gets item value by index.
            </summary>
      <param name="index">Index integer</param>
      <returns>Resurns element associated with index.</returns>
    </member>
    <member name="T:Aspose.Html.Collections.HTMLCollection">
      <summary>
            The <see cref="T:Aspose.Html.Collections.HTMLCollection" /> represents a generic collection of <see cref="T:Aspose.Html.Dom.Element" />.
            </summary>
      <seealso cref="!:System.Collections.Generic.IEnumerable&lt;Aspose.Html.Dom.Element&gt;" />
      <seealso cref="!:IDOMCollectionIndexer&lt;Aspose.Html.Dom.Element&gt;" />
      <seealso cref="T:System.Collections.Generic.IEnumerable`1" />
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:Aspose.Html.Collections.HTMLCollection.#ctor(Aspose.Html.Dom.Node,Aspose.Html.Dom.Traversal.Filters.NodeFilter)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Collections.HTMLCollection" /> class.
            </summary>
      <param name="owner">The owner node.</param>
      <param name="filter">The node filter.</param>
    </member>
    <member name="M:Aspose.Html.Collections.HTMLCollection.NamedItem(System.String)">
      <summary>
            Returns the item in the collection matched specified name.
            </summary>
      <param name="name">The element name.</param>
      <returns>
            The matched element
            </returns>
    </member>
    <member name="M:Aspose.Html.Collections.HTMLCollection.GetEnumerator">
      <summary>
            Gets the enumerator.
            </summary>
      <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="M:Aspose.Html.Collections.HTMLCollection.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Aspose.Html.Collections.HTMLCollection.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.Collections.HTMLCollection.Item(System.Int32)">
      <summary>
            Returns the index-th item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </value>
      <param name="index">The index.</param>
      <returns>
            Returns element.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.HTMLCollection.Length">
      <summary>
            The number of nodes in the list.
            </summary>
    </member>
    <member name="T:Aspose.Html.Collections.NodeList">
      <summary>
            The NodeList provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented.
            </summary>
    </member>
    <member name="M:Aspose.Html.Collections.NodeList.#ctor(Aspose.Html.Dom.Node)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Collections.NodeList" /> class.
            </summary>
      <param name="owner">The node owner.</param>
    </member>
    <member name="M:Aspose.Html.Collections.NodeList.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.NodeList.Item(System.Int32)">
      <summary>
            Method returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
            </summary>
      <param name="index">The index.</param>
      <returns>
            Returns node.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.NodeList.Length">
      <summary>
            The number of nodes in the list.
            </summary>
    </member>
    <member name="T:Aspose.Html.Collections.NamedNodeMap">
      <summary>
            Represents collections of attributes that can be accessed by name.
            </summary>
      <seealso cref="T:System.Collections.Generic.IEnumerable`1" />
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.GetNamedItem(System.String)">
      <summary>
            Retrieves a node specified by name.
            </summary>
      <param name="name">The node name.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.GetNamedItemNS(System.String,System.String)">
      <summary>
            Retrieves a node specified by local name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.SetNamedItem(Aspose.Html.Dom.Attr)">
      <summary>
            Adds a node using its nodeName attribute. If a node with that name is already present in this map, it is replaced by the new one. Replacing a node by itself has no effect.
            </summary>
      <param name="attr">The attribute.</param>
      <returns>
            Returns node.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
      </exception>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.SetNamedItemNS(Aspose.Html.Dom.Attr)">
      <summary>
            Adds a node using its namespaceURI and localName. If a node with that namespace URI and that local name is already present in this map, it is replaced by the new one. Replacing a node by itself has no effect.
            </summary>
      <param name="attr">The attribute.</param>
      <returns>
            Returns node.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
      </exception>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.RemoveNamedItem(System.String)">
      <summary>
            Removes a node specified by name.
            </summary>
      <param name="name">The element name.</param>
      <returns>Removed node.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.RemoveNamedItemNS(System.String,System.String)">
      <summary>
            Removes a node specified by local name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="M:Aspose.Html.Collections.NamedNodeMap.GetEnumerator">
      <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
      <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.NamedNodeMap.Length">
      <summary>
            The number of nodes in this map.
            </summary>
    </member>
    <member name="P:Aspose.Html.Collections.NamedNodeMap.Item(System.Int32)">
      <summary>
            Returns the indexth item in the map. If index is greater than or equal to the number of nodes in this map, this returns null.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Attr" />.
            </value>
      <param name="index">The index.</param>
      <returns>
            Returns node.
            </returns>
    </member>
    <member name="P:Aspose.Html.Collections.NamedNodeMap.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Html.Dom.Attr" /> with the specified name.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.Dom.Attr" />.
            </value>
      <param name="name">The attribute name.</param>
      <returns>
            Returns node.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Attr">
      <summary>
            The Attr interface represents an attribute in an Element object. Typically the allowable values for the attribute are defined in a schema associated with the document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Attr.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns node
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.Name">
      <summary>
            Returns the name of this attribute.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.Specified">
      <summary>
            True if this attribute was explicitly given a value in the instance document, false otherwise.
            </summary>
      <value>
        <c>true</c> if specified; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.Value">
      <summary>
            On retrieval, the value of the attribute is returned as a string.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.OwnerElement">
      <summary>
            The Element node this attribute is attached to or null if this attribute is not in use.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.SchemaTypeInfo">
      <summary>
            The type information associated with this attribute. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.IsId">
      <summary>
            Returns whether this attribute is known to be of type ID (i.e. to contain an identifier for its owner element) or not.
            </summary>
      <value>
        <c>true</c> if this instance is id; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.NodeValue">
      <summary>
            The value of this node, depending on its type.
            </summary>
      <value>
            The node value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.LocalName">
      <summary>
            Returns the local part of the qualified name of this node.
            For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes created with a DOM Level 1 method, such as Document.createElement(), this is always null.
            </summary>
      <value>
            The name of the local.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.NamespaceURI">
      <summary>
            The namespace URI of this node, or null if it is unspecified.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.Prefix">
      <summary>
            The namespace prefix of this node, or null if it is unspecified. When it is defined to be null, setting it has no effect
            </summary>
      <value>
            The prefix.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attr.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.DOMObject">
      <summary>
            The DOMObject type is used to represent an base object for for the entire Document object Model.
            For Java and ECMAScript, DOMObject is bound to the Object type.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.DOMException">
      <summary>
            Represents DOM common exception class.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INDEX_SIZE_ERR">
      <summary>
            If index or size is negative, or greater than the allowed value.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.DOMSTRING_SIZE_ERR">
      <summary>
            If the specified range of text does not fit into a DOMString.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.HIERARCHY_REQUEST_ERR">
      <summary>
            If any Node is inserted somewhere it doesn't belong.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.WRONG_DOCUMENT_ERR">
      <summary>
            If a Node is used in a different document than the one that created it (that doesn't support it).
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_CHARACTER_ERR">
      <summary>
            If an invalid or illegal character is specified, such as in an XML name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NO_DATA_ALLOWED_ERR">
      <summary>
            If data is specified for a Node which does not support data.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NO_MODIFICATION_ALLOWED_ERR">
      <summary>
            If an attempt is made to modify an object where modifications are not allowed.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NOT_FOUND_ERR">
      <summary>
            If an attempt is made to reference a Node in a context where it does not exist.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NOT_SUPPORTED_ERR">
      <summary>
            If the implementation does not support the requested type of object or operation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INUSE_ATTRIBUTE_ERR">
      <summary>
            If an attempt is made to add an attribute that is already in use elsewhere.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_STATE_ERR">
      <summary>
            If an attempt is made to use an object that is not, or is no longer, usable.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.SYNTAX_ERR">
      <summary>
            If an invalid or illegal string is specified.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_MODIFICATION_ERR">
      <summary>
            If an attempt is made to modify the type of the underlying object.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NAMESPACE_ERR">
      <summary>
            If an attempt is made to create or change an object in a way which is incorrect with regard to namespaces.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_ACCESS_ERR">
      <summary>
            If a parameter or an operation is not supported by the underlying object.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.VALIDATION_ERR">
      <summary>
            If a call to a method such as insertBefore or removeChild would make the Node invalid with respect to "partial validity", this exception would be raised and the operation would not be done. This code is used in [DOM Level 3 Validation]. Refer to this specification for further information.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.TYPE_MISMATCH_ERR">
      <summary>
            If the type of an object is incompatible with the expected type of the parameter associated to the object.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.SECURITY_ERR">
      <summary>
            The operation is insecure.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.NETWORK_ERR">
      <summary>
            A network error occurred.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.ABORT_ERR">
      <summary>
            The operation was aborted.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.URL_MISMATCH_ERR">
      <summary>
            The given URL does not match another URL.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.QUOTA_EXCEEDED_ERR">
      <summary>
            The quota has been exceeded.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.TIMEOUT_ERR">
      <summary>
            The operation timed out.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_NODE_TYPE_ERR">
      <summary>
            The supplied node is incorrect or has an incorrect ancestor for this operation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.DATA_CLONE_ERR">
      <summary>
            The object can not be cloned.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.INVALID_EXPRESSION_ERR">
      <summary>
            The expression has a syntax error or otherwise is not a legal expression according to the rules of the specific
            XPathEvaluator or contains specialized extension functions or variables not supported by this implementation.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.DOMException.TYPE_ERR">
      <summary>
            The expression cannot be converted to return the specified type.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.DOMException.Code">
      <summary>
            Gets the exception code.
            </summary>
      <value>
            The exception code.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Error">
      <summary>
            The <see cref="T:Aspose.Html.Dom.Error" /> type corresponds to the set of all possible non-null references to exception objects, 
            including simple exceptions and <see cref="T:Aspose.Html.Dom.DOMException" />.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.EvalError">
      <summary>
            EvalError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.RangeError">
      <summary>
            RangeError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.ReferenceError">
      <summary>
            ReferenceError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.TypeError">
      <summary>
            TypeError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.URIError">
      <summary>
            URIError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.IndexSizeError">
      <summary>
            IndexSizeError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.HierarchyRequestError">
      <summary>
            HierarchyRequestError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.WrongDocumentError">
      <summary>
            WrongDocumentError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.InvalidCharacterError">
      <summary>
            InvalidCharacterError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.NoModificationAllowedError">
      <summary>
            NoModificationAllowedError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.NotFoundError">
      <summary>
            NotFoundError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.NotSupportedError">
      <summary>
            NotSupportedError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.InUseAttributeError">
      <summary>
            InUseAttributeError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.InvalidStateError">
      <summary>
            InvalidStateError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.SyntaxError">
      <summary>
            SyntaxError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.InvalidModificationError">
      <summary>
            InvalidModificationError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.NamespaceError">
      <summary>
            NamespaceError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.SecurityError">
      <summary>
            SecurityError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.NetworkError">
      <summary>
            NetworkError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.AbortError">
      <summary>
            AbortError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.URLMismatchError">
      <summary>
            URLMismatchError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.QuotaExceededError">
      <summary>
            QuotaExceededError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.TimeoutError">
      <summary>
            TimeoutError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.InvalidNodeTypeError">
      <summary>
            InvalidNodeTypeError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.DataCloneError">
      <summary>
            DataCloneError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.EncodingError">
      <summary>
            EncodingError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.NotReadableError">
      <summary>
            NotReadableError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.UnknownError">
      <summary>
            UnknownError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.ConstraintError">
      <summary>
            ConstraintError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.DataError">
      <summary>
            DataError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.TransactionInactiveError">
      <summary>
            TransactionInactiveError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.ReadOnlyError">
      <summary>
            ReadOnlyError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.VersionError">
      <summary>
            VersionError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.OperationError">
      <summary>
            OperationError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.NotAllowedError">
      <summary>
            NotAllowedError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.DOMStringSizeError">
      <summary>
            DOMStringSizeError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.NoDataAllowedError">
      <summary>
            NoDataAllowedError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.InvalidAccessError">
      <summary>
            InvalidAccessError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.ValidationError">
      <summary>
            ValidationError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.TypeMismatchError">
      <summary>
            TypeMismatchError exception name.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Error.InvalidExpressionError">
      <summary>
            InvalidExpressionError exception name.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Error.Name">
      <summary>
            Gets the error name.
            </summary>
      <value>
            The error name.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Error.Message">
      <summary>
            Gets a message that describes the current exception.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.CDATASection">
      <summary>
            CDATA sections are used to escape blocks of text containing characters that would otherwise be regarded as markup.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.CDATASection.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns node
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.CDATASection.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.CDATASection.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.CharacterData">
      <summary>
            The CharacterData extends Node with a set of attributes and methods for accessing character data in the DOM.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.#ctor(System.String,Aspose.Html.Dom.Document)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.CharacterData" /> class.
            </summary>
      <param name="data">The character data.</param>
      <param name="doc">The document.</param>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.SubstringData(System.Int32,System.Int32)">
      <summary>
            Extracts a range of data from the node.
            </summary>
      <param name="offset">The offset.</param>
      <param name="count">The count.</param>
      <returns>The text data</returns>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.AppendData(System.String)">
      <summary>
            Append the string to the end of the character data of the node.
            </summary>
      <param name="arg">The argument.</param>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.InsertData(System.Int32,System.String)">
      <summary>
            Insert a string at the specified 16-bit unit offset.
            </summary>
      <param name="offset">The offset.</param>
      <param name="arg">The argument.</param>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.DeleteData(System.Int32,System.Int32)">
      <summary>
            Remove a range of 16-bit units from the node. 
            </summary>
      <param name="offset">The offset.</param>
      <param name="count">The count.</param>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.ReplaceData(System.Int32,System.Int32,System.String)">
      <summary>
            Replace the characters starting at the specified 16-bit unit offset with the specified string.
            </summary>
      <param name="offset">The offset.</param>
      <param name="count">The count.</param>
      <param name="arg">The argument.</param>
    </member>
    <member name="M:Aspose.Html.Dom.CharacterData.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.CharacterData.Data">
      <summary>
            The character data of the node that implements this interface.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.CharacterData.Length">
      <summary>
            The number of 16-bit units that are available through data and the substringData method below. This may have the value zero, i.e., CharacterData nodes may be empty.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.IChildNode">
      <summary>
            Defines <see cref="T:Aspose.Html.Dom.IChildNode" /> interface that should be implemented by <see cref="T:Aspose.Html.Dom.Node" /> that can have a parent.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.IChildNode.Remove">
      <summary>
            Removes the current node from parent.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Comment">
      <summary>
            Inherits from CharacterData and represents the content of a comment, i.e., all the characters between the starting '<!--' and ending '-->'.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Comment.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns node
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Comment.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Comment.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.DOMConfiguration">
      <summary>
            Represents context configuration for DOM formats. Custom configurations can be made by inheriting from this class.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IServiceProvider" />
      <seealso cref="T:Aspose.Html.Services.IServiceContainer" />
    </member>
    <member name="M:Aspose.Html.Dom.DOMConfiguration.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.DOMConfiguration" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.DOMConfiguration.InitializeServices">
      <summary>
            Initializes the services.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.DOMConfiguration.GetService``1">
      <summary>
            Gets the requested service.
            </summary>
      <typeparam name="TService">The type of service to retrieve.</typeparam>
      <returns>An instance of the service if it could be found, or <value>null</value> if it could not be found</returns>
    </member>
    <member name="M:Aspose.Html.Dom.DOMConfiguration.AddService``1(``0)">
      <summary>
            Adds the specified service to the configuration.
            </summary>
      <typeparam name="TService">The type of service to add.</typeparam>
      <param name="service">An instance of the service to add.</param>
    </member>
    <member name="M:Aspose.Html.Dom.DOMConfiguration.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.DOMConfiguration.Security">
      <summary>
            Gets or sets the sandboxing flag of the configuration.
            </summary>
      <value>
            The security.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Document">
      <summary>
            The Document represents the entire HTML or XML document. Conceptually, it is the root of the document tree, and provides the primary access to the document's data.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Document.#ctor(Aspose.Html.Dom.IBrowsingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Document" /> class.
            </summary>
      <param name="context">The browsing context.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateElement(System.String)">
      <summary>
            Creates an element of the type specified. Note that the instance returned implements the Element interface, so attributes can be specified directly on the returned object.
            </summary>
      <param name="localName">Name of the tag.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateElementNS(System.String,System.String)">
      <summary>
            Creates an element of the given qualified name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="qualifiedName">Name of the qualified.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateDocumentFragment">
      <summary>
            Creates an empty DocumentFragment object.
            </summary>
      <returns>
            The <see cref="T:Aspose.Html.Dom.DocumentFragment" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateTextNode(System.String)">
      <summary>
            Creates a Text node given the specified string.
            </summary>
      <param name="data">The text data.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Text" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateComment(System.String)">
      <summary>
            Creates a Comment node given the specified string.
            </summary>
      <param name="data">The comment data.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Comment" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateCDATASection(System.String)">
      <summary>
            Creates a CDATASection node whose value is the specified string.
            </summary>
      <param name="data">The CDATA data.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.CDATASection" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateProcessingInstruction(System.String,System.String)">
      <summary>
            Creates a ProcessingInstruction node given the specified name and data strings.
            </summary>
      <param name="target">The target.</param>
      <param name="data">The instruction data.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.ProcessingInstruction" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateAttribute(System.String)">
      <summary>
            Creates an Attr of the given name.
            </summary>
      <param name="localName">The attribute name.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Attr" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateAttributeNS(System.String,System.String)">
      <summary>
            Creates an attribute of the given qualified name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="qualifiedName">Name of the qualified.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Attr" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateEntityReference(System.String)">
      <summary>
            Creates an EntityReference object. In addition, if the referenced entity is known, the child list of the EntityReference node is made the same as that of the corresponding Entity node.
            </summary>
      <param name="name">The entity name.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.EntityReference" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateDocumentType(System.String,System.String,System.String,System.String)">
      <summary>
            Creates a DocumentType node.
            </summary>
      <param name="name">The document type name.</param>
      <param name="publicId">The public id.</param>
      <param name="systemId">The system id.</param>
      <param name="internalSubset">The internal subset.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.DocumentType" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.GetElementsByTagName(System.String)">
      <summary>
            Returns a NodeList of all the Elements in document order with a given tag name and are contained in the document.
            </summary>
      <param name="tagname">The tagname.</param>
      <returns>
            Returns nodes.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.GetElementsByTagNameNS(System.String,System.String)">
      <summary>
            Returns a NodeList of all the Elements with a given local name and namespace URI in document order.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>
            Returns nodes
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.GetElementById(System.String)">
      <summary>
            Returns the Element that has an ID attribute with the given value. If no such element exists, this returns null. If more than one element has an ID attribute with that value, what is returned is undefined.
            </summary>
      <param name="elementId">The element id.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.GetElementsByClassName(System.String)">
      <summary>
            Returns a live NodeList object containing all the elements in the document that have all the classes specified in argument.
            http://www.w3.org/TR/dom/
            </summary>
      <param name="classNames">The string string that contains an unordered set of unique space-separated tokens representing classes (class names)</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateNodeIterator(Aspose.Html.Dom.Node,System.Int64,Aspose.Html.Dom.Traversal.INodeFilter)">
      <summary>
            Create a new NodeIterator over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will be iterated together with its children.
            The iterator is initially positioned just before this node. The
            whatToShow flags and the filter, if any, are not
            considered when setting this position. The root must not be
            null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the iterator. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using
            OR.</param>
      <param name="filter">NodeFilter to be used with this
            TreeWalker, or null to indicate no filter.</param>
      <returns>
            The newly created NodeIterator.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateTreeWalker(Aspose.Html.Dom.Node,System.Int64,Aspose.Html.Dom.Traversal.INodeFilter)">
      <summary>
            Create a new TreeWalker over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will serve as the root for the
            TreeWalker. The whatToShow flags and the
            NodeFilter are not considered when setting this value;
            any node type will be accepted as the root. The
            currentNode of the TreeWalker is
            initialized to this node, whether or not it is visible. The
            root functions as a stopping point for traversal
            methods that look upward in the document structure, such as
            parentNode and nextNode. The root must
            not be null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the tree-walker. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using OR.</param>
      <param name="filter">NodeFilter to be used with this
            TreeWalker, or null to indicate no filter.</param>
      <returns>
            The newly created TreeWalker.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.QuerySelectorAll(System.String)">
      <summary>
            Returns a NodeList of all the Elements in document, which match selector
            </summary>
      <param name="selector">The query selector</param>
      <returns>
        <see cref="T:Aspose.Html.Collections.HTMLCollection" />
      </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.QuerySelector(System.String)">
      <summary>
            Returns the first Element in document, which match selector
            </summary>
      <param name="selector">The selector.</param>
      <returns>The matched node.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.ImportNode(Aspose.Html.Dom.Node,System.Boolean)">
      <summary>
            Imports a node from another document to this document, without altering or removing the source node from the original document; this method creates a new copy of the source node.
            </summary>
      <param name="importedNode">The imported node.</param>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Node" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateEvent(System.String)">
      <summary>
            Creates an <see cref="T:Aspose.Html.Dom.Events.Event" /> of a type supported by the implementation.
            </summary>
      <param name="eventType">The eventType parameter specifies the type of <see cref="T:Aspose.Html.Dom.Events.Event" /> interface to be created.
            <remarks>
            If the <see cref="T:Aspose.Html.Dom.Events.Event" /> interface specified is supported by the implementation this method will
            return a new <see cref="T:Aspose.Html.Dom.Events.Event" /> of the interface type requested.
            If the <see cref="T:Aspose.Html.Dom.Events.Event" /> is to be dispatched via the <see cref="M:Aspose.Html.Dom.Events.IEventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method the appropriate <see cref="M:Aspose.Html.Dom.Events.Event.InitEvent(System.String,System.Boolean,System.Boolean)" />
            method must be called after creation in order to initialize the <see cref="T:Aspose.Html.Dom.Events.Event" />'s values.
            <para>
            The <see cref="M:Aspose.Html.Dom.Events.IDocumentEvent.CreateEvent(System.String)" /> method is used in creating <see cref="T:Aspose.Html.Dom.Events.Event" />s when it is either inconvenient or unnecessary
            for the user to create an <see cref="T:Aspose.Html.Dom.Events.Event" /> themselves.
            In cases where the implementation provided <see cref="T:Aspose.Html.Dom.Events.Event" /> is insufficient, users may supply
            their own <see cref="T:Aspose.Html.Dom.Events.Event" /> implementations for use with the <see cref="M:Aspose.Html.Dom.Events.IEventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method.
            </para></remarks></param>
      <returns>
            The newly created <see cref="T:Aspose.Html.Dom.Events.Event" /></returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the implementation does not support the type of <see cref="T:Aspose.Html.Dom.Events.Event" /> interface requested</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Write(System.String[])">
      <summary>
            Write a string of text to a document stream opened by
            open(). Note that the function will produce a document
            which is not necessarily driven by a DTD and therefore might be
            produce an invalid result in the context of the document.
            </summary>
      <param name="texts">The string to be parsed into some structure in the
            document structure model.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Document.WriteLn(System.String[])">
      <summary>
            Write a string of text followed by a newline character to a document
            stream opened by open(). Note that the function will
            produce a document which is not necessarily driven by a DTD and
            therefore might be produce an invalid result in the context of the
            document
            </summary>
      <param name="texts">The string to be parsed into some structure in the
            document structure model.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns node
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateExpression(System.String,Aspose.Html.Dom.XPath.IXPathNSResolver)">
      <summary>
            Creates a parsed XPath expression with resolved namespaces. This is useful 
            when an expression will be reused in an application since it makes it possible 
            to compile the expression string into a more efficient internal form and 
            preresolve all namespace prefixes which occur within the expression.
            </summary>
      <param name="expression">The XPath expression string to be parsed.</param>
      <param name="resolver">The <c>resolver</c> permits translation of all prefixes, 
            including the <c>xml</c> namespace prefix, within the XPath expression into 
            appropriate namespace URIs. If this is specified as <c>null</c>, any namespace 
            prefix within the expression will result in <see cref="T:Aspose.Html.Dom.DOMException" /> being 
            thrown with the code <c>NAMESPACE_ERR</c>.</param>
      <returns>
            The compiled form of the XPath expression.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_EXPRESSION_ERR: Raised if the expression is not 
            legal according to the rules of the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">NAMESPACE_ERR: Raised if the expression contains namespace 
            prefixes which cannot be resolved by the specified <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" />.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Document.CreateNSResolver(Aspose.Html.Dom.Node)">
      <summary>
            Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated
            relative to the context of the node where it appeared within the document. This adapter works
            like the DOM Level 3 method <c>lookupNamespaceURI</c> on nodes in resolving the namespaceURI
            from a given prefix using the current information available in the node's hierarchy at the time
            lookupNamespaceURI is called, also correctly resolving the implicit xml prefix.
            </summary>
      <param name="nodeResolver">The node to be used as a context for namespace resolution.</param>
      <returns>
        <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" /> which resolves namespaces with respect to the definitions in scope for a specified node.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Document.Evaluate(System.String,Aspose.Html.Dom.Node,Aspose.Html.Dom.XPath.IXPathNSResolver,Aspose.Html.Dom.XPath.XPathResultType,System.Object)">
      <summary>
            Evaluates an XPath expression string and returns a result of the specified type if possible.
            </summary>
      <param name="expression">The XPath expression string to be parsed and evaluated.</param>
      <param name="contextNode">The context is context node for the evaluation of this XPath expression.</param>
      <param name="resolver">The resolver permits translation of all prefixes, including the xml
            namespace prefix, within the XPath expression into appropriate namespace URIs.</param>
      <param name="type">If a specific type is specified, then the result will be returned as the corresponding type.</param>
      <param name="result">The result specifies a specific result object which may be reused and returned by this method.</param>
      <returns>
            The result of the evaluation of the XPath expression.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Context">
      <summary>
            Gets the current browsing context.
            </summary>
      <value>
            The context.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Implementation">
      <summary>
            The DOMImplementation object that handles this document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Location">
      <summary>
            The location of the document.
            </summary>
      <value>
            The location.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.DocumentURI">
      <summary>
            The location of the document or null if undefined or if the Document was created using DOMImplementation.createDocument.
            </summary>
      <value>
            The document URI.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Origin">
      <summary>
            Gets the document origin.
            </summary>
      <value>
            The origin.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.BaseURI">
      <summary>
            The absolute base URI of this node or null if the implementation wasn't able to obtain an absolute URI.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.CharacterSet">
      <summary>
            Gets the document's encoding.
            </summary>
      <value>
            The document's encoding.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Charset">
      <summary>
            Gets the document's encoding.
            </summary>
      <value>
            The document's encoding.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.InputEncoding">
      <summary>
            Gets the document's encoding.
            </summary>
      <value>
            The document's encoding.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.ContentType">
      <summary>
            Gets the document content type.
            </summary>
      <value>
            The type of the content.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Doctype">
      <summary>
            The Document Type Declaration associated with this document.
            </summary>
      <value>
            The Document Type.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.DocumentElement">
      <summary>
            This is a convenience attribute that allows direct access to the child node that is the document element of the document.
            </summary>
      <value>
            The document element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.FirstElementChild">
      <summary>
            Returns the first child element node of this element. null if this element has no child elements.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.LastElementChild">
      <summary>
            Returns the last child element node of this element. null if this element has no child elements.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.PreviousElementSibling">
      <summary>
            Returns the previous sibling element node of this element. null if this element has no element sibling nodes that come before this one in the document tree.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.NextElementSibling">
      <summary>
            Returns the next sibling element node of this element. null if this element has no element sibling nodes that come after this one in the document tree.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.ChildElementCount">
      <summary>
            Returns the current number of element nodes that are children of this element. 0 if this element has no child nodes that are of nodeType 1.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Document.Children">
      <summary>
            Returns the child elements.
            </summary>
      <value>
            The children.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.XmlStandalone">
      <summary>
            An attribute specifying, as part of the XML declaration, whether this document is standalone. This is false when unspecified.
            </summary>
      <value>
        <c>true</c> if XML standalone; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.XmlVersion">
      <summary>
            An attribute specifying, as part of the XML declaration, the version number of this document. If there is no declaration and if this document supports the "XML" feature, the value is "1.0". If this document does not support the "XML" feature, the value is always null.
            </summary>
      <value>
            The XML version.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Document.StrictErrorChecking">
      <summary>
            An attribute specifying whether error checking is enforced or not. When set to false, the implementation is free to not test every possible error case normally defined on DOM operations, and not raise any DOMException on DOM operations or report errors while using Document.normalizeDocument(). In case of error, the behavior is undefined. This attribute is true by default.
            </summary>
      <value>
        <c>true</c> if strict error checking; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.DocumentFragment">
      <summary>
            DocumentFragment is a "lightweight" or "minimal" Document object. It is very common to want to be able to extract a portion of a document's tree or to create a new fragment of a document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.DocumentFragment.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns node
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.InnerHTML">
      <summary>
            Returns a fragment of HTML or XML that represents the element's contents.
            Can be set, to replace the contents of the element with nodes parsed from the given string.
            </summary>
      <value>
            The inner HTML.
            </value>
      <exception cref="T:System.NotImplementedException">
      </exception>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentFragment.OuterHTML">
      <summary>
            Returns a fragment of HTML or XML that represents the element and its contents.
            Can be set, to replace the element with nodes parsed from the given string.
            </summary>
      <value>
            The outer HTML.
            </value>
      <exception cref="T:System.NotImplementedException">
      </exception>
    </member>
    <member name="T:Aspose.Html.Dom.DocumentType">
      <summary>
            The DocumentType provides an interface to the list of entities that are defined for the document
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.DocumentType.#ctor(System.String,System.String,System.String,System.String,Aspose.Html.Dom.Document)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.DocumentType" /> class.
            </summary>
      <param name="name">The entity name.</param>
      <param name="publicId">The public id.</param>
      <param name="systemId">The system id.</param>
      <param name="internalSubset">The internal subset.</param>
      <param name="doc">The document.</param>
    </member>
    <member name="M:Aspose.Html.Dom.DocumentType.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns node
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.DocumentType.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.Name">
      <summary>
            The name of DTD; i.e., the name immediately following the DOCTYPE keyword.
            </summary>
      <value>
            The node name.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.PublicId">
      <summary>
            The public identifier of the external subset.
            </summary>
      <value>
            The public identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.SystemId">
      <summary>
            The system identifier of the external subset. This may be an absolute URI or not.
            </summary>
      <value>
            The system identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.InternalSubset">
      <summary>
            The internal subset as a string, or null if there is none.
            </summary>
      <value>
            The internal subset.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.DocumentType.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Element">
      <summary>
            The Element interface represents an element in an HTML or XML document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Element.#ctor(Aspose.Html.Dom.DOMName,Aspose.Html.Dom.Document)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Element" /> class.
            </summary>
      <param name="name">The elment name.</param>
      <param name="doc">The document.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.HasAttributes">
      <summary>
            Returns whether this node (if it is an element) has any attributes
            </summary>
      <returns>
            boolean <c>true</c> if this node has any attributes, <c>false</c> otherwise.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetAttribute(System.String)">
      <summary>
            Retrieves an attribute value by name.
            </summary>
      <param name="name">The name of the attribute to retrieve.</param>
      <returns>
            Returns attribute value
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetAttributeNS(System.String,System.String)">
      <summary>
            Retrieves an attribute value by local name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetAttribute(System.String,System.String)">
      <summary>
            Adds a new attribute. If an attribute with that name is already present in the element, its value is changed to be that of the value parameter
            </summary>
      <param name="name">The attribute name.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetAttributeNS(System.String,System.String,System.String)">
      <summary>
            Adds a new attribute. If an attribute with the same local name and namespace URI is already present on the element, its prefix is changed to be the prefix part of the qualifiedName, and its value is changed to be the value parameter.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="qualifiedName">Name of the qualified.</param>
      <param name="value">The value.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.RemoveAttribute(System.String)">
      <summary>
            Removes an attribute by name.
            </summary>
      <param name="name">The attribute name.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.RemoveAttributeNS(System.String,System.String)">
      <summary>
            Removes an attribute by local name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.HasAttribute(System.String)">
      <summary>
            Returns true when an attribute with a given name is specified on this element or has a default value, false otherwise.
            </summary>
      <param name="name">The attribute name.</param>
      <returns>
        <c>true</c> if the specified name has attribute; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.HasAttributeNS(System.String,System.String)">
      <summary>
            Returns true when an attribute with a given local name and namespace URI is specified on this element or has a default value, false otherwise.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>
        <c>true</c> if [has attribute NS] [the specified namespace URI]; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetAttributeNode(System.String)">
      <summary>
            Retrieves an attribute node by name.
            </summary>
      <param name="name">The attribute name.</param>
      <returns>
            Returns attribute value
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetAttributeNode(Aspose.Html.Dom.Attr)">
      <summary>
            Adds a new attribute node. If an attribute with that name (nodeName) is already present in the element, it is replaced by the new one.
            </summary>
      <param name="newAttr">The new attr.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.RemoveAttributeNode(Aspose.Html.Dom.Attr)">
      <summary>
            Removes the specified attribute node.
            </summary>
      <param name="oldAttr">The old attr.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetAttributeNodeNS(System.String,System.String)">
      <summary>
            Retrieves an Attr node by local name and namespace URI.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetAttributeNodeNS(Aspose.Html.Dom.Attr)">
      <summary>
            Adds a new attribute. If an attribute with that local name and that namespace URI is already present in the element, it is replaced by the new one.
            </summary>
      <param name="newAttr">The new attr.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetElementsByTagName(System.String)">
      <summary>
            Returns a NodeList of all descendant Elements with a given tag name, in document order.
            </summary>
      <param name="name">The tag name.</param>
      <returns>
            Returns attribute
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetElementsByTagNameNS(System.String,System.String)">
      <summary>
            Returns a NodeList of all the descendant Elements with a given local name and namespace URI in document order.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <returns>
            Returns elements
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.Remove">
      <summary>
            Removes this instance.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Element.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns cloned node
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.QuerySelectorAll(System.String)">
      <summary>
            Returns a NodeList of all the Elements in document, which match selector
            </summary>
      <param name="selector">The selector</param>
      <returns>
        <see cref="T:Aspose.Html.Collections.HTMLCollection" />
      </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.QuerySelector(System.String)">
      <summary>
            Returns the first Element in document, which match selector
            </summary>
      <param name="selector">The selector.</param>
      <returns>The matched element</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetIdAttribute(System.String,System.Boolean)">
      <summary>
            If the parameter isId is true, this method declares the specified attribute to be a user-determined ID attribute.
            </summary>
      <param name="name">The attribute name.</param>
      <param name="isId">if set to <c>true</c> [is id].</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetIdAttributeNS(System.String,System.String,System.Boolean)">
      <summary>
            If the parameter isId is true, this method declares the specified attribute to be a user-determined ID attribute.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="localName">Name of the local.</param>
      <param name="isId">if set to <c>true</c> [is id].</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.SetIdAttributeNode(Aspose.Html.Dom.Attr,System.Boolean)">
      <summary>
            If the parameter isId is true, this method declares the specified attribute to be a user-determined ID attribute.
            </summary>
      <param name="idAttr">The id attr.</param>
      <param name="isId">if set to <c>true</c> [is id].</param>
    </member>
    <member name="M:Aspose.Html.Dom.Element.GetElementsByClassName(System.String)">
      <summary>
            Returns a live NodeList object containing all the elements in the document that have all the classes specified in argument.
            http://www.w3.org/TR/dom/
            </summary>
      <param name="classNames">The string string that contains an unordered set of unique space-separated tokens representing classes (class names)</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Element" />.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Element.Attributes">
      <summary>
            A NamedNodeMap containing the attributes of this node (if it is an Element) or null otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Element.LocalName">
      <summary>
            Returns the local part of the qualified name of this node.
            For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes created with a DOM Level 1 method, such as Document.createElement(), this is always null.
            </summary>
      <value>
            The local part of the qualified name.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.NamespaceURI">
      <summary>
            The namespace URI of this node, or null if it is unspecified.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Element.Prefix">
      <summary>
            The namespace prefix of this node, or null if it is unspecified. When it is defined to be null, setting it has no effect
            </summary>
      <value>
            The namespace prefix of this node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The code representing the type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.TagName">
      <summary>
            The name of the element.
            </summary>
      <value>
            The name of the element.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.Id">
      <summary>
            The element's identifier. See the id attribute definition in HTML 4.01.
            </summary>
      <value>
            The identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.ClassName">
      <summary>
            The class attribute of the element. This attribute has been renamed due
            to conflicts with the "class" keyword exposed by many languages. See
            the class attribute definition in HTML 4.01.
            </summary>
      <value>
            The class attribute.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.FirstElementChild">
      <summary>
            Returns the first child element node of this element. null if this element has no child elements.
            </summary>
      <value>
            The first element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.LastElementChild">
      <summary>
            Returns the last child element node of this element. null if this element has no child elements.
            </summary>
      <value>
            The last element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.PreviousElementSibling">
      <summary>
            Returns the previous sibling element node of this element. null if this element has no element sibling nodes that come before this one in the document tree.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Element.NextElementSibling">
      <summary>
            Returns the next sibling element node of this element. null if this element has no element sibling nodes that come after this one in the document tree.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Element.ChildElementCount">
      <summary>
            Returns the current number of element nodes that are children of this element. 0 if this element has no child nodes that are of nodeType 1.
            </summary>
      <value>
            The child element count.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.Children">
      <summary>
            Returns the child elements of current element.
            </summary>
      <value>
            The children collection
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.SchemaTypeInfo">
      <summary>
            The type information associated with this element.
            </summary>
      <value>
            The schema type information.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Element.InnerHTML">
      <summary>
            Returns a fragment of HTML or XML that represents the element's contents.
            Can be set, to replace the contents of the element with nodes parsed from the given string.
            </summary>
      <value>
            The inner HTML.
            </value>
      <exception cref="T:System.NotImplementedException">
      </exception>
    </member>
    <member name="P:Aspose.Html.Dom.Element.OuterHTML">
      <summary>
            Returns a fragment of HTML or XML that represents the element and its contents.
            Can be set, to replace the element with nodes parsed from the given string.
            </summary>
      <value>
            The outer HTML.
            </value>
      <exception cref="T:System.NotImplementedException">
      </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Entity">
      <summary>
            Represents a known entity, either parsed or unparsed, in an XML document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Entity.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns node
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.PublicId">
      <summary>
            The public identifier associated with the entity if specified, and null otherwise.
            </summary>
      <value>
            The public identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.SystemId">
      <summary>
            The system identifier associated with the entity if specified, and null otherwise. This may be an absolute URI or not.
            </summary>
      <value>
            The system identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.NotationName">
      <summary>
            For unparsed entities, the name of the notation for the entity. For parsed entities, this is null.
            </summary>
      <value>
            The name of the notation.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.InputEncoding">
      <summary>
            An attribute specifying the encoding used for this entity at the time of parsing, when it is an external parsed entity. This is null if it an entity from the internal subset or if it is not known.
            </summary>
      <value>
            The input encoding.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.XmlEncoding">
      <summary>
            An attribute specifying, as part of the text declaration, the encoding of this entity, when it is an external parsed entity. This is null otherwise.
            </summary>
      <value>
            The XML encoding.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.XmlVersion">
      <summary>
            An attribute specifying, as part of the text declaration, the version number of this entity, when it is an external parsed entity. This is null otherwise.
            </summary>
      <value>
            The XML version.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.LocalName">
      <summary>
            Returns the local part of the qualified name of this node.
            For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes created with a DOM Level 1 method, such as Document.createElement(), this is always null.
            </summary>
      <value>
            The name of the local.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Entity.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.EntityReference">
      <summary>
            EntityReference nodes may be used to represent an entity reference in the tree.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.EntityReference.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns node
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.EntityReference.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.EntityReference.LocalName">
      <summary>
            Returns the local part of the qualified name of this node.
            For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes created with a DOM Level 1 method, such as Document.createElement(), this is always null.
            </summary>
      <value>
            The name of the local.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.EntityReference.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.IBrowsingContext">
      <summary>
            A browsing context is an environment in which <see cref="T:Aspose.Html.Dom.Document" /> objects are presented to the user.
            </summary>
      <seealso cref="T:Aspose.Html.Services.IServiceProvider" />
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.Security">
      <summary>
            Gets the sandboxing flag.
            </summary>
      <value>
            The security.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.Parent">
      <summary>
            Gets the parent context, if any.
            </summary>
      <value>
            The parent.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.CreationTime">
      <summary>
            Gets the creation time of the current context.
            </summary>
      <value>
            The creation time.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.ActiveDocument">
      <summary>
            Gets the current document.
            </summary>
      <value>
            The active document.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.Window">
      <summary>
            Gets the WindowProxy object.
            </summary>
      <value>
            The window.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.Network">
      <summary>
            Gets the network services.
            </summary>
      <value>
            The network services.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IBrowsingContext.DOMImplementation">
      <summary>
            Gets the DOM implementation.
            </summary>
      <value>
            The DOM implementation.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.EventTarget">
      <summary>
            The <see cref="T:Aspose.Html.Dom.EventTarget" /> interface is implemented by all Nodes in an implementation which supports the DOM Event Model.
            Therefore, this interface can be obtained by using binding-specific casting methods on an instance of the Node interface.
            The interface allows registration and removal of Event Listeners on an <see cref="T:Aspose.Html.Dom.EventTarget" /> and dispatch of events to that <see cref="T:Aspose.Html.Dom.Events.IEventTarget" />.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)">
      <summary>
            This method allows the registration of event listeners on the event target.
            </summary>
      <param name="type">The event type for which the user is registering</param>
      <param name="handler">Takes an <see cref="T:Aspose.Html.Dom.Events.DOMEventHandler" /> to be called when the event occurs.</param>
      <param name="useCapture">If true, useCapture indicates that the user wishes to initiate capture.
            After initiating capture, all events of the specified type will be dispatched to the registered
            <see cref="T:Aspose.Html.Dom.Events.IEventListener" />
            before being dispatched to any Event Targets beneath them in the tree.
            Events which are bubbling upward through the tree will not trigger an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> designated to use capture.</param>
      <remarks>
        <para>
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is added to an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered
            by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.
            </para>
        <para>
            If multiple identical Event Listeners are registered on the same <see cref="T:Aspose.Html.Dom.EventTarget" /> with the same parameters the duplicate instances are discarded.
            They do not cause the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be called twice and since they are discarded they do not need to be removed with the
            <see cref="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)" />
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)">
      <summary>
            This method allows the registration of event listeners on the event target.
            </summary>
      <param name="type">The event type for which the user is registering</param>
      <param name="listener">Takes an interface implemented by the user which contains the methods to be called when the event occurs.</param>
      <remarks>
        <para>
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is added to an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered
            by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.
            </para>
        <para>
            If multiple identical Event Listeners are registered on the same <see cref="T:Aspose.Html.Dom.EventTarget" /> with the same parameters the duplicate instances are discarded.
            They do not cause the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be called twice and since they are discarded they do not need to be removed with the
            <see cref="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)" />
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.IEventListener,System.Boolean)">
      <summary>
            This method allows the registration of event listeners on the event target.
            </summary>
      <param name="type">The event type for which the user is registering</param>
      <param name="listener">Takes an interface implemented by the user which contains the methods to be called when the event occurs.</param>
      <param name="useCapture">If true, useCapture indicates that the user wishes to initiate capture.
            After initiating capture, all events of the specified type will be dispatched to the registered
            <see cref="T:Aspose.Html.Dom.Events.IEventListener" />
            before being dispatched to any Event Targets beneath them in the tree.
            Events which are bubbling upward through the tree will not trigger an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> designated to use capture.</param>
      <remarks>
        <para>
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is added to an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered
            by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.
            </para>
        <para>
            If multiple identical Event Listeners are registered on the same <see cref="T:Aspose.Html.Dom.EventTarget" /> with the same parameters the duplicate instances are discarded.
            They do not cause the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be called twice and since they are discarded they do not need to be removed with the
            <see cref="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)" />
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)">
      <summary>
            This method allows the removal of event listeners from the event target.
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is removed from an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered by the current actions.
            Event Listeners can never be invoked after being removed.
            </summary>
      <param name="type">Specifies the event type of the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> being removed.</param>
      <param name="handler">The <see cref="T:Aspose.Html.Dom.Events.DOMEventHandler" /> parameter indicates the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be removed.</param>
      <param name="useCapture">Specifies whether the EventListener being removed was registered as a capturing listener or not.
            If a listener was registered twice, one with capture and one without, each must be removed separately.
            Removal of a capturing listener does not affect a non-capturing version of the same listener, and vice versa.</param>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)">
      <summary>
            This method allows the removal of event listeners from the event target.
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is removed from an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered by the current actions.
            Event Listeners can never be invoked after being removed.
            </summary>
      <param name="type">Specifies the event type of the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> being removed.</param>
      <param name="listener">The <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> parameter indicates the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be removed.</param>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener,System.Boolean)">
      <summary>
            This method allows the removal of event listeners from the event target.
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is removed from an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered by the current actions.
            Event Listeners can never be invoked after being removed.
            </summary>
      <param name="type">Specifies the event type of the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> being removed.</param>
      <param name="listener">The <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> parameter indicates the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be removed.</param>
      <param name="useCapture">Specifies whether the EventListener being removed was registered as a capturing listener or not.
            If a listener was registered twice, one with capture and one without, each must be removed separately.
            Removal of a capturing listener does not affect a non-capturing version of the same listener, and vice versa.</param>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)">
      <summary>
            This method allows the dispatch of events into the implementations event model.
            </summary>
      <param name="event">Specifies the event type, behavior, and contextual information to be used in processing the event.</param>
      <returns>
            The return value of <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> indicates whether any of the listeners which handled the event called <see cref="!:IEvent.PreventDefault" />.
            If <see cref="M:Aspose.Html.Dom.Events.Event.PreventDefault" /> was called the value is false, else the value is true.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
      </exception>
      <remarks>
            Events dispatched in this manner will have the same capturing and bubbling behavior as events dispatched directly by the implementation.
            The target of the event is the <see cref="T:Aspose.Html.Dom.EventTarget" /> on which <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> is called.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.EventTarget.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="T:Aspose.Html.Dom.INonElementParentNode">
      <summary>
            Defines <see cref="T:Aspose.Html.Dom.IParentNode" /> that are not Element type.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.INonElementParentNode.GetElementById(System.String)">
      <summary>
            Returns the first element within node's descendants whose ID is elementId.
            </summary>
      <param name="elementId">The element identifier.</param>
      <returns>
            Returns the first matched element.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.IGlobalEventHandlers">
      <summary>
            Represents interface that must be inherited by all element that is supported system event handling
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnAbort">
      <summary>
            Gets or sets event handler for OnAbort event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnBlur">
      <summary>
            Gets or sets event handler for OnBlur event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnCancel">
      <summary>
            Gets or sets event handler for OnCancel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnCanplay">
      <summary>
            Gets or sets event handler for OnCanplay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnCanPlayThrough">
      <summary>
            Gets or sets event handler for OnCanPlayThrough event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnChange">
      <summary>
            Gets or sets event handler for OnChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnClick">
      <summary>
            Gets or sets event handler for OnClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnCueChange">
      <summary>
            Gets or sets event handler for OnCueChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnDblClick">
      <summary>
            Gets or sets event handler for OnDblClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnDurationChange">
      <summary>
            Gets or sets event handler for OnDurationChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnEmptied">
      <summary>
            Gets or sets event handler for OnEmptied event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnEnded">
      <summary>
            Gets or sets event handler for OnEnded event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnError">
      <summary>
            Gets or sets event handler for OnError event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnFocus">
      <summary>
            Gets or sets event handler for OnFocus event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnInput">
      <summary>
            Gets or sets event handler for OnInput event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnInvalid">
      <summary>
            Gets or sets event handler for OnInvalid event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnKeyDown">
      <summary>
            Gets or sets event handler for OnKeyDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnKeyPress">
      <summary>
            Gets or sets event handler for OnKeyPress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnKeyUp">
      <summary>
            Gets or sets event handler for OnKeyUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnLoad">
      <summary>
            Gets or sets event handler for OnLoad event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnLoadedData">
      <summary>
            Gets or sets event handler for OnLoadedData event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnLoadedMetadata">
      <summary>
            Gets or sets event handler for OnLoadedMetadata event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnLoadStart">
      <summary>
            Gets or sets event handler for OnLoadStart event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseDown">
      <summary>
            Gets or sets event handler for OnMouseDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseEnter">
      <summary>
            Gets or sets event handler for OnMouseEnter event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseLeave">
      <summary>
            Gets or sets event handler for OnMouseLeave event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseMove">
      <summary>
            Gets or sets event handler for OnMouseMove event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseOut">
      <summary>
            Gets or sets event handler for OnMouseOut event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseOver">
      <summary>
            Gets or sets event handler for OnMouseOver event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseUp">
      <summary>
            Gets or sets event handler for OnMouseUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnMouseWheel">
      <summary>
            Gets or sets event handler for OnMouseWheel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnPause">
      <summary>
            Gets or sets event handler for OnPause event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnPlay">
      <summary>
            Gets or sets event handler for OnPlay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnPlaying">
      <summary>
            Gets or sets event handler for OnPlaying event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnProgress">
      <summary>
            Gets or sets event handler for OnProgress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnRateChange">
      <summary>
            Gets or sets event handler for OnRateChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnReset">
      <summary>
            Gets or sets event handler for OnReset event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnResize">
      <summary>
            Gets or sets event handler for OnResize event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnScroll">
      <summary>
            Gets or sets event handler for OnScroll event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnSeeked">
      <summary>
            Gets or sets event handler for OnSeeked event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnSeeking">
      <summary>
            Gets or sets event handler for OnSeeking event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnSelect">
      <summary>
            Gets or sets event handler for OnSelect event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnShow">
      <summary>
            Gets or sets event handler for OnShow event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnStalled">
      <summary>
            Gets or sets event handler for OnStalled event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnSubmit">
      <summary>
            Gets or sets event handler for OnSubmit event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnSuspend">
      <summary>
            Gets or sets event handler for OnSuspend event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnTimeUpdate">
      <summary>
            Gets or sets event handler for OnTimeUpdate event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnToggle">
      <summary>
            Gets or sets event handler for OnToggle event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnVolumeChange">
      <summary>
            Gets or sets event handler for OnVolumeChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.Dom.IGlobalEventHandlers.OnWaiting">
      <summary>
            Gets or sets event handler for OnWaiting event.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.IDOMImplementation">
      <summary>
            The DOMImplementation interface provides a number of methods for performing operations that are independent of any particular instance of the document object model.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.IDOMImplementation.HasFeature">
      <summary>
            Test if the DOM implementation implements a specific feature and version, as specified in DOM Features.
            </summary>
      <returns>
        <c>true</c> if the specified feature has feature; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.IDOMImplementation.CreateDocumentType(System.String,System.String,System.String)">
      <summary>
            Creates an empty DocumentType node. Entity declarations and notations are not made available. Entity reference expansions and default attribute additions do not occur.
            </summary>
      <param name="qualifiedName">Name of the qualified.</param>
      <param name="publicId">The public id.</param>
      <param name="systemId">The system id.</param>
      <returns>The <see cref="T:Aspose.Html.Dom.DocumentType" />.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.IDOMImplementation.CreateDocument(System.String,System.String,Aspose.Html.Dom.DocumentType)">
      <summary>
            Creates a DOM Document object of the specified type with its document element.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <param name="qualifiedName">Name of the qualified.</param>
      <param name="doctype">The doctype.</param>
      <returns>Returns document.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.IDOMImplementation.CreateHTMLDocument(System.String)">
      <summary>
            Returns a document, with a basic tree already constructed including a title element, unless the title argument is omitted.
            </summary>
      <param name="title">The title.</param>
      <returns>Returns document.</returns>
    </member>
    <member name="T:Aspose.Html.Dom.Node">
      <summary>
            The Node interface is the primary datatype for the entire Document object Model. It represents a single node in the document tree.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.ELEMENT_NODE">
      <summary>
            An element node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.ATTRIBUTE_NODE">
      <summary>
            An attribute node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.TEXT_NODE">
      <summary>
            A text node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.CDATA_SECTION_NODE">
      <summary>
            A cdata section node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.ENTITY_REFERENCE_NODE">
      <summary>
            An entity reference node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.ENTITY_NODE">
      <summary>
            An entity node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.PROCESSING_INSTRUCTION_NODE">
      <summary>
            A processing instruction node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.COMMENT_NODE">
      <summary>
            A comment node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.DOCUMENT_NODE">
      <summary>
            A document node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.DOCUMENT_TYPE_NODE">
      <summary>
            A document type node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.DOCUMENT_FRAGMENT_NODE">
      <summary>
            A document fragment node
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Node.NOTATION_NODE">
      <summary>
            A notation node
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Node.#ctor(Aspose.Html.Dom.Document)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Node" /> class.
            </summary>
      <param name="document">The document.</param>
      <exception cref="T:System.ArgumentException">
      </exception>
    </member>
    <member name="M:Aspose.Html.Dom.Node.HasChildNodes">
      <summary>
            Returns whether this node has any children.
            </summary>
      <returns>
        <c>true</c> if has child nodes otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.Normalize">
      <summary>
            Puts all Text nodes in the full depth of the sub-tree underneath this Node, including attribute nodes, into a "normal" form where only structure (e.g., elements, comments, processing instructions, CDATA sections, and entity references) separates Text nodes, i.e., there are neither adjacent Text nodes nor empty Text nodes. This can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer [XPointer] lookups) that depend on a particular document tree structure are to be used. If the parameter "normalize-characters" of the DOMConfiguration object attached to the Node.ownerDocument is true, this method will also fully normalize the characters of the Text nodes.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Node.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>Returns node</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.IsEqualNode(Aspose.Html.Dom.Node)">
      <summary>
            Tests whether two nodes are equal.
            This method tests for equality of nodes, not sameness (i.e., whether the two nodes are references to the same object) which can be tested with Node.isSameNode(). All nodes that are the same will also be equal, though the reverse may not be true.
            </summary>
      <param name="arg">The argument.</param>
      <returns>
        <c>true</c> if [is equal node] [the specified arg]; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.IsSameNode(Aspose.Html.Dom.Node)">
      <summary>
            Returns whether this node is the same node as the given one. 
            This method provides a way to determine whether two Node references returned by the implementation reference the same object. When two Node references are references to the same object, even if through a proxy, the references may be used completely interchangeably, such that all attributes have the same values and calling the same DOM method on either reference always has exactly the same effect.
            </summary>
      <param name="other">The other.</param>
      <returns>
        <c>true</c> if [is same node] [the specified other]; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.LookupPrefix(System.String)">
      <summary>
            Look up the prefix associated to the given namespace URI, starting from this node. The default namespace declarations are ignored by this method. 
            See Namespace Prefix Lookup for details on the algorithm used by this method.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <returns>Returns prefix</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.LookupNamespaceURI(System.String)">
      <summary>
            Look up the namespace URI associated to the given prefix, starting from this node.
            </summary>
      <param name="prefix">The prefix.</param>
      <returns>Returns namespace URI</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.IsDefaultNamespace(System.String)">
      <summary>
            This method checks if the specified namespaceURI is the default namespace or not.
            </summary>
      <param name="namespaceURI">The namespace URI.</param>
      <returns>
        <c>true</c> if [is default namespace] [the specified namespace URI]; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.InsertBefore(Aspose.Html.Dom.Node,Aspose.Html.Dom.Node)">
      <summary>
            Inserts the node newChild before the existing child node refChild. If refChild is null, insert newChild at the end of the list of children.
            If newChild is a DocumentFragment object, all of its children are inserted, in the same order, before refChild. If the newChild is already in the tree, it is first removed.
            </summary>
      <param name="newChild">The new child.</param>
      <param name="refChild">The ref child.</param>
      <returns>Returns inserted node</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.ReplaceChild(Aspose.Html.Dom.Node,Aspose.Html.Dom.Node)">
      <summary>
            Replaces the child node oldChild with newChild in the list of children, and returns the oldChild node. 
            If newChild is a DocumentFragment object, oldChild is replaced by all of the DocumentFragment children, which are inserted in the same order. If the newChild is already in the tree, it is first removed.
            </summary>
      <param name="newChild">The new child.</param>
      <param name="oldChild">The old child.</param>
      <returns>Returns node</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.RemoveChild(Aspose.Html.Dom.Node)">
      <summary>
            Removes the child node indicated by oldChild from the list of children, and returns it.
            </summary>
      <param name="oldChild">The old child.</param>
      <returns>Returns node</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.AppendChild(Aspose.Html.Dom.Node)">
      <summary>
            Adds the node newChild to the end of the list of children of this node. If the newChild is already in the tree, it is first removed.
            </summary>
      <param name="newChild">The new child.</param>
      <returns>Returns node</returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.HasAttributes">
      <summary>
            Returns whether this node (if it is an element) has any attributes
            </summary>
      <returns>
              boolean <c>true</c> if this node has any attributes, <c>false</c> otherwise.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Node.Invoke(Aspose.Html.Dom.Events.IEventListener,Aspose.Html.Dom.Events.Event)">
      <summary>
            Invokes the specified listener.
            </summary>
      <param name="listener">The listener.</param>
      <param name="event">The event to invoke.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Node.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Node.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Node.LocalName">
      <summary>
            Returns the local part of the qualified name of this node.
            For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes created with a DOM Level 1 method, such as Document.createElement(), this is always null.
            </summary>
      <value>
            The name of the local.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Node.NamespaceURI">
      <summary>
            The namespace URI of this node, or null if it is unspecified.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.Prefix">
      <summary>
            The namespace prefix of this node, or null if it is unspecified. When it is defined to be null, setting it has no effect
            </summary>
      <value>
            The prefix.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Node.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Node.BaseURI">
      <summary>
            The absolute base URI of this node or null if the implementation wasn't able to obtain an absolute URI. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.OwnerDocument">
      <summary>
            The Document object associated with this node. This is also the Document object used to create new nodes. When this node is a Document or a DocumentType which is not used with any Document yet, this is null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.ParentNode">
      <summary>
            The parent of this node. All nodes, except Attr, Document, DocumentFragment, Entity, and Notation may have a parent. However, if a node has just been created and not yet added to the tree, or if it has been removed from the tree, this is null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.ParentElement">
      <summary>
            Gets the parent <see cref="T:Aspose.Html.Dom.Element" /> of this node.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.ChildNodes">
      <summary>
            A NodeList that contains all children of this node. If there are no children, this is a NodeList containing no nodes..
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.FirstChild">
      <summary>
            The first child of this node. If there is no such node, this returns null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.LastChild">
      <summary>
            The last child of this node. If there is no such node, this returns null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.PreviousSibling">
      <summary>
            The node immediately preceding this node. If there is no such node, this returns null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.NextSibling">
      <summary>
            The node immediately following this node. If there is no such node, this returns null.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.Attributes">
      <summary>
            A NamedNodeMap containing the attributes of this node (if it is an Element) or null otherwise.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Node.NodeValue">
      <summary>
            The value of this node, depending on its type.
            </summary>
      <value>
            The node value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Node.TextContent">
      <summary>
            This attribute returns the text content of this node and its descendants. When it is defined to be null, setting it has no effect. On setting, any possible children this node may have are removed and, if it the new string is not empty or null, replaced by a single Text node containing the string this attribute is set to. 
            </summary>
      <value>
            The content of the text.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.INonDocumentTypeChildNode">
      <summary>
            Defines <see cref="T:Aspose.Html.Dom.IChildNode" /> that are not <see cref="F:Aspose.Html.Dom.Node.DOCUMENT_TYPE_NODE" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.INonDocumentTypeChildNode.PreviousElementSibling">
      <summary>
            Returns the first preceding sibling that is an element, and null otherwise.
            </summary>
      <value>
            The previous element sibling.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.INonDocumentTypeChildNode.NextElementSibling">
      <summary>
            Returns the first following sibling that is an element, and null otherwise.
            </summary>
      <value>
            The next element sibling.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Notation">
      <summary>
            Represents a notation declared in the DTD.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Notation.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns node
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Notation.PublicId">
      <summary>
            The public identifier of this notation. If the public identifier was not specified, this is null.
            </summary>
      <value>
            The public identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Notation.SystemId">
      <summary>
            The system identifier of this notation. If the system identifier was not specified, this is null. This may be an absolute URI or not.
            </summary>
      <value>
            The system identifier.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Notation.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Notation.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.IParentNode">
      <summary>
            Defines the <see cref="T:Aspose.Html.Dom.IParentNode" /> interface that is implemented by any possible parents.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Traversal.IElementTraversal" />
    </member>
    <member name="M:Aspose.Html.Dom.IParentNode.QuerySelector(System.String)">
      <summary>
            Returns the first element that is a descendant of node that matches selectors.
            </summary>
      <param name="selectors">The selectors.</param>
      <returns>Returns the first matched element.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.IParentNode.QuerySelectorAll(System.String)">
      <summary>
            Returns all element descendants of node that match selectors.
            </summary>
      <param name="selectors">The selectors.</param>
      <returns>Returns the static result of running scope-match a selectors string selectors against the context object.</returns>
    </member>
    <member name="P:Aspose.Html.Dom.IParentNode.Children">
      <summary>
            Returns the child elements.
            </summary>
      <value>
            The children.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IParentNode.FirstElementChild">
      <summary>
            Returns the first child that is an element, and null otherwise.
            </summary>
      <value>
            The first element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IParentNode.LastElementChild">
      <summary>
            Returns the last child that is an element, and null otherwise.
            </summary>
      <value>
            The last element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.IParentNode.ChildElementCount">
      <summary>
            The childElementCount attribute must return the number of children of the context object that are elements.
            </summary>
      <value>
            The child element count.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.ProcessingInstruction">
      <summary>
            The ProcessingInstruction represents a "processing instruction", used in XML as a way to keep processor-specific information in the text of the document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.ProcessingInstruction.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns node
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.ProcessingInstruction.Target">
      <summary>
            The target of this processing instruction.
            </summary>
      <value>
            The target.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.ProcessingInstruction.Data">
      <summary>
            The content of this processing instruction.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.ProcessingInstruction.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.ProcessingInstruction.LocalName">
      <summary>
            Returns the local part of the qualified name of this node.
            For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes created with a DOM Level 1 method, such as Document.createElement(), this is always null.
            </summary>
      <value>
            The name of the local.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.ProcessingInstruction.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Text">
      <summary>
            The Text interface inherits from CharacterData and represents the textual content (termed character data in XML) of an Element or Attr.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Text.SplitText(System.Int32)">
      <summary>
            Breaks this node into two nodes at the specified offset, keeping both in the tree as siblings.
            </summary>
      <param name="offset">The offset.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Text" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Text.ReplaceWholeText(System.String)">
      <summary>
            Replaces the text of the current node and all logically-adjacent text nodes with the specified text. All logically-adjacent text nodes are removed including the current node unless it was the recipient of the replacement text.
            </summary>
      <param name="content">The content.</param>
      <returns>
            The <see cref="T:Aspose.Html.Dom.Text" />.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Text.CloneNode(System.Boolean)">
      <summary>
            Returns a duplicate of this node, i.e., serves as a generic copy constructor for nodes. The duplicate node has no parent (parentNode is null) and no user data.
            </summary>
      <param name="deep">if set to <c>true</c> [deep].</param>
      <returns>
            Returns node
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Text.IsElementContentWhitespace">
      <summary>
            Returns whether this text node contains element content whitespace, often abusively called "ignorable whitespace".
            </summary>
      <value>
        <c>true</c> if this instance is element content whitespace; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Text.WholeText">
      <summary>
            Returns all text of Text nodes logically-adjacent text nodes to this node, concatenated in document order.
            </summary>
      <value>
            The whole text.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Text.NodeName">
      <summary>
            The name of this node, depending on its type.
            </summary>
      <value>
            The name of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Text.NodeType">
      <summary>
            A code representing the type of the underlying object.
            </summary>
      <value>
            The type of the node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Text.NodeValue">
      <summary>
            The value of this node, depending on its type.
            </summary>
      <value>
            The node value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Text.LocalName">
      <summary>
            Returns the local part of the qualified name of this node.
            For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes created with a DOM Level 1 method, such as Document.createElement(), this is always null.
            </summary>
      <value>
            The name of the local.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.TypeInfo">
      <summary>
            The TypeInfo represents a type referenced from Element or Attr nodes, specified in the schemas associated with the document.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.TypeInfo.DERIVATION_RESTRICTION">
      <summary>
            If the document's schema is an XML Schema [XML Schema Part 1], this constant represents the derivation by restriction if complex types are involved, or a restriction if simple types are involved. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.TypeInfo.DERIVATION_EXTENSION">
      <summary>
            If the document's schema is an XML Schema [XML Schema Part 1], this constant represents the derivation by extension. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.TypeInfo.DERIVATION_UNION">
      <summary>
            If the document's schema is an XML Schema [XML Schema Part 1], this constant represents the union if simple types are involved. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.TypeInfo.DERIVATION_LIST">
      <summary>
            If the document's schema is an XML Schema [XML Schema Part 1], this constant represents the list. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.TypeInfo.IsDerivedFrom(System.String,System.String,System.UInt64)">
      <summary>
            This method returns if there is a derivation between the reference type definition, i.e. the TypeInfo on which the method is being called, and the other type definition, i.e. the one passed as parameters.
            </summary>
      <param name="typeNamespaceArg">the namespace of the other type definition</param>
      <param name="typeNameArg">the name of the other type definition. </param>
      <param name="derivationMethod">the type of derivation and conditions applied between two types, as described in the list of constants provided in this interface.</param>
      <returns>
              If the document's schema is a DTD or no schema is associated with the document, this method will always return false. If the document's schema is an XML Schema, the method will true if the reference type definition is derived from the other type definition according to the derivation parameter. If the value of the parameter is 0 (no bit is set to 1 for the derivationMethod parameter), the method will return true if the other type definition can be reached by recursing any combination of {base type definition}, {item type definition}, or {member type definitions} from the reference type definition.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.TypeInfo.TypeName">
      <summary>
            The name of a type declared for the associated element or attribute, or null if unknown. 
            </summary>
      <value>
            The name of the type.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.TypeInfo.TypeNamespace">
      <summary>
            Gets the type namespace.The namespace of the type declared for the associated element or attribute or null if the element does not have declaration or if no namespace information is available.
            </summary>
      <value>
            The type namespace.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Views.IAbstractView">
      <summary>
            A base interface that all views shall derive from.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Views.IAbstractView.Document">
      <summary>
            The source DocumentView of which this is an AbstractView.
            </summary>
      <value>
            The document.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Views.IDocumentView">
      <summary>
            The DocumentView interface is implemented by Document objects in DOM implementations supporting DOM Views. It provides an attribute to retrieve the default view of a document.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Views.IAbstractView" />
    </member>
    <member name="P:Aspose.Html.Dom.Views.IDocumentView.DefaultView">
      <summary>
            The default AbstractView for this Document, or null if none available.
            </summary>
      <value>
            The default view.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.IXPathNamespace">
      <summary>
            The XPathNamespace interface is returned by XPathResult interfaces to represent the XPath namespace node type that DOM lacks.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathNamespace.OwnerElement">
      <summary>
            The <see cref="T:Aspose.Html.Dom.Element" /> on which the namespace was in scope when it was requested. 
            This does not change on a returned namespace node even if the document changes such 
            that the namespace goes out of scope on that element and this node is no longer found 
            there by XPath.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.IXPathEvaluator">
      <summary>
            The evaluation of XPath expressions is provided by <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathEvaluator.CreateExpression(System.String,Aspose.Html.Dom.XPath.IXPathNSResolver)">
      <summary>
            Creates a parsed XPath expression with resolved namespaces. This is useful 
            when an expression will be reused in an application since it makes it possible 
            to compile the expression string into a more efficient internal form and 
            preresolve all namespace prefixes which occur within the expression.
            </summary>
      <param name="expression">The XPath expression string to be parsed.</param>
      <param name="resolver">The <c>resolver</c> permits translation of all prefixes, 
            including the <c>xml</c> namespace prefix, within the XPath expression into 
            appropriate namespace URIs. If this is specified as <c>null</c>, any namespace 
            prefix within the expression will result in <see cref="T:Aspose.Html.Dom.DOMException" /> being 
            thrown with the code <c>NAMESPACE_ERR</c>.</param>
      <returns>The compiled form of the XPath expression.</returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_EXPRESSION_ERR: Raised if the expression is not 
            legal according to the rules of the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">NAMESPACE_ERR: Raised if the expression contains namespace 
            prefixes which cannot be resolved by the specified <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" />.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathEvaluator.CreateNSResolver(Aspose.Html.Dom.Node)">
      <summary>
            Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated
            relative to the context of the node where it appeared within the document. This adapter works
            like the DOM Level 3 method <c>lookupNamespaceURI</c> on nodes in resolving the namespaceURI
            from a given prefix using the current information available in the node's hierarchy at the time
            lookupNamespaceURI is called, also correctly resolving the implicit xml prefix.
            </summary>
      <param name="nodeResolver">The node to be used as a context for namespace resolution.</param>
      <returns>
        <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" /> which resolves namespaces with respect to the definitions
            in scope for a specified node.</returns>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathEvaluator.Evaluate(System.String,Aspose.Html.Dom.Node,Aspose.Html.Dom.XPath.IXPathNSResolver,Aspose.Html.Dom.XPath.XPathResultType,System.Object)">
      <summary>
            Evaluates an XPath expression string and returns a result of the specified type if possible.
            </summary>
      <param name="expression">The XPath expression string to be parsed and evaluated.</param>
      <param name="contextNode">The <c>context</c> is context node for the evaluation of this 
            XPath expression. If the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" /> was obtained by casting the 
            <see cref="T:Aspose.Html.Dom.Document" /> then this must be owned by the same document and must be a 
            <see cref="T:Aspose.Html.Dom.Document" />, <see cref="T:Aspose.Html.Dom.Element" />, <see cref="T:Aspose.Html.Dom.Attr" />, <see cref="T:Aspose.Html.Dom.Text" />, 
            <see cref="T:Aspose.Html.Dom.CDATASection" />, <see cref="T:Aspose.Html.Dom.Comment" />, <see cref="T:Aspose.Html.Dom.ProcessingInstruction" />, 
            or <see cref="T:Aspose.Html.Dom.XPath.XPathNamespace" /> node. If the context node is a <see cref="T:Aspose.Html.Dom.Text" /> or a 
            <see cref="T:Aspose.Html.Dom.CDATASection" />, then the context is interpreted as the whole logical text node 
            as seen by XPath, unless the node is empty in which case it may not serve as the XPath context.</param>
      <param name="resolver">The <c>resolver</c> permits translation of all prefixes, including 
            the <c>xml</c> namespace prefix, within the XPath expression into appropriate namespace URIs. 
            If this is specified as <c>null</c>, any namespace prefix within the expression will result 
            in <see cref="T:Aspose.Html.Dom.DOMException" /> being thrown with the code <c>NAMESPACE_ERR</c>.</param>
      <param name="type">If a specific <c>type</c> is specified, then the result will be returned as 
            the corresponding type. For XPath 1.0 results, this must be one of the values of the 
            <see cref="T:Aspose.Html.Dom.XPath.XPathResultType" /> enum.</param>
      <param name="result">The <c>result</c> specifies a specific result object which may be reused 
            and returned by this method. If this is specified as <c>null</c> or the implementation does not 
            reuse the specified result, a new result object will be constructed and returned. For XPath 1.0 
            results, this object will be of type <see cref="T:Aspose.Html.Dom.XPath.IXPathResult" />.</param>
      <returns>The result of the evaluation of the XPath expression. For XPath 1.0 results, this object 
            will be of type <see cref="T:Aspose.Html.Dom.XPath.IXPathResult" />.</returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_EXPRESSION_ERR: Raised if the expression is not legal according 
            to the rules of the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: Raised if the result cannot be converted to return the 
            specified type.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">NAMESPACE_ERR: Raised if the expression contains namespace prefixes 
            which cannot be resolved by the specified <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">WRONG_DOCUMENT_ERR: The Node is from a document that is not supported 
            by this <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: The Node is not a type permitted as an XPath context 
            node or the request type is not permitted by this <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" />.</exception>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.IXPathExpression">
      <summary>
            The <c>XPathExpression</c> interface represents a parsed and resolved XPath expression.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathExpression.Evaluate(Aspose.Html.Dom.Node,Aspose.Html.Dom.XPath.XPathResultType,System.Object)">
      <summary>
            Evaluates this XPath expression and returns a result.
            </summary>
      <param name="contextNode">The <c>context</c> is context node for the evaluation of this XPath expression. 
            If the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" /> was obtained by casting the <see cref="T:Aspose.Html.Dom.Document" /> then this must be 
            owned by the same document and must be a <see cref="T:Aspose.Html.Dom.Document" />, <see cref="T:Aspose.Html.Dom.Element" />, <see cref="T:Aspose.Html.Dom.Attr" />, 
            <see cref="T:Aspose.Html.Dom.Text" />, <see cref="T:Aspose.Html.Dom.CDATASection" />, <see cref="T:Aspose.Html.Dom.Comment" />, <see cref="T:Aspose.Html.Dom.ProcessingInstruction" />, 
            or <see cref="T:Aspose.Html.Dom.XPath.XPathNamespace" /> node. If the context node is a <see cref="T:Aspose.Html.Dom.Text" /> or a <see cref="T:Aspose.Html.Dom.CDATASection" />, 
            then the context is interpreted as the whole logical text node as seen by XPath, unless the node is empty 
            in which case it may not serve as the XPath context.</param>
      <param name="type">If a specific <c>type</c> is specified, then the result will be coerced to return the 
            specified type relying on XPath conversions and fail if the desired coercion is not possible. This must 
            be one of the values of <see cref="T:Aspose.Html.Dom.XPath.XPathResultType" />.</param>
      <param name="result">The <c>result</c> specifies a specific result object which may be reused and returned 
            by this method. If this is specified as <c>null</c> or the implementation does not reuse the specified 
            result, a new result object will be constructed and returned. For XPath 1.0 results, this object will be 
            of type <see cref="T:Aspose.Html.Dom.XPath.IXPathResult" />.</param>
      <returns>The result of the evaluation of the XPath expression. For XPath 1.0 results, this object will be 
            of type <see cref="T:Aspose.Html.Dom.XPath.IXPathResult" />.</returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: Raised if the result cannot be converted to return the specified type.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">WRONG_DOCUMENT_ERR: The Node is from a document that is not supported by 
            the <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" /> that created this <see cref="T:Aspose.Html.Dom.XPath.IXPathExpression" />.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: The Node is not a type permitted as an XPath context node 
            or the request type is not permitted by this <see cref="T:Aspose.Html.Dom.XPath.IXPathExpression" />.</exception>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.IXPathNSResolver">
      <summary>
            The <c>XPathNSResolver</c> interface permit <c>prefix</c> strings in 
            the expression to be properly bound to <c>namespaceURI</c> strings. 
            <see cref="T:Aspose.Html.Dom.XPath.IXPathEvaluator" /> can construct an implementation of 
            <see cref="T:Aspose.Html.Dom.XPath.IXPathNSResolver" /> from a node, or the interface may be 
            implemented by any application.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathNSResolver.LookupNamespaceURI(System.String)">
      <summary>
            Look up the namespace URI associated to the given namespace prefix. 
            The XPath evaluator must never call this with a <c>null</c> or empty 
            argument, because the result of doing this is undefined.
            </summary>
      <param name="prefix">The prefix to look for.</param>
      <returns>Returns the associated namespace URI or <c>null</c> if none 
            is found.</returns>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.IXPathResult">
      <summary>
            The <c>XPathResult</c> interface represents the result of the evaluation of an 
            XPath 1.0 expression within the context of a particular node. Since evaluation 
            of an XPath expression can result in various result types, this object makes it 
            possible to discover and manipulate the type and value of the result.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathResult.IterateNext">
      <summary>
            Iterates and returns the next node from the node set or <c>null</c> if there are no more nodes.
            </summary>
      <returns>Returns the next node.</returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if <c>resultType</c> is not 
            <c>UnorderedNodeIterator</c> type or <c>OrderedNodeIterator</c> type.</exception>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_STATE_ERR: The document has been mutated 
            since the result was returned.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.XPath.IXPathResult.SnapshotItem(System.Int32)">
      <summary>
            Returns the <c>index</c>th item in the snapshot collection. If <c>index</c> is greater than 
            or equal to the number of nodes in the list, this method returns <c>null</c>. Unlike the 
            iterator result, the snapshot does not become invalid, but may not correspond to the current 
            document if it is mutated.
            </summary>
      <param name="index">Index into the snapshot collection.</param>
      <returns>The node at the <c>index</c>th position in the <c>NodeList</c>, or <c>null</c> if 
            that is not a valid index.</returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if <c>resultType</c> is not 
            <c>UnorderedNodeSnapshot</c> type or <c>OrderedNodeSnapshot</c> type.</exception>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.ResultType">
      <summary>
            A code representing the type of this result, as defined by the 
            http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult
            <see cref="T:Aspose.Html.Dom.XPath.XPathResultType" /> enum.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.NumberValue">
      <summary>
            The value of this number result.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if <c>resultType</c> is not 
            <c>Number</c> type.</exception>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.StringValue">
      <summary>
            The value of this string result.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if <c>resultType</c> is not 
            <c>String</c> type.</exception>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.BooleanValue">
      <summary>
            The value of this boolean result.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if <c>resultType</c> is not 
            <c>Boolean</c> type.</exception>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.SingleNodeValue">
      <summary>
            The value of this single node result, which may be <c>null</c>.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if resultType is not 
            <c>AnyUnorderedNode</c> type or <c>FirstOrderedNode</c> type.</exception>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.InvalidIteratorState">
      <summary>
            Signifies that the iterator has become invalid. True if <c>resultType</c> 
            is <c>UnorderedNodeIterator</c> type or <c>OrderedNodeIterator</c> type and 
            the document has been modified since this result was returned.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.XPath.IXPathResult.SnapshotLength">
      <summary>
            The number of nodes in the result snapshot. Valid values for snapshotItem 
            indices are <c>0</c> to <c>snapshotLength-1</c> inclusive.
            </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">TYPE_ERR: raised if resultType is not 
            <c>UnorderedNodeSnapshot</c> type or <c>OrderedNodeSnapshot</c> type.</exception>
    </member>
    <member name="T:Aspose.Html.Dom.XPath.XPathResultType">
      <summary>
            An unsigned short indicating what type of result this is. If a specific 
            <c>type</c> is specified, then the result will be returned as the corresponding 
            type, using XPath type conversions where required and possible.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.Any">
      <summary>
            This code does not represent a specific type. An evaluation of an XPath expression 
            will never produce this type. If this type is requested, then the evaluation returns 
            whatever type naturally results from evaluation of the expression. If the natural 
            result is a node set when <c>Any</c> type was requested, then <c>UnorderedNodeIterator</c> 
            is always the resulting type. Any other representation of a node set must be 
            explicitly requested.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.Number">
      <summary>
            The result is a number as defined by [XPath 1.0]. Document modification does not 
            invalidate the number, but may mean that reevaluation would not yield the same number.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.String">
      <summary>
            The result is a string as defined by [XPath 1.0]. Document modification does not 
            invalidate the string, but may mean that the string no longer corresponds to the 
            current document.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.Boolean">
      <summary>
            The result is a boolean as defined by [XPath 1.0]. Document modification does not 
            invalidate the boolean, but may mean that reevaluation would not yield the same boolean.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.UnorderedNodeIterator">
      <summary>
            The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, 
            which may not produce nodes in a particular order. Document modification invalidates the 
            iteration. This is the default type returned if the result is a node set and <c>Any</c> 
            type is requested.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.OrderedNodeIterator">
      <summary>
            The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, 
            which will produce document-ordered nodes. Document modification invalidates the iteration.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.UnorderedNodeSnapshot">
      <summary>
            The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot 
            list of nodes that may not be in a particular order. Document modification does not 
            invalidate the snapshot but may mean that reevaluation would not yield the same snapshot 
            and nodes in the snapshot may have been altered, moved, or removed from the document.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.OrderedNodeSnapshot">
      <summary>
            The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot 
            list of nodes that will be in original document order. Document modification does not 
            invalidate the snapshot but may mean that reevaluation would not yield the same snapshot 
            and nodes in the snapshot may have been altered, moved, or removed from the document.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.AnyUnorderedNode">
      <summary>
            The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, 
            which may be <c>null</c> if the node set is empty. Document modification does not invalidate 
            the node, but may mean that the result node no longer corresponds to the current document. 
            This is a convenience that permits optimization since the implementation can stop once any 
            node in the resulting set has been found. If there is more than one node in the actual result, 
            the single node returned might not be the first in document order.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.XPath.XPathResultType.FirstOrderedNode">
      <summary>
            The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, 
            which may be <c>null</c> if the node set is empty. Document modification does not invalidate 
            the node, but may mean that the result node no longer corresponds to the current document. 
            This is a convenience that permits optimization since the implementation can stop once the 
            first node in document order of the resulting set has been found. If there are more than one 
            node in the actual result, the single node returned will be the first in document order.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.IDocumentTraversal">
      <summary>
            DocumentTraversal contains methods that create iterators and 
            tree-walkers to traverse a node and its children in document order (depth 
            first, pre-order traversal, which is equivalent to the order in which the 
            start tags occur in the text representation of the document). In DOMs 
            which support the Traversal feature, DocumentTraversal will 
            be implemented by the same objects that implement the Document interface.
            <para>See also the <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">Document object Model (DOM) Level 2 Traversal and Range Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.IDocumentTraversal.CreateNodeIterator(Aspose.Html.Dom.Node,System.Int64,Aspose.Html.Dom.Traversal.INodeFilter)">
      <summary>
            Create a new NodeIterator over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will be iterated together with its children.
            The iterator is initially positioned just before this node. The
            whatToShow flags and the filter, if any, are not
            considered when setting this position. The root must not be
            null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the iterator. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using
            OR.</param>
      <param name="filter">NodeFilter to be used with this
            TreeWalker, or null to indicate no filter.</param>
      <returns>
            The newly created NodeIterator.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if the specified root is
            null.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.IDocumentTraversal.CreateTreeWalker(Aspose.Html.Dom.Node,System.Int64,Aspose.Html.Dom.Traversal.INodeFilter)">
      <summary>
            Create a new TreeWalker over the subtree rooted at the
            specified node.
            </summary>
      <param name="root">node which will serve as the root for the
            TreeWalker. The whatToShow flags and the
            NodeFilter are not considered when setting this value;
            any node type will be accepted as the root. The
            currentNode of the TreeWalker is
            initialized to this node, whether or not it is visible. The
            root functions as a stopping point for traversal
            methods that look upward in the document structure, such as
            parentNode and nextNode. The root must
            not be null.</param>
      <param name="whatToShow">flag specifies which node types may appear in
            the logical view of the tree presented by the tree-walker. See the
            description of NodeFilter for the set of possible
            SHOW_ values.These flags can be combined using OR.</param>
      <param name="filter">NodeFilter to be used with this
            TreeWalker, or null to indicate no filter.</param>
      <returns>
            The newly created TreeWalker.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.IElementTraversal">
      <summary>
            The ElementTraversal interface is a set of read-only attributes which allow an author to easily navigate between elements in a document. In conforming implementations of Element Traversal, all objects that implement Element must also implement the ElementTraversal interface.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.IElementTraversal.FirstElementChild">
      <summary>
            Returns the first child element node of this element. null if this element has no child elements.
            </summary>
      <value>
            The first element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.IElementTraversal.LastElementChild">
      <summary>
            Returns the last child element node of this element. null if this element has no child elements.
            </summary>
      <value>
            The last element child.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.IElementTraversal.PreviousElementSibling">
      <summary>
            Returns the previous sibling element node of this element. null if this element has no element sibling nodes that come before this one in the document tree.
            </summary>
      <value>
            The previous element sibling.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.IElementTraversal.NextElementSibling">
      <summary>
            Returns the next sibling element node of this element. null if this element has no element sibling nodes that come after this one in the document tree.
            </summary>
      <value>
            The next element sibling.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.IElementTraversal.ChildElementCount">
      <summary>
            Returns the current number of element nodes that are children of this element. 0 if this element has no child nodes that are of nodeType 1.
            </summary>
      <value>
            The child element count.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.INodeFilter">
      <summary>
            Filters are objects that know how to "filter out" nodes. If a 
            NodeIterator or TreeWalker is given a 
            NodeFilter, it applies the filter before it returns the next 
            node. If the filter says to accept the node, the traversal logic returns 
            it; otherwise, traversal looks for the next node and pretends that the 
            node that was rejected was not there.
            <para>The DOM does not provide any filters. NodeFilter is just an 
            interface that users can implement to provide their own filters. 
            </para><para>NodeFilters do not need to know how to traverse from node 
            to node, nor do they need to know anything about the data structure that 
            is being traversed. This makes it very easy to write filters, since the 
            only thing they have to know how to do is evaluate a single node. One 
            filter may be used with a number of different kinds of traversals, 
            encouraging code reuse.
            </para><para>See also the <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">Document object Model (DOM) Level 2 Traversal and Range Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.INodeFilter.AcceptNode(Aspose.Html.Dom.Node)">
      <summary>
            Test whether a specified node is visible in the logical view of a 
            TreeWalker or NodeIterator. This function 
            will be called by the implementation of TreeWalker and 
            NodeIterator; it is not normally called directly from 
            user code. (Though you could do so if you wanted to use the same 
            filter to guide your own application logic.) </summary>
      <param name="n"> node to check to see if it passes the filter or not. </param>
      <returns> a constant to determine whether the node is accepted, 
              rejected, or skipped, as defined above. </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.ITraversal">
      <summary>
            Iterators are used to step through a set of nodes, e.g. the 
            set of nodes in a NodeList, the document subtree governed by 
            a particular Node, the results of a query, or any other set 
            of nodes. The set of nodes to be iterated is determined by the 
            implementation of the NodeIterator. DOM Level 2 specifies a 
            single NodeIterator implementation for document-order 
            traversal of a document subtree. Instances of these iterators are created 
            by calling DocumentTraversal
            .createNodeIterator().
            <para>See also the <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">Document object Model (DOM) Level 2 Traversal and Range Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.ITraversal.Root">
      <summary>
            The root node of the NodeIterator, as specified when it
            was created.
            </summary>
      <value>
            The root.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.ITraversal.WhatToShow">
      <summary>
            This attribute determines which node types are presented via the
            iterator. The available set of constants is defined in the
            NodeFilter interface.  Nodes not accepted by
            whatToShow will be skipped, but their children may still
            be considered. Note that this skip takes precedence over the filter,
            if any.
            </summary>
      <value>
            The what to show.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.ITraversal.Filter">
      <summary>
            The NodeFilter used to screen nodes.
            </summary>
      <value>
            The filter.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.INodeIterator">
      <summary>
            Iterators are used to step through a set of nodes, e.g. the 
            set of nodes in a NodeList, the document subtree governed by 
            a particular Node, the results of a query, or any other set 
            of nodes. The set of nodes to be iterated is determined by the 
            implementation of the NodeIterator. DOM Level 2 specifies a 
            single NodeIterator implementation for document-order 
            traversal of a document subtree. Instances of these iterators are created 
            by calling DocumentTraversal
            .createNodeIterator().
            <para>See also the <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">Document object Model (DOM) Level 2 Traversal and Range Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.INodeIterator.NextNode">
      <summary>
            Returns the next node in the set and advances the position of the
            iterator in the set. After a NodeIterator is created,
            the first call to nextNode() returns the first node in
            the set.
            </summary>
      <returns>
            The next Node in the set being iterated over, or
            null if there are no more members in that set.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_STATE_ERR: Raised if this method is called after the
            detach method was invoked.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.INodeIterator.PreviousNode">
      <summary>
            Returns the previous node in the set and moves the position of the
            NodeIterator backwards in the set.
            </summary>
      <returns>
            The previous Node in the set being iterated over,
            or null if there are no more members in that set.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">INVALID_STATE_ERR: Raised if this method is called after the
            detach method was invoked.</exception>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.INodeIterator.Detach">
      <summary>
            Detaches the NodeIterator from the set which it iterated
            over, releasing any computational resources and placing the iterator
            in the INVALID state. After detach has been invoked,
            calls to nextNode or previousNode will
            raise the exception INVALID_STATE_ERR.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.INodeIterator.Root">
      <summary>
            The root node of the NodeIterator, as specified when it
            was created.
            </summary>
      <value>
            The root.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.INodeIterator.ReferenceNode">
      <summary>
            The current reference node.
            </summary>
      <value>
            The reference node.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.INodeIterator.WhatToShow">
      <summary>
            This attribute determines which node types are presented via the
            iterator. The available set of constants is defined in the
            NodeFilter interface.  Nodes not accepted by
            whatToShow will be skipped, but their children may still
            be considered. Note that this skip takes precedence over the filter,
            if any.
            </summary>
      <value>
            The what to show.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.INodeIterator.Filter">
      <summary>
            The NodeFilter used to screen nodes.
            </summary>
      <value>
            The filter.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.INodeIterator.PointerBeforeReferenceNode">
      <summary>
            The value of this flag determines whether the children of entity
            reference nodes are visible to the iterator. If false, they  and
            their descendants will be rejected. Note that this rejection takes
            precedence over whatToShow and the filter. Also note
            that this is currently the only situation where
            NodeIterators may reject a complete subtree rather than
            skipping individual nodes.
            To produce a view of the document that has entity references
            expanded and does not expose the entity reference node itself, use
            the whatToShow flags to hide the entity reference node
            and set expandEntityReferences to true when creating the
            iterator. To produce a view of the document that has entity reference
            nodes but no entity expansion, use the whatToShow flags
            to show the entity reference node and set
            expandEntityReferences to false.
            </summary>
      <value>
        <c>true</c> if [expand entity references]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.ITreeWalker">
      <summary>
            TreeWalker objects are used to navigate a document tree or 
            subtree using the view of the document defined by their 
            whatToShow flags and filter (if any). Any function which 
            performs navigation using a TreeWalker will automatically 
            support any view defined by a TreeWalker.
            <para>Omitting nodes from the logical view of a subtree can result in a 
            structure that is substantially different from the same subtree in the 
            complete, unfiltered document. Nodes that are siblings in the 
            TreeWalker view may be children of different, widely 
            separated nodes in the original view. For instance, consider a 
            NodeFilter that skips all nodes except for Text nodes and 
            the root node of a document. In the logical view that results, all text 
            nodes will be siblings and appear as direct children of the root node, no 
            matter how deeply nested the structure of the original document.
            </para><para>See also the <a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">Document object Model (DOM) Level 2 Traversal and Range Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.ParentNode">
      <summary>
            Moves to and returns the closest visible ancestor node of the current
            node. If the search for parentNode attempts to step
            upward from the TreeWalker's root node, or
            if it fails to find a visible ancestor node, this method retains the
            current position and returns null.
            </summary>
      <returns>
            The new parent node, or null if the current node
            has no parent  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.FirstChild">
      <summary>
            Moves the TreeWalker to the first visible child of the
            current node, and returns the new node. If the current node has no
            visible children, returns null, and retains the current
            node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            visible children  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.LastChild">
      <summary>
            Moves the TreeWalker to the last visible child of the
            current node, and returns the new node. If the current node has no
            visible children, returns null, and retains the current
            node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            children  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.PreviousSibling">
      <summary>
            Moves the TreeWalker to the previous sibling of the
            current node, and returns the new node. If the current node has no
            visible previous sibling, returns null, and retains the
            current node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            previous sibling.  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.NextSibling">
      <summary>
            Moves the TreeWalker to the next sibling of the current
            node, and returns the new node. If the current node has no visible
            next sibling, returns null, and retains the current node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            next sibling.  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.PreviousNode">
      <summary>
            Moves the TreeWalker to the previous visible node in
            document order relative to the current node, and returns the new
            node. If the current node has no previous node,  or if the search for
            previousNode attempts to step upward from the
            TreeWalker's root node,  returns
            null, and retains the current node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            previous node  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.ITreeWalker.NextNode">
      <summary>
            Moves the TreeWalker to the next visible node in document
            order relative to the current node, and returns the new node. If the
            current node has no next node, or if the search for nextNode attempts
            to step upward from the TreeWalker's root
            node, returns null, and retains the current node.
            </summary>
      <returns>
            The new node, or null if the current node has no
            next node  in the TreeWalker's logical view.
            </returns>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.ITreeWalker.Root">
      <summary>
            The root node of the TreeWalker, as specified
            when it was created.
            </summary>
      <value>
            The root.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.ITreeWalker.WhatToShow">
      <summary>
            This attribute determines which node types are presented via the
            TreeWalker. The available set of constants is defined in
            the NodeFilter interface.  Nodes not accepted by
            whatToShow will be skipped, but their children may still
            be considered. Note that this skip takes precedence over the filter,
            if any.
            </summary>
      <value>
            The what to show.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.ITreeWalker.Filter">
      <summary>
            The filter used to screen nodes.
            </summary>
      <value>
            The filter.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Traversal.ITreeWalker.CurrentNode">
      <summary>
            The node at which the TreeWalker is currently positioned.
            Alterations to the DOM tree may cause the current node to no longer
            be accepted by the TreeWalker's associated filter.
            currentNode may also be explicitly set to any node,
            whether or not it is within the subtree specified by the
            root node or would be accepted by the filter and
            whatToShow flags. Further traversal occurs relative to
            currentNode even if it is not part of the current view,
            by applying the filters in the requested direction; if no traversal
            is possible, currentNode is not changed.
            </summary>
      <value>
            The current node.
            </value>
      <exception cref="T:Aspose.Html.Dom.DOMException">NOT_SUPPORTED_ERR: Raised if an attempt is made to set
            currentNode to null.</exception>
    </member>
    <member name="T:Aspose.Html.Dom.Traversal.Filters.NodeFilter">
      <summary>
            Filters are objects that know how to "filter out" nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.FILTER_ACCEPT">
      <summary>
            Accept the node. Navigation methods defined for 
            NodeIterator or TreeWalker will return this 
            node.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.FILTER_REJECT">
      <summary>
            Reject the node. Navigation methods defined for 
            NodeIterator or TreeWalker will not return 
            this node. For TreeWalker, the children of this node 
            will also be rejected. NodeIterators treat this as a 
            synonym for FILTER_SKIP.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.FILTER_SKIP">
      <summary>
            Skip this single node. Navigation methods defined for 
            NodeIterator or TreeWalker will not return 
            this node. For both NodeIterator and 
            TreeWalker, the children of this node will still be 
            considered. 
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_ALL">
      <summary>
            Show all Nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_ELEMENT">
      <summary>
            Show Element nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_ATTRIBUTE">
      <summary>
            Show Attr nodes. This is meaningful only when creating an 
            iterator or tree-walker with an attribute node as its 
            root; in this case, it means that the attribute node 
            will appear in the first position of the iteration or traversal. 
            Since attributes are never children of other nodes, they do not 
            appear when traversing over the document tree.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_TEXT">
      <summary>
            Show Text nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_CDATA_SECTION">
      <summary>
            Show CDATASection nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_ENTITY_REFERENCE">
      <summary>
            Show EntityReference nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_ENTITY">
      <summary>
            Show Entity nodes. This is meaningful only when creating 
            an iterator or tree-walker with an Entity node as its 
            root; in this case, it means that the Entity
             node will appear in the first position of the traversal. Since 
            entities are not part of the document tree, they do not appear when 
            traversing over the document tree.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_PROCESSING_INSTRUCTION">
      <summary>
            Show ProcessingInstruction nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_COMMENT">
      <summary>
            Show Comment nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_DOCUMENT">
      <summary>
            Show Document nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_DOCUMENT_TYPE">
      <summary>
            Show DocumentType nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_DOCUMENT_FRAGMENT">
      <summary>
            Show DocumentFragment nodes.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Traversal.Filters.NodeFilter.SHOW_NOTATION">
      <summary>
            Show Notation nodes. This is meaningful only when creating 
            an iterator or tree-walker with a Notation node as its 
            root; in this case, it means that the 
            Notation node will appear in the first position of the 
            traversal. Since notations are not part of the document tree, they do 
            not appear when traversing over the document tree.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Traversal.Filters.NodeFilter.AcceptNode(Aspose.Html.Dom.Node)">
      <summary>
            Test whether a specified node is visible in the logical view of a
            TreeWalker or NodeIterator. This function
            will be called by the implementation of TreeWalker and
            NodeIterator; it is not normally called directly from
            user code. (Though you could do so if you wanted to use the same
            filter to guide your own application logic.)
            </summary>
      <param name="n">node to check to see if it passes the filter or not.</param>
      <returns>
            a constant to determine whether the node is accepted,
            rejected, or skipped, as defined above.
            </returns>
    </member>
    <member name="T:Aspose.Html.Dom.Events.IEventTarget">
      <summary>
            The <see cref="T:Aspose.Html.Dom.EventTarget" /> interface is implemented by all Nodes in an implementation which supports the DOM Event Model.
            Therefore, this interface can be obtained by using binding-specific casting methods on an instance of the Node interface.
            The interface allows registration and removal of Event Listeners on an <see cref="T:Aspose.Html.Dom.EventTarget" /> and dispatch of events to that <see cref="T:Aspose.Html.Dom.Events.IEventTarget" />.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)">
      <summary>
            This method allows the registration of event listeners on the event target.
            </summary>
      <param name="type">The event type for which the user is registering</param>
      <param name="listener">Takes an interface implemented by the user which contains the methods to be called when the event occurs.</param>
      <remarks>
        <para>
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is added to an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered
            by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.
            </para>
        <para>
            If multiple identical Event Listeners are registered on the same <see cref="T:Aspose.Html.Dom.EventTarget" /> with the same parameters the duplicate instances are discarded.
            They do not cause the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be called twice and since they are discarded they do not need to be removed with the
            <see cref="M:Aspose.Html.Dom.Events.IEventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)" />
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.IEventListener,System.Boolean)">
      <summary>
            This method allows the registration of event listeners on the event target.
            </summary>
      <param name="type">The event type for which the user is registering</param>
      <param name="listener">Takes an interface implemented by the user which contains the methods to be called when the event occurs.</param>
      <param name="useCapture">If true, useCapture indicates that the user wishes to initiate capture.
            After initiating capture, all events of the specified type will be dispatched to the registered
            <see cref="T:Aspose.Html.Dom.Events.IEventListener" />
            before being dispatched to any Event Targets beneath them in the tree.
            Events which are bubbling upward through the tree will not trigger an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> designated to use capture.</param>
      <remarks>
        <para>
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is added to an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered
            by the current actions but may be triggered during a later stage of event flow, such as the bubbling phase.
            </para>
        <para>
            If multiple identical Event Listeners are registered on the same <see cref="T:Aspose.Html.Dom.EventTarget" /> with the same parameters the duplicate instances are discarded.
            They do not cause the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be called twice and since they are discarded they do not need to be removed with the
            <see cref="M:Aspose.Html.Dom.Events.IEventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)" />
            method.
            </para>
      </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener)">
      <summary>
            This method allows the removal of event listeners from the event target.
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is removed from an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered by the current actions.
            Event Listeners can never be invoked after being removed.
            </summary>
      <param name="type">Specifies the event type of the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> being removed.</param>
      <param name="listener">The <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> parameter indicates the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be removed.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventTarget.RemoveEventListener(System.String,Aspose.Html.Dom.Events.IEventListener,System.Boolean)">
      <summary>
            This method allows the removal of event listeners from the event target.
            If an <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> is removed from an <see cref="T:Aspose.Html.Dom.EventTarget" /> while it is processing an event, it will not be triggered by the current actions.
            Event Listeners can never be invoked after being removed.
            </summary>
      <param name="type">Specifies the event type of the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> being removed.</param>
      <param name="listener">The <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> parameter indicates the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> to be removed.</param>
      <param name="useCapture">Specifies whether the EventListener being removed was registered as a capturing listener or not.
            If a listener was registered twice, one with capture and one without, each must be removed separately.
            Removal of a capturing listener does not affect a non-capturing version of the same listener, and vice versa.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)">
      <summary>
            This method allows the dispatch of events into the implementations event model.
            </summary>
      <param name="event">Specifies the event type, behavior, and contextual information to be used in processing the event.</param>
      <returns>
            The return value of <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> indicates whether any of the listeners which handled the event called <see cref="!:IEvent.PreventDefault" />.
            If <see cref="M:Aspose.Html.Dom.Events.Event.PreventDefault" /> was called the value is false, else the value is true.
            </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
      </exception>
      <remarks>
            Events dispatched in this manner will have the same capturing and bubbling behavior as events dispatched directly by the implementation.
            The target of the event is the <see cref="T:Aspose.Html.Dom.EventTarget" /> on which <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> is called.
            </remarks>
    </member>
    <member name="T:Aspose.Html.Dom.Events.Event">
      <summary>
            The <see cref="T:Aspose.Html.Dom.Events.Event" /> is used to provide contextual information about an event to the handler processing the event.
            </summary>
      <remarks>
            An object which implements the <see cref="T:Aspose.Html.Dom.Events.Event" /> is generally passed as the first parameter to an event handler.
            More specific context information is passed to event handlers by deriving additional interfaces from <see cref="T:Aspose.Html.Dom.Events.Event" />  
            which contain information directly relating to the type of event they accompany.
            These derived interfaces are also implemented by the object passed to the event listener.
            </remarks>
    </member>
    <member name="F:Aspose.Html.Dom.Events.Event.NonePhase">
      <summary>
            Events not currently dispatched are in this phase.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.Event.CapturingPhase">
      <summary>
            The event is currently being evaluated at the target <see cref="T:Aspose.Html.Dom.Events.IEventTarget" />.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.Event.AtTargetPhase">
      <summary>
            The current event phase is the capturing phase.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Events.Event.BubblingPhase">
      <summary>
            The current event phase is the bubbling phase.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.#ctor(System.String,Aspose.Html.Dom.IBrowsingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.Event" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="context">The context for IScriptWrapper.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.#ctor(System.String,System.Boolean,System.Boolean,Aspose.Html.Dom.IBrowsingContext)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.Event" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="bubbles">if set to <c>true</c> [bubbles].</param>
      <param name="cancelable">if set to <c>true</c> [cancelable].</param>
      <param name="context">The context.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.#ctor(System.String,System.Boolean,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.Event" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="bubbles">if set to <c>true</c> [bubbles].</param>
      <param name="cancelable">if set to <c>true</c> [cancelable].</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.InitEvent(System.String,System.Boolean,System.Boolean)">
      <summary>
            The <see cref="M:Aspose.Html.Dom.Events.Event.InitEvent(System.String,System.Boolean,System.Boolean)" /> method is used to initialize the value of an <see cref="T:Aspose.Html.Dom.Events.Event" /> created through the
            <see cref="T:Aspose.Html.Dom.Events.IDocumentEvent" /> interface.
            </summary>
      <param name="type">The event type.</param>
      <param name="bubbles">if set to <c>true</c> [bubbles].</param>
      <param name="cancelable">if set to <c>true</c> [cancelable].</param>
      <remarks>
            This method may only be called before the Event has been dispatched via the <see cref="M:Aspose.Html.Dom.Events.IEventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method,
            though it may be called multiple times during that phase if necessary.
            If called multiple times the final invocation takes precedence.
            If called from a subclass of Event interface only the values specified in the initEvent method are modified, all other attributes are left unchanged.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.PreventDefault">
      <summary>
                If an event is cancelable, the <see cref="!:IEvent.PreventDefault" /> method is used to signify that the event is to be canceled,
                meaning any default action normally taken by the implementation as a result of the event will not occur.
            </summary>
      <remarks>
                If, during any stage of event flow, the <see cref="!:IEvent.PreventDefault" /> method is called the event is canceled.
                Any default action associated with the event will not occur.
                Calling this method for a non-cancelable event has no effect.
                Once <see cref="!:IEvent.PreventDefault" /> has been called it will remain in effect throughout the remainder of the event's propagation.
                This method may be used during any stage of event flow.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.StopPropagation">
      <summary>
                The <see cref="!:IEvent.StopPropagation" /> method is used prevent further propagation of an event during event flow.
            </summary>
      <remarks>
                If this method is called by any <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> the event will cease propagating through the tree.
                The event will complete dispatch to all listeners on the current <see cref="T:Aspose.Html.Dom.Events.IEventTarget" /> before event flow stops.
                This method may be used during any stage of event flow.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.Event.StopImmediatePropagation">
      <summary>
            Invoking this method prevents event from reaching any event listeners registered after the current one and when dispatched in a tree also prevents event from reaching any other objects.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.Bubbles">
      <summary>
                Used to indicate whether or not an event is a bubbling event. If the event can bubble the value is true, else the value is false.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.Cancelable">
      <summary>
                Used to indicate whether or not an event can have its default action prevented. If the default action can be prevented the value is true, else the value is false.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.CurrentTarget">
      <summary>
                Used to indicate the <see cref="T:Aspose.Html.Dom.Events.IEventTarget" /> whose <see cref="T:Aspose.Html.Dom.Events.IEventListener" />s are currently being processed.
                This is particularly useful during capturing and bubbling.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.EventPhase">
      <summary>
                Used to indicate which phase of event flow is currently being evaluated.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.Target">
      <summary>
                Used to indicate the <see cref="T:Aspose.Html.Dom.Events.IEventTarget" /> to which the event was originally dispatched.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.TimeStamp">
      <summary>
                Used to specify the time (in milliseconds relative to the epoch) at which the event was created.
                Due to the fact that some systems may not provide this information the value of timeStamp may be not available for all events.
                When not available, a value of 0 will be returned.
                Examples of epoch time are the time of the system start or 0:0:0 UTC 1st January 1970.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.Type">
      <summary>
                The name of the event (case-insensitive). The name must be an XML name.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.DefaultPrevented">
      <summary>
            Returns true if preventDefault() was invoked while the cancelable attribute value is true, and false otherwise.
            </summary>
      <value>
        <c>true</c> if [default prevented]; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.Event.IsTrusted">
      <summary>
            The isTrusted attribute must return the value it was initialized to. When an event is created the attribute must be initialized to false.
            </summary>
      <value>
        <c>true</c> if this instance is trusted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Events.ErrorEvent">
      <summary>
            The <see cref="T:Aspose.Html.Dom.Events.ErrorEvent" /> provides contextual information about an errors that occurred during runtime.
            </summary>
    </member>
    <member name="M:Aspose.Html.Dom.Events.ErrorEvent.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.ErrorEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="exception">The exception.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.ErrorEvent.#ctor(System.String,System.Boolean,System.Boolean,System.String,System.String,System.UInt32,System.UInt32,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Events.ErrorEvent" /> class.
            </summary>
      <param name="type">The event type.</param>
      <param name="bubbles">if set to <c>true</c> [bubbles].</param>
      <param name="cancelable">if set to <c>true</c> [cancelable].</param>
      <param name="message">The message.</param>
      <param name="filename">The filename.</param>
      <param name="lineno">The line number.</param>
      <param name="colno">The column number.</param>
      <param name="error">The error.</param>
    </member>
    <member name="M:Aspose.Html.Dom.Events.ErrorEvent.InitEvent(System.String,System.String,System.UInt32,System.UInt32,System.Object)">
      <summary>
            Initializes the event.
            </summary>
      <param name="message">The message.</param>
      <param name="filename">The filename.</param>
      <param name="lineno">The line number.</param>
      <param name="colno">The column number.</param>
      <param name="error">The error.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Events.ErrorEvent.Message">
      <summary>
            The message attribute must return the value it was initialized to. When the object is created, this attribute must be initialized to the empty string. It represents the error message.
            </summary>
      <value>
            The message.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.ErrorEvent.Filename">
      <summary>
            The filename attribute must return the value it was initialized to. When the object is created, this attribute must be initialized to the empty string. It represents the absolute URL of the script in which the error originally occurred.
            </summary>
      <value>
            The filename.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Events.ErrorEvent.LineNo">
      <summary>
            The lineno attribute must return the value it was initialized to. When the object is created, this attribute must be initialized to zero. It represents the line number where the error occurred in the script.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.ErrorEvent.ColNo">
      <summary>
            The colno attribute must return the value it was initialized to. When the object is created, this attribute must be initialized to zero. It represents the column number where the error occurred in the script.
            </summary>
    </member>
    <member name="P:Aspose.Html.Dom.Events.ErrorEvent.Error">
      <summary>
            The error attribute must return the value it was initialized to. When the object is created, this attribute must be initialized to null. Where appropriate, it is set to the object representing the error (e.g. the exception object in the case of an uncaught DOM exception).
            </summary>
      <value>
            The error.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Events.DOMEventHandler">
      <summary>
            Represents the callback for event handling.
            </summary>
      <param name="sender">The sender.</param>
      <param name="e">The event arguments.</param>
    </member>
    <member name="T:Aspose.Html.Dom.Events.IDocumentEvent">
      <summary>
                The <see cref="T:Aspose.Html.Dom.Events.IDocumentEvent" /> interface provides a mechanism by which the user can create an <see cref="T:Aspose.Html.Dom.Events.Event" /> of a type supported by the implementation.
            </summary>
      <remarks>
                It is expected that the <see cref="T:Aspose.Html.Dom.Events.IDocumentEvent" /> interface will be implemented on the same object which implements the
                <see cref="T:Aspose.Html.Dom.Document" />
                interface in an implementation which supports the Event model.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IDocumentEvent.CreateEvent(System.String)">
      <summary>
                Creates an <see cref="T:Aspose.Html.Dom.Events.Event" /> of a type supported by the implementation.
            </summary>
      <param name="eventType">
                The eventType parameter specifies the type of <see cref="T:Aspose.Html.Dom.Events.Event" /> interface to be created.
                <remarks>
                    If the <see cref="T:Aspose.Html.Dom.Events.Event" /> interface specified is supported by the implementation this method will return a new
                    <see cref="T:Aspose.Html.Dom.Events.Event" /> of the interface type requested.
                    If the <see cref="T:Aspose.Html.Dom.Events.Event" /> is to be dispatched via the <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method the appropriate
                    <see cref="M:Aspose.Html.Dom.Events.Event.InitEvent(System.String,System.Boolean,System.Boolean)" /> method must be called after creation in order to initialize the <see cref="T:Aspose.Html.Dom.Events.Event" />'s values.
                    <para>
                        The <see cref="M:Aspose.Html.Dom.Events.IDocumentEvent.CreateEvent(System.String)" /> method is used in creating <see cref="T:Aspose.Html.Dom.Events.Event" />s when it is either inconvenient
                        or unnecessary for the user to create an <see cref="T:Aspose.Html.Dom.Events.Event" /> themselves.
                        In cases where the implementation provided <see cref="T:Aspose.Html.Dom.Events.Event" /> is insufficient, users may supply their own
                        <see cref="T:Aspose.Html.Dom.Events.Event" /> implementations for use with the <see cref="M:Aspose.Html.Dom.EventTarget.DispatchEvent(Aspose.Html.Dom.Events.Event)" /> method.
                    </para></remarks></param>
      <returns>
                The newly created <see cref="T:Aspose.Html.Dom.Events.Event" /></returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
                NOT_SUPPORTED_ERR: Raised if the implementation does not support the type of <see cref="T:Aspose.Html.Dom.Events.Event" /> interface requested
            </exception>
    </member>
    <member name="T:Aspose.Html.Dom.Events.IEventListener">
      <summary>
                The <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> interface is the primary method for handling events.
                Users implement the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> interface and register their listener on an <see cref="T:Aspose.Html.Dom.EventTarget" />
                using the <see cref="M:Aspose.Html.Dom.EventTarget.AddEventListener(System.String,Aspose.Html.Dom.Events.DOMEventHandler,System.Boolean)" /> method.
                The users should also remove their <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> from its <see cref="T:Aspose.Html.Dom.EventTarget" /> after they have completed using the listener.
            </summary>
      <remarks>
                When a Node is copied using the cloneNode method the Event Listeners attached to the source Node are not attached to the copied Node.
                If the user wishes the same Event Listeners to be added to the newly created copy the user must add them manually.
            </remarks>
    </member>
    <member name="M:Aspose.Html.Dom.Events.IEventListener.HandleEvent(Aspose.Html.Dom.Events.Event)">
      <summary>
                This method is called whenever an event occurs of the type for which the <see cref="T:Aspose.Html.Dom.Events.IEventListener" /> interface was registered.
            </summary>
      <param name="event">
                The <see cref="T:Aspose.Html.Dom.Events.Event" /> contains contextual information about the event.
                It also contains the <see cref="M:Aspose.Html.Dom.Events.Event.StopPropagation" /> and <see cref="M:Aspose.Html.Dom.Events.Event.PreventDefault" /> methods which are used in determining the event's flow and default action.
            </param>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMIndexerAttribute">
      <summary>
            Specifies indexer for DOM object.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="M:Aspose.Html.Dom.Attributes.DOMIndexerAttribute.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Attributes.DOMIndexerAttribute" /> class.
            </summary>
      <param name="indexerType">Type of the indexer.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMIndexerAttribute.IndexerType">
      <summary>
            Gets the inexer type.
            </summary>
      <value>
            The type of indexer.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.Accessors">
      <summary>
            Represents the enumeration of member accessors that is defined by the W3C.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Attributes.Accessors.None">
      <summary>
            Specifies that the property does not have any special meaning.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Attributes.Accessors.Getter">
      <summary>
            Specifies that the property or method should be handled as a getter.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Attributes.Accessors.Setter">
      <summary>
            Specifies that the property or method should be handled as a setter.
            </summary>
    </member>
    <member name="F:Aspose.Html.Dom.Attributes.Accessors.Deleter">
      <summary>
            Specifies that the property or method should be handled by delete.
            </summary>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMAccessorAttribute">
      <summary>
            Specifies an attribute to describe a property accessors that is defined by the W3C.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="M:Aspose.Html.Dom.Attributes.DOMAccessorAttribute.#ctor(Aspose.Html.Dom.Attributes.Accessors)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Attributes.DOMAccessorAttribute" /> class.
            </summary>
      <param name="type">The <see cref="T:Aspose.Html.Dom.Attributes.Accessors" /> type.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMAccessorAttribute.Type">
      <summary>
            Gets the property accessor.
            </summary>
      <value>
            The type.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMTreatNullAsAttribute">
      <summary>
            Indicates that null of the member value will be treated as specified value.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="M:Aspose.Html.Dom.Attributes.DOMTreatNullAsAttribute.#ctor(System.Type,System.Object)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Attributes.DOMTreatNullAsAttribute" /> class.
            </summary>
      <param name="type">The object type.</param>
      <param name="value">The object value.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMTreatNullAsAttribute.Type">
      <summary>
            Gets or sets value the type.
            </summary>
      <value>
            The type.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMTreatNullAsAttribute.Value">
      <summary>
            Gets or sets the value.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMNameAttribute">
      <summary>
            Specifies the official DOM object name as it defined by the W3C.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="M:Aspose.Html.Dom.Attributes.DOMNameAttribute.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Attributes.DOMNameAttribute" /> class.
            </summary>
      <param name="name">The DOM name.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMNameAttribute.Name">
      <summary>
            Gets the DOM name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMNoInterfaceObjectAttribute">
      <summary>
            If the [NoInterfaceObject] extended attribute appears on an interface, it indicates that an interface object will not exist for the interface in the ECMAScript binding.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMParameterAttribute">
      <summary>
            Specifies a DOM parameter that is defined by the W3C.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="M:Aspose.Html.Dom.Attributes.DOMParameterAttribute.#ctor(System.String,System.Object,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Attributes.DOMParameterAttribute" /> class.
            </summary>
      <param name="name">The parameter name.</param>
      <param name="defaultValue">The default value.</param>
      <param name="optional">if set to <c>true</c> [optional].</param>
    </member>
    <member name="M:Aspose.Html.Dom.Attributes.DOMParameterAttribute.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Attributes.DOMParameterAttribute" /> class.
            </summary>
      <param name="name">The parameter name.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMParameterAttribute.Name">
      <summary>
            Gets or sets the parameter name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMParameterAttribute.DefaultValue">
      <summary>
            Gets or sets the default value for parameter.
            </summary>
      <value>
            The default value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMParameterAttribute.Optional">
      <summary>
            Gets or sets a value indicating whether this parameter is optional.
            </summary>
      <value>
        <c>true</c> if optional; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMTimeStampAttribute">
      <summary>
            Indicates that specific DOM object is DOM TimeStamp type.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMNullableAttribute">
      <summary>
            Specifies a DOM object can be assigned null value.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMInitDictParameterAttribute">
      <summary>
            Specifies a DOM InitDict parameter that is defined by the W3C.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="M:Aspose.Html.Dom.Attributes.DOMInitDictParameterAttribute.#ctor(System.String,System.Object,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Attributes.DOMInitDictParameterAttribute" /> class.
            </summary>
      <param name="name">The parameter name.</param>
      <param name="defaultValue">The default value.</param>
      <param name="optional">if set to <c>true</c> [optional].</param>
    </member>
    <member name="M:Aspose.Html.Dom.Attributes.DOMInitDictParameterAttribute.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Dom.Attributes.DOMInitDictParameterAttribute" /> class.
            </summary>
      <param name="name">The parameter name.</param>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMInitDictParameterAttribute.Name">
      <summary>
            Gets or sets the parameter name.
            </summary>
      <value>
            The name.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMInitDictParameterAttribute.DefaultValue">
      <summary>
            Gets or sets the default value for parameter.
            </summary>
      <value>
            The default value.
            </value>
    </member>
    <member name="P:Aspose.Html.Dom.Attributes.DOMInitDictParameterAttribute.Optional">
      <summary>
            Gets or sets a value indicating whether this parameter is optional.
            </summary>
      <value>
        <c>true</c> if optional; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMConstructorAttribute">
      <summary>
            Specifies a constructor that is defined by the W3C.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="T:Aspose.Html.Dom.Attributes.DOMObjectAttribute">
      <summary>
            Specifies that object is marked with this attribute is defined by the W3C.
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="T:Aspose.Html.Rendering.MhtmlRenderer">
      <summary>
            Represents a EPub document renderer.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.MhtmlRenderer.Render(Aspose.Html.Rendering.IDevice,System.IO.Stream)">
      <summary>
            Renders ePub document into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The device.</param>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.MhtmlRenderer.Render(Aspose.Html.Rendering.IDevice,System.IO.Stream,Aspose.Html.Configuration)">
      <summary>
            Renders ePub document into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The device.</param>
      <param name="document">The document.</param>
      <param name="configuration">The configuration.</param>
    </member>
    <member name="T:Aspose.Html.HTMLIsIndexElement">
      <summary>
            This element is used for single-line text input. See the ISINDEX element 
            definition in HTML 4.01. This element is deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLIsIndexElement.Form">
      <summary>
            Returns the <code>FORM</code> element containing this control. Returns 
            <code>null</code> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIsIndexElement.Prompt">
      <summary>
            The prompt message. See the prompt attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLMenuElement">
      <summary>
            Menu list. See the MENU element definition in HTML 4.01. This element is 
            deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLMenuElement.Compact">
      <summary>
            Reduce spacing between list items. See the compact attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.License">
      <summary>
            Provides methods to license the component.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            </code></ms><java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code></java></example>
    </member>
    <member name="M:Aspose.Html.License.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            </code></ms><java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code></java></example>
    </member>
    <member name="M:Aspose.Html.License.SetLicense(System.String)">
      <summary>
            Licenses the component.
            </summary>
      <remarks>
        <p>Tries to find the license in the following locations:</p>
        <p>1. Explicit path.</p>
        <ms>
          <p>2. The folder of the component assembly.</p>
          <p>3. The folder of the client's calling assembly.</p>
          <p>4. The folder of the entry assembly.</p>
          <p>5. An embedded resource in the client's calling assembly.</p>
          <p>
            <b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
          <p>1. Explicit path.</p>
          <p>2. An embedded resource in the client's calling assembly.</p>
        </ms>
        <java>
          <p>2. The folder of the component jar file.</p>
        </java>
      </remarks>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            </code></ms><java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code></java><param name="licenseName">Can be a full or short file name<ms> or name of an embedded resource</ms>.
            Use an empty string to switch to evaluation mode.</param></example>
    </member>
    <member name="M:Aspose.Html.License.SetLicense(System.IO.Stream)">
      <summary>
            Licenses the component.
            </summary>
      <param name="stream">A stream that contains the license.</param>
      <remarks>
        <p>Use this method to load a license from a stream.</p>
      </remarks>
      <example>
        <ms>
          <code>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            </code>
        </ms>
      </example>
    </member>
    <member name="P:Aspose.Html.License.Embedded">
      <summary>
            License number was added as embedded resource.
            </summary>
    </member>
    <member name="T:Aspose.Html.Configuration">
      <summary>
            Represents context configuration for Aspose.HTML library. 
            </summary>
      <seealso cref="T:Aspose.Html.Dom.DOMConfiguration" />
    </member>
    <member name="M:Aspose.Html.Configuration.InitializeServices">
      <summary>
            Initializes the services.
            </summary>
    </member>
    <member name="T:Aspose.Html.IHTMLOptionsCollection">
      <summary>
             An <c>HTMLOptionsCollection</c> is a list of nodes representing HTML 
            option element. An individual node may be accessed by either ordinal 
            index or the node's <c>name</c> or <c>id</c> attributes.  
            Collections in the HTML DOM are assumed to be live meaning that they are 
            automatically updated when the underlying document is changed. 
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            @since DOM Level 2
            </para></summary>
    </member>
    <member name="M:Aspose.Html.IHTMLOptionsCollection.NamedItem(System.String)">
      <summary>
            Method returns the indexth item in the collection. 
            http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-namedItem
            </summary>
      <param name="name">The element name.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="P:Aspose.Html.IHTMLOptionsCollection.Item(System.String)">
      <summary>
            Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
            </summary>
      <param name="name">The element name.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="P:Aspose.Html.IHTMLOptionsCollection.Item(System.Int32)">
      <summary>
            Method returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.
            http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-namedItem
            </summary>
      <param name="index">The index.</param>
      <returns>Returns node.</returns>
    </member>
    <member name="P:Aspose.Html.IHTMLOptionsCollection.Length">
      <summary>
            The number of nodes in the list.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTitleElement">
      <summary>
            The title element. See the TITLE element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="T:Aspose.Html.HTMLElement">
      <summary>
             All HTML element interfaces derive from this class. Elements that only 
            expose the HTML core attributes are represented by the base 
            <c>HTMLElement</c> interface. These elements are as follows: 
            special: SUB, SUP, SPAN, BDOfont: TT, I, B, U, S, STRIKE, BIG, SMALL
            phrase: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ACRONYM, ABBRlist: 
            DD, DTNOFRAMES, NOSCRIPTADDRESS, CENTERThe <c>style</c> attribute 
            of an HTML element is accessible through the 
            <c>ElementCSSInlineStyle</c> interface which is defined in the CSS 
            module [<a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113">DOM Level 2 Style Sheets and CSS</a>]. 
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.Id">
      <summary>
            The element's identifier. See the id attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.Title">
      <summary>
            The element's advisory title. See the title attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.Lang">
      <summary>
            Language code defined in RFC 1766. See the lang attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.Dir">
      <summary>
            Specifies the base direction of directionally neutral text and the 
            directionality of tables. See the dir attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.ClassName">
      <summary>
            The class attribute of the element. This attribute has been renamed due 
            to conflicts with the "class" keyword exposed by many languages. See 
            the class attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLElement.Style">
      <summary>
            Represents Represents a style attribute that allows author to directly apply style information to specific element.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnAbort">
      <summary>
            Gets or sets event handler for OnAbort event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnBlur">
      <summary>
            Gets or sets event handler for OnBlur event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnCancel">
      <summary>
            Gets or sets event handler for OnCancel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnCanplay">
      <summary>
            Gets or sets event handler for OnCanplay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnCanPlayThrough">
      <summary>
            Gets or sets event handler for OnCanPlayThrough event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnChange">
      <summary>
            Gets or sets event handler for OnChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnClick">
      <summary>
            Gets or sets event handler for OnClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnCueChange">
      <summary>
            Gets or sets event handler for OnCueChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnDblClick">
      <summary>
            Gets or sets event handler for OnDblClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnDurationChange">
      <summary>
            Gets or sets event handler for OnDurationChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnEmptied">
      <summary>
            Gets or sets event handler for OnEmptied event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnEnded">
      <summary>
            Gets or sets event handler for OnEnded event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnError">
      <summary>
            Gets or sets event handler for OnError event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnFocus">
      <summary>
            Gets or sets event handler for OnFocus event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnInput">
      <summary>
            Gets or sets event handler for OnInput event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnInvalid">
      <summary>
            Gets or sets event handler for OnInvalid event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnKeyDown">
      <summary>
            Gets or sets event handler for OnKeyDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnKeyPress">
      <summary>
            Gets or sets event handler for OnKeyPress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnKeyUp">
      <summary>
            Gets or sets event handler for OnKeyUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnLoad">
      <summary>
            Gets or sets event handler for OnLoad event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnLoadedData">
      <summary>
            Gets or sets event handler for OnLoadedData event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnLoadedMetadata">
      <summary>
            Gets or sets event handler for OnLoadedMetadata event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnLoadStart">
      <summary>
            Gets or sets event handler for OnLoadStart event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseDown">
      <summary>
            Gets or sets event handler for OnMouseDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseEnter">
      <summary>
            Gets or sets event handler for OnMouseEnter event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseLeave">
      <summary>
            Gets or sets event handler for OnMouseLeave event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseMove">
      <summary>
            Gets or sets event handler for OnMouseMove event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseOut">
      <summary>
            Gets or sets event handler for OnMouseOut event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseOver">
      <summary>
            Gets or sets event handler for OnMouseOver event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseUp">
      <summary>
            Gets or sets event handler for OnMouseUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnMouseWheel">
      <summary>
            Gets or sets event handler for OnMouseWheel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnPause">
      <summary>
            Gets or sets event handler for OnPause event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnPlay">
      <summary>
            Gets or sets event handler for OnPlay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnPlaying">
      <summary>
            Gets or sets event handler for OnPlaying event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnProgress">
      <summary>
            Gets or sets event handler for OnProgress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnRateChange">
      <summary>
            Gets or sets event handler for OnRateChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnReset">
      <summary>
            Gets or sets event handler for OnReset event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnResize">
      <summary>
            Gets or sets event handler for OnResize event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnScroll">
      <summary>
            Gets or sets event handler for OnScroll event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnSeeked">
      <summary>
            Gets or sets event handler for OnSeeked event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnSeeking">
      <summary>
            Gets or sets event handler for OnSeeking event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnSelect">
      <summary>
            Gets or sets event handler for OnSelect event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnShow">
      <summary>
            Gets or sets event handler for OnShow event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnStalled">
      <summary>
            Gets or sets event handler for OnStalled event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnSubmit">
      <summary>
            Gets or sets event handler for OnSubmit event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnSuspend">
      <summary>
            Gets or sets event handler for OnSuspend event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnTimeUpdate">
      <summary>
            Gets or sets event handler for OnTimeUpdate event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnToggle">
      <summary>
            Gets or sets event handler for OnToggle event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnVolumeChange">
      <summary>
            Gets or sets event handler for OnVolumeChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLElement.OnWaiting">
      <summary>
            Gets or sets event handler for OnWaiting event.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTemplateElement">
      <summary>
            The template element
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTemplateElement.Content">
      <summary>
            Gets the instance of the <see cref="T:Aspose.Html.Dom.DocumentFragment" />.
            </summary>
      <value>
            The content.
            </value>
    </member>
    <member name="T:Aspose.Html.HTMLNoScriptElement">
      <summary>
            Script statements. See the NOSCRIPT element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="T:Aspose.Html.HTMLAddressElement">
      <summary>
            The address element. See the ADDRESS  element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="T:Aspose.Html.HTMLUnknownElement">
      <summary>
            The Unknown html element.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableElement">
      <summary>
            The create* and delete* methods on the table allow authors to construct and 
            modify tables. [<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML 4.01</a>] specifies that only one of each of the 
            <c>CAPTION</c>, <c>THEAD</c>, and <c>TFOOT</c> elements 
            may exist in a table. Therefore, if one exists, and the createTHead() or 
            createTFoot() method is called, the method returns the existing THead or 
            TFoot element. See the TABLE element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.CreateTHead">
      <summary>
            Create a table header row or return an existing one. </summary>
      <returns> A new table header element (<c>THEAD</c>). </returns>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.DeleteTHead">
      <summary>
            Delete the header from the table, if one exists.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.CreateTFoot">
      <summary>
            Create a table footer row or return an existing one. </summary>
      <returns> A footer element (<c>TFOOT</c>). </returns>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.DeleteTFoot">
      <summary>
            Delete the footer from the table, if one exists.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.CreateCaption">
      <summary>
            Create a new table caption object or return an existing one. </summary>
      <returns> A <c>CAPTION</c> element. </returns>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.DeleteCaption">
      <summary>
            Delete the table caption, if one exists.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.InsertRow(System.Int32)">
      <summary>
            Insert a new empty row in the table. The new row is inserted 
            immediately before and in the same section as the current 
            <c>index</c>th row in the table. If <c>index</c> is -1 or 
            equal to the number of rows, the new row is appended. In addition, 
            when the table is empty the row is inserted into a <c>TBODY</c> 
            which is created and inserted into the table.A table row cannot be 
            empty according to [<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML 4.01</a>]. </summary>
      <param name="index"> The row number where to insert a new row. This index 
              starts from 0 and is relative to the logical order (not document 
              order) of all the rows contained inside the table. </param>
      <returns> The newly created row. </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified index is greater than the 
              number of rows or if the index is a negative number other than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="M:Aspose.Html.HTMLTableElement.DeleteRow(System.Int32)">
      <summary>
            Delete a table row. </summary>
      <param name="index"> The index of the row to be deleted. This index starts 
              from 0 and is relative to the logical order (not document order) of 
              all the rows contained inside the table. If the index is -1 the 
              last row in the table is deleted. </param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified index is greater than or 
              equal to the number of rows or if the index is a negative number 
              other than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Caption">
      <summary>
            Returns the table's <c>CAPTION</c>, or void if none exists. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.THead">
      <summary>
            Returns the table's <c>CAPTION</c>, or void if none exists. </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
               HIERARCHY_REQUEST_ERR: if the element is not a <c>CAPTION</c>. 
            @version DOM Level 2 </exception>
      <summary>
            Returns the table's <c>THEAD</c>, or <c>null</c> if none 
            exists. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.TFoot">
      <summary>
            Returns the table's <c>THEAD</c>, or <c>null</c> if none 
            exists. </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
               HIERARCHY_REQUEST_ERR: if the element is not a <c>THEAD</c>. 
            @version DOM Level 2 </exception>;
            <summary>
            Returns the table's <c>TFOOT</c>, or <c>null</c> if none 
            exists. 
            @version DOM Level 2
            </summary></member>
    <member name="P:Aspose.Html.HTMLTableElement.Rows">
      <summary>
            Returns the table's <c>TFOOT</c>, or <c>null</c> if none 
            exists. </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
               HIERARCHY_REQUEST_ERR: if the element is not a <c>TFOOT</c>. 
            @version DOM Level 2 </exception>
      <summary>
            Returns a collection of all the rows in the table, including all in 
            <c>THEAD</c>, <c>TFOOT</c>, all <c>TBODY</c> 
            elements. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.TBodies">
      <summary>
            Returns a collection of the table bodies (including implicit ones).
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Align">
      <summary>
            Specifies the table's position with respect to the rest of the 
            document. See the align attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.BgColor">
      <summary>
            Cell background color. See the bgcolor attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Border">
      <summary>
            The width of the border around the table. See the border attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.CellPadding">
      <summary>
            Specifies the horizontal and vertical space between cell content and 
            cell borders. See the cellpadding attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.CellSpacing">
      <summary>
            Specifies the horizontal and vertical separation between cells. See the 
            cellspacing attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Frame">
      <summary>
            Specifies which external table borders to render. See the frame 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Rules">
      <summary>
            Specifies which internal table borders to render. See the rules 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Summary">
      <summary>
            Description about the purpose or structure of a table. See the summary 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableElement.Width">
      <summary>
            Specifies the desired table width. See the width attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLObjectElement">
      <summary>
            Generic embedded object.In principle, all properties on the object element 
            are read-write but in some environments some properties may be read-only 
            once the underlying object is instantiated. See the OBJECT element 
            definition in [<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML 4.01</a>].
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns <c>null</c> if this control is not within the context of a form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Code">
      <summary>
            Applet class file. See the <c>code</c> attribute for HTMLAppletElement. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Align">
      <summary>
            Aligns this object (vertically or horizontally) with respect to its surrounding text. See the align attribute definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Archive">
      <summary>
            Space-separated list of archives. See the archive attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Border">
      <summary>
            Width of border around the object. See the border attribute definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.CodeBase">
      <summary>
            Base URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] for <c>classid</c>, <c>data</c>, and 
            <c>archive</c> attributes. See the codebase attribute definition
             in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.CodeType">
      <summary>
            Content type for data downloaded via <c>classid</c> attribute. 
            See the codetype attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.ClassId">
      <summary>
            Defines a class ID value as set in the Windows Registry or a URL
            </summary>
      <value>
            The class id.
            </value>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Data">
      <summary>
            A URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] specifying the location of the object's data. See the data 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Declare">
      <summary>
            Declare (for future reference), but do not instantiate, this object. 
            See the declare attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Height">
      <summary>
            Override height. See the height attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Hspace">
      <summary>
            Horizontal space, in pixels, to the left and right of this image, 
            applet, or object. See the hspace attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Name">
      <summary>
            Form control or object name when submitted with a form. See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Standby">
      <summary>
            Message to render while loading the object. See the standby attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Type">
      <summary>
            Content type for data downloaded via <c>data</c> attribute. See 
            the type attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.UseMap">
      <summary>
            Use client-side image map. See the usemap attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Vspace">
      <summary>
            Vertical space, in pixels, above and below this image, applet, or object. See the vspace attribute definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLObjectElement.Width">
      <summary>
            Override width. See the width attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLInputElement">
      <summary>
            Form control.Depending upon the environment in which the page is being 
            viewed, the value property may be read-only for the file upload input 
            type. For the "password" input type, the actual value returned may be 
            masked to prevent unauthorized use. See the INPUT element definition in [<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML 4.01</a>].
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.DefaultValue">
      <summary>
            When the <c>type</c> attribute of the element has the value 
            "text", "file" or "password", this represents the HTML value 
            attribute of the element. The value of this attribute does not change 
            if the contents of the corresponding form control, in an interactive 
            user agent, changes. See the value attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.DefaultChecked">
      <summary>
            When <c>type</c> has the value "radio" or "checkbox", this 
            represents the HTML checked attribute of the element. The value of 
            this attribute does not change if the state of the corresponding form 
            control, in an interactive user agent, changes. See the checked 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Accept">
      <summary>
            A comma-separated list of content types that a server processing this 
            form will handle correctly. See the accept attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Align">
      <summary>
            Aligns this object (vertically or horizontally) with respect to its 
            surrounding text. See the align attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Alt">
      <summary>
            Alternate text for user agents not rendering the normal content of this 
            element. See the alt attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Checked">
      <summary>
            When the <c>type</c> attribute of the element has the value 
            "radio" or "checkbox", this represents the current state of the form 
            control, in an interactive user agent. Changes to this attribute 
            change the state of the form control, but do not change the value of 
            the HTML checked attribute of the INPUT element.During the handling 
            of a click event on an input element with a type attribute that has 
            the value "radio" or "checkbox", some implementations may change the 
            value of this property before the event is being dispatched in the 
            document. If the default action of the event is canceled, the value 
            of the property may be changed back to its original value. This means 
            that the value of this property during the handling of click events 
            is implementation dependent.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.MaxLength">
      <summary>
            Maximum number of characters for text fields, when <c>type</c> 
            has the value "text" or "password". See the maxlength attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Name">
      <summary>
            Form control or object name when submitted with a form. See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.ReadOnly">
      <summary>
            This control is read-only. Relevant only when <c>type</c> has the 
            value "text" or "password". See the readonly attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Size">
      <summary>
            Size information. The precise meaning is specific to each type of 
            field. See the size attribute definition in HTML 4.01.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Src">
      <summary>
            When the <c>type</c> attribute has the value "image", this 
            attribute specifies the location of the image to be used to decorate 
            the graphical submit button. See the src attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Type">
      <summary>
            The type of control created (all lower case). See the type attribute 
            definition in HTML 4.01.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.UseMap">
      <summary>
            Use client-side image map. See the usemap attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLInputElement.Value">
      <summary>
            When the <c>type</c> attribute of the element has the value 
            "text", "file" or "password", this represents the current contents of 
            the corresponding form control, in an interactive user agent. 
            Changing this attribute changes the contents of the form control, but 
            does not change the value of the HTML value attribute of the element. 
            When the <c>type</c> attribute of the element has the value 
            "button", "hidden", "submit", "reset", "image", "checkbox" or 
            "radio", this represents the HTML value attribute of the element. See 
            the value attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLDocument">
      <summary>
            An <c>HTMLDocument</c> is the root of the HTML hierarchy and holds 
            the entire content. Besides providing access to the hierarchy, it also 
            provides some convenience methods for accessing certain sets of 
            information from the document.
            <para>The following properties have been deprecated in favor of the 
            corresponding ones for the <c>BODY</c> element:alinkColorbackground
            bgColorfgColorlinkColorvlinkColorIn DOM Level 2, the method 
            <c>getElementById</c> is inherited from the <c>Document</c> 
            interface where it was moved to.
            </para><para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="configuration">The environment configuration.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(Aspose.Html.Url)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="url">The document URL.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(Aspose.Html.Url,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="url">The document URL.</param>
      <param name="configuration">The environment configuration.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="address">The document address.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.String,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="address">The document address.</param>
      <param name="configuration">The environment configuration.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.String,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.String,System.String,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
      <param name="configuration">The environment configuration.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.IO.Stream,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(System.IO.Stream,System.String,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="content">The document content.</param>
      <param name="baseUri">The base URI of the document.</param>
      <param name="configuration">The environment configuration.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(Aspose.Html.Net.RequestMessage)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="request">The request message.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.#ctor(Aspose.Html.Net.RequestMessage,Aspose.Html.Configuration)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.HTMLDocument" /> class.
            </summary>
      <param name="request">The request message.</param>
      <param name="configuration">The environment configuration.</param>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.GetOverrideStyle(Aspose.Html.Dom.Element,System.String)">
      <summary>
            This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element.
            </summary>
      <param name="elt">The element whose style is to be modified. This parameter cannot be null.</param>
      <param name="pseudoElt">The pseudo-element or null if none.</param>
      <returns>
            The override style declaration
            </returns>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(Aspose.Html.Url)">
      <summary>
            Saves the document to local file specified by <c>uri</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="uri">Local URL to output file.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>uri</c> is not a valid local file URI.</exception>
    </member>
    <member name="M:Aspose.Html.HTMLDocument.Save(System.String)">
      <summary>
            Saves the document to local file specified by <c>path</c>. All resources used in this document will be saved in 
            to adjacent folder, whose name will be constructed as: output_file_name + "_files".
            </summary>
      <param name="path">Local path to output file.</param>
      <exception cref="T:System.ArgumentException">Raised if the specified <c>path</c> is not a valid local file path.</exception>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Title">
      <summary>
            The title of a document as specified by the <c>TITLE</c> element 
            in the head of the document. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Referrer">
      <summary>
            Returns the URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] of the page that linked to this page. The value is an 
            empty string if the user navigated to the page directly (not through 
            a link, but, for example, via a bookmark). 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Domain">
      <summary>
            The domain name of the server that served the document, or 
            <c>null</c> if the server cannot be identified by a domain 
            name. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Body">
      <summary>
            The element that contains the content for the document. In documents 
            with <c>BODY</c> contents, returns the <c>BODY</c> 
            element. In frameset documents, this returns the outermost 
            <c>FRAMESET</c> element. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Images">
      <summary>
            A collection of all the <c>IMG</c> elements in a document. The 
            behavior is limited to <c>IMG</c> elements for backwards 
            compatibility. As suggested by [<a href="http://www.w3.org/TR/1999/REC-html401-19991224">HTML 4.01</a>], to include images, authors may use 
            the <c>OBJECT</c> element or the <c>IMG</c> element. 
            Therefore, it is recommended not to use this attribute to find the 
            images in the document but <c>getElementsByTagName</c> with 
            HTML 4.01 or <c>getElementsByTagNameNS</c> with XHTML 1.0.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Applets">
      <summary>
            A collection of all the <c>OBJECT</c> elements that include 
            applets and <c>APPLET</c> (deprecated) elements in a document. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Links">
      <summary>
            A collection of all <c>AREA</c> elements and anchor (
            <c>A</c>) elements in a document with a value for the 
            <c>href</c> attribute. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Forms">
      <summary>
            A collection of all the forms of a document. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.Anchors">
      <summary>
             A collection of all the anchor (<c>A</c>) elements in a document 
            with a value for the <c>name</c> attribute. For reasons of 
            backward compatibility, the returned set of anchors only contains 
            those anchors created with the <c>name</c> attribute, not those 
            created with the <c>id</c> attribute. Note that in [<a href="http://www.w3.org/TR/2002/REC-xhtml1-20020801">XHTML 1.0</a>], the 
            <c>name</c> attribute (see section 4.10) has no semantics and 
            is only present for legacy user agents: the <c>id</c> attribute 
            is used instead. Users should prefer the iterator mechanisms provided 
            by [<a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Traversal-Range-20001113">DOM Level 2 Traversal</a>] instead. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLDocument.StyleSheets">
      <summary>
            A list containing all the style sheets explicitly linked into or embedded in a document. For HTML documents, this includes external style sheets, included via the HTML LINK element, and inline STYLE elements.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnAbort">
      <summary>
            Gets or sets event handler for OnAbort event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnBlur">
      <summary>
            Gets or sets event handler for OnBlur event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnCancel">
      <summary>
            Gets or sets event handler for OnCancel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnCanplay">
      <summary>
            Gets or sets event handler for OnCanplay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnCanPlayThrough">
      <summary>
            Gets or sets event handler for OnCanPlayThrough event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnChange">
      <summary>
            Gets or sets event handler for OnChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnClick">
      <summary>
            Gets or sets event handler for OnClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnCueChange">
      <summary>
            Gets or sets event handler for OnCueChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnDblClick">
      <summary>
            Gets or sets event handler for OnDblClick event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnDurationChange">
      <summary>
            Gets or sets event handler for OnDurationChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnEmptied">
      <summary>
            Gets or sets event handler for OnEmptied event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnEnded">
      <summary>
            Gets or sets event handler for OnEnded event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnError">
      <summary>
            Gets or sets event handler for OnError event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnFocus">
      <summary>
            Gets or sets event handler for OnFocus event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnInput">
      <summary>
            Gets or sets event handler for OnInput event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnInvalid">
      <summary>
            Gets or sets event handler for OnInvalid event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnKeyDown">
      <summary>
            Gets or sets event handler for OnKeyDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnKeyPress">
      <summary>
            Gets or sets event handler for OnKeyPress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnKeyUp">
      <summary>
            Gets or sets event handler for OnKeyUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnLoad">
      <summary>
            Gets or sets event handler for OnLoad event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnLoadedData">
      <summary>
            Gets or sets event handler for OnLoadedData event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnLoadedMetadata">
      <summary>
            Gets or sets event handler for OnLoadedMetadata event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnLoadStart">
      <summary>
            Gets or sets event handler for OnLoadStart event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnMouseDown">
      <summary>
            Gets or sets event handler for OnMouseDown event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnMouseEnter">
      <summary>
            Gets or sets event handler for OnMouseEnter event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnMouseLeave">
      <summary>
            Gets or sets event handler for OnMouseLeave event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnMouseMove">
      <summary>
            Gets or sets event handler for OnMouseMove event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnMouseOut">
      <summary>
            Gets or sets event handler for OnMouseOut event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnMouseOver">
      <summary>
            Gets or sets event handler for OnMouseOver event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnMouseUp">
      <summary>
            Gets or sets event handler for OnMouseUp event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnMouseWheel">
      <summary>
            Gets or sets event handler for OnMouseWheel event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnPause">
      <summary>
            Gets or sets event handler for OnPause event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnPlay">
      <summary>
            Gets or sets event handler for OnPlay event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnPlaying">
      <summary>
            Gets or sets event handler for OnPlaying event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnProgress">
      <summary>
            Gets or sets event handler for OnProgress event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnRateChange">
      <summary>
            Gets or sets event handler for OnRateChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnReset">
      <summary>
            Gets or sets event handler for OnReset event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnResize">
      <summary>
            Gets or sets event handler for OnResize event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnScroll">
      <summary>
            Gets or sets event handler for OnScroll event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnSeeked">
      <summary>
            Gets or sets event handler for OnSeeked event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnSeeking">
      <summary>
            Gets or sets event handler for OnSeeking event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnSelect">
      <summary>
            Gets or sets event handler for OnSelect event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnShow">
      <summary>
            Gets or sets event handler for OnShow event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnStalled">
      <summary>
            Gets or sets event handler for OnStalled event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnSubmit">
      <summary>
            Gets or sets event handler for OnSubmit event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnSuspend">
      <summary>
            Gets or sets event handler for OnSuspend event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnTimeUpdate">
      <summary>
            Gets or sets event handler for OnTimeUpdate event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnToggle">
      <summary>
            Gets or sets event handler for OnToggle event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnVolumeChange">
      <summary>
            Gets or sets event handler for OnVolumeChange event.
            </summary>
    </member>
    <member name="E:Aspose.Html.HTMLDocument.OnWaiting">
      <summary>
            Gets or sets event handler for OnWaiting event.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLAnchorElement">
      <summary>
            The anchor element. See the A element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLAnchorElement.Blur">
      <summary>
            Removes keyboard focus from this element.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLAnchorElement.Focus">
      <summary>
            Gives keyboard focus to this element.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Charset">
      <summary>
            The character encoding of the linked resource. See the charset 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Coords">
      <summary>
            Comma-separated list of lengths, defining an active region geometry. 
            See also <c>shape</c> for the shape of the region. See the 
            coords attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Href">
      <summary>
            The absolute URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] of the linked resource. See the href attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Hreflang">
      <summary>
            Language code of the linked resource. See the hreflang attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Name">
      <summary>
            Anchor name. See the name attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Rel">
      <summary>
            Forward link type. See the rel attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Rev">
      <summary>
            Reverse link type. See the rev attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Shape">
      <summary>
            The shape of the active area. The coordinates are given by 
            <c>coords</c>. See the shape attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Target">
      <summary>
            Frame to render the resource in. See the target attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAnchorElement.Type">
      <summary>
            Advisory content type. See the type attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLAppletElement">
      <summary>
            An embedded Java applet. See the APPLET element definition in HTML 4.01. 
            This element is deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Align">
      <summary>
            Aligns this object (vertically or horizontally) with respect to its 
            surrounding text. See the align attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Alt">
      <summary>
            Alternate text for user agents not rendering the normal content of this 
            element. See the alt attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Archive">
      <summary>
            Comma-separated archive list. See the archive attribute definition in 
            HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Code">
      <summary>
            Applet class file. See the code attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.CodeBase">
      <summary>
            Optional base URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] for applet. See the codebase attribute definition in 
            HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Height">
      <summary>
            Override height. See the height attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Hspace">
      <summary>
            Horizontal space, in pixels, to the left and right of this image, 
            applet, or object. See the hspace attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Name">
      <summary>
            The name of the applet. See the name attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Object">
      <summary>
            The value of the "object" attribute. See the object attribute definition
             in HTML 4.01. This attribute is deprecated in HTML 4.01. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Vspace">
      <summary>
            Vertical space, in pixels, above and below this image, applet, or 
            object. See the vspace attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAppletElement.Width">
      <summary>
            Override width. See the width attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLAreaElement">
      <summary>
            Client-side image map area definition. See the AREA element definition in 
            HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.Alt">
      <summary>
            Alternate text for user agents not rendering the normal content of this 
            element. See the alt attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.Coords">
      <summary>
            Comma-separated list of lengths, defining an active region geometry. 
            See also <c>shape</c> for the shape of the region. See the 
            coords attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.Href">
      <summary>
            The URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] of the linked resource. 
            See the href attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.NoHref">
      <summary>
            Specifies that this area is inactive, i.e., has no associated action. 
            See the nohref attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.Shape">
      <summary>
            The shape of the active area. The coordinates are given by 
            <c>coords</c>. See the shape attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLAreaElement.Target">
      <summary>
            Frame to render the resource in. See the target attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLBaseElement">
      <summary>
            Document base URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>]. See the BASE element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLBaseElement.Href">
      <summary>
            The base URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>]. See the href attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBaseElement.Target">
      <summary>
            The default target frame. See the target attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLBaseFontElement">
      <summary>
            Base font. See the BASEFONT element definition in HTML 4.01. This element 
            is deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLBaseFontElement.Color">
      <summary>
            Font color. See the color attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBaseFontElement.Face">
      <summary>
            Font face identifier. See the face attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBaseFontElement.Size">
      <summary>
            Computed font size. See the size attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            @version DOM Level 2
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLBodyElement">
      <summary>
            The HTML document body. This element is always present in the DOM API, even 
            if the tags are not present in the source document. See the BODY element 
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.ALink">
      <summary>
            Color of active links (after mouse-button down, but before mouse-button 
            up). See the alink attribute definition in HTML 4.01. This attribute 
            is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.Background">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] of the background texture tile image. See the background attribute 
            definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.BgColor">
      <summary>
            Document background color. See the bgcolor attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.Link">
      <summary>
            Color of links that are not active and unvisited. See the link 
            attribute definition in HTML 4.01. This attribute is deprecated in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.Text">
      <summary>
            Document text color. See the text attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLBodyElement.VLink">
      <summary>
            Color of links that have been visited by the user. See the vlink 
            attribute definition in HTML 4.01. This attribute is deprecated in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLBRElement">
      <summary>
            Force a line break. See the BR element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLBRElement.Clear">
      <summary>
            Control flow of text around floats. See the clear attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLButtonElement">
      <summary>
            Push button. See the BUTTON element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.Name">
      <summary>
            Form control or object name when submitted with a form. See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.Type">
      <summary>
            The type of button (all lower case). See the type attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLButtonElement.Value">
      <summary>
            The current form control value. See the value attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLDirectoryElement">
      <summary>
            Directory list. See the DIR element definition in HTML 4.01. This element 
            is deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLDirectoryElement.Compact">
      <summary>
            Reduce spacing between list items. See the compact attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLDivElement">
      <summary>
            Generic block container. See the DIV element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLDivElement.Align">
      <summary>
            Horizontal text alignment. See the align attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLDListElement">
      <summary>
            Definition list. See the DL element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLDListElement.Compact">
      <summary>
            Reduce spacing between list items. See the compact attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLFieldSetElement">
      <summary>
            Organizes form controls into logical groups. See the FIELDSET element 
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLFieldSetElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLFontElement">
      <summary>
            Local change to font. See the FONT element definition in HTML 4.01. This 
            element is deprecated in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLFontElement.Color">
      <summary>
            Font color. See the color attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFontElement.Face">
      <summary>
            Font face identifier. See the face attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFontElement.Size">
      <summary>
            Font size. See the size attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLFormElement">
      <summary>
            The <c>FORM</c> element encompasses behavior similar to a collection 
            and an element. It provides direct access to the contained form controls 
            as well as the attributes of the form element. See the FORM element 
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLFormElement.Submit">
      <summary>
            Submits the form. It performs the same action as a submit button.
            </summary>
    </member>
    <member name="M:Aspose.Html.HTMLFormElement.Reset">
      <summary>
            Restores a form element's default values. It performs the same action 
            as a reset button.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Elements">
      <summary>
            Returns a collection of all form control elements in the form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Length">
      <summary>
            The number of form controls in the form.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Name">
      <summary>
            Names the form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.AcceptCharset">
      <summary>
            List of character sets supported by the server. See the accept-charset 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Action">
      <summary>
            Server-side form handler. See the action attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Enctype">
      <summary>
            The content type of the submitted form, generally 
            "application/x-www-form-urlencoded". See the enctype attribute 
            definition in HTML 4.01. The onsubmit even handler is not guaranteed 
            to be triggered when invoking this method. The behavior is 
            inconsistent for historical reasons and authors should not rely on a 
            particular one. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Method">
      <summary>
            HTTP method [<a href="http://www.ietf.org/rfc/rfc2616.txt">IETF RFC 2616</a>] used to submit form. See the method attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFormElement.Target">
      <summary>
            Frame to render the resource in. See the target attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLFrameElement">
      <summary>
            Create a frame. See the FRAME element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.FrameBorder">
      <summary>
            Request frame borders. See the frameborder attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.LongDesc">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a long description of this image or frame. See the 
            longdesc attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.MarginHeight">
      <summary>
            Frame margin height, in pixels. See the marginheight attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.MarginWidth">
      <summary>
            Frame margin width, in pixels. See the marginwidth attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.Name">
      <summary>
            The frame name (object of the <c>target</c> attribute). See the 
            name attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.NoResize">
      <summary>
            When true, forbid user from resizing frame. See the noresize attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.Scrolling">
      <summary>
            Specify whether or not the frame should have scrollbars. See the 
            scrolling attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.Src">
      <summary>
            A URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating the initial frame contents. See the src attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameElement.ContentDocument">
      <summary>
            The document this frame contains, if there is any and it is available, 
            or <c>null</c> otherwise.
            @since DOM Level 2
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLFrameSetElement">
      <summary>
            Create a grid of frames. See the FRAMESET element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameSetElement.Cols">
      <summary>
            The number of columns of frames in the frameset. See the cols attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLFrameSetElement.Rows">
      <summary>
            The number of rows of frames in the frameset. See the rows attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLHeadElement">
      <summary>
            Document head information. See the HEAD element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLHeadElement.Profile">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a metadata profile. See the profile attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLHeadingElement">
      <summary>
            For the <c>H1</c> to <c>H6</c> elements. See the H1 element
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLHeadingElement.Align">
      <summary>
            Horizontal text alignment. See the align attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLHRElement">
      <summary>
            Create a horizontal rule. See the HR element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLHRElement.Align">
      <summary>
            Align the rule on the page. See the align attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLHRElement.NoShade">
      <summary>
            Indicates to the user agent that there should be no shading in the 
            rendering of this element. See the noshade attribute definition in 
            HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLHRElement.Size">
      <summary>
            The height of the rule. See the size attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLHRElement.Width">
      <summary>
            The width of the rule. See the width attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLHtmlElement">
      <summary>
            Root of an HTML document. See the HTML element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLHtmlElement.Version">
      <summary>
            Version information about the document's DTD. See the version attribute 
            definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLIFrameElement">
      <summary>
            Inline subwindows. See the IFRAME element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Align">
      <summary>
            Aligns this object (vertically or horizontally) with respect to its 
            surrounding text. See the align attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.FrameBorder">
      <summary>
            Request frame borders. See the frameborder attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Height">
      <summary>
            Frame height. See the height attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.LongDesc">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a long description of this image or frame. See the 
            longdesc attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.MarginHeight">
      <summary>
            Frame margin height, in pixels. See the marginheight attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.MarginWidth">
      <summary>
            Frame margin width, in pixels. See the marginwidth attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Name">
      <summary>
            The frame name (object of the <c>target</c> attribute). See the 
            name attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Scrolling">
      <summary>
            Specify whether or not the frame should have scrollbars. See the 
            scrolling attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Src">
      <summary>
            A URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating the initial frame contents. See the src attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLIFrameElement.Width">
      <summary>
            Frame width. See the width attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLImageElement">
      <summary>
            Embedded image. See the IMG element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Name">
      <summary>
            The name of the element (for backwards compatibility). 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Form">
      <summary>
            Gets or sets the form instance.
            </summary>
      <value>
            The <see cref="T:Aspose.Html.HTMLFormElement" /> instance.
            </value>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Align">
      <summary>
            Aligns this object (vertically or horizontally) with respect to its 
            surrounding text. See the align attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Alt">
      <summary>
            Alternate text for user agents not rendering the normal content of this 
            element. See the alt attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Border">
      <summary>
            Width of border around image. See the  border attribute definition in 
            HTML 4.01. This attribute is deprecated in HTML 4.01. Note that the 
            type of this attribute was <c>DOMString</c> in DOM Level 1 HTML [<a href="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001">DOM Level 1</a>]
            .
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Height">
      <summary>
            Height of the image in pixels. See the height attribute definition in 
            HTML 4.01. Note that the type of this attribute was 
            <c>DOMString</c> in DOM Level 1 HTML [<a href="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001">DOM Level 1</a>].
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Hspace">
      <summary>
            Horizontal space to the left and right of this image in pixels. See the 
            hspace attribute definition in HTML 4.01. This attribute is 
            deprecated in HTML 4.01. Note that the type of this attribute was 
            <c>DOMString</c> in DOM Level 1 HTML [<a href="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001">DOM Level 1</a>].
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.IsMap">
      <summary>
            Use server-side image map. See the ismap attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.LongDesc">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a long description of this image or frame. See the 
            longdesc attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Src">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating the source of this image. See the src attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.UseMap">
      <summary>
            Use client-side image map. See the usemap attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Vspace">
      <summary>
            Vertical space above and below this image in pixels. See the vspace 
            attribute definition in HTML 4.01. This attribute is deprecated in 
            HTML 4.01. Note that the type of this attribute was "DOMString" in 
            DOM Level 1 HTML [<a href="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001">DOM Level 1</a>].
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLImageElement.Width">
      <summary>
            The width of the image in pixels. See the width attribute definition in 
            HTML 4.01. Note that the type of this attribute was 
            <c>DOMString</c> in DOM Level 1 HTML [<a href="http://www.w3.org/TR/1998/REC-DOM-Level-1-19981001">DOM Level 1</a>].
            @version DOM Level 2
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLLabelElement">
      <summary>
            Form field label text. See the LABEL element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLLabelElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLabelElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLabelElement.For">
      <summary>
            This attribute links this label with another form control by 
            <c>id</c> attribute. See the for attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLLegendElement">
      <summary>
            Provides a caption for a <c>FIELDSET</c> grouping. See the LEGEND 
            element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLLegendElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLegendElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLegendElement.Align">
      <summary>
            Text alignment relative to <c>FIELDSET</c>. See the align 
            attribute definition in HTML 4.01. This attribute is deprecated in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLLIElement">
      <summary>
            List item. See the LI element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLLIElement.Type">
      <summary>
            List item bullet style. See the type attribute definition in HTML 4.01. 
            This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLIElement.Value">
      <summary>
            Reset sequence number when used in <c>OL</c>. See the value 
            attribute definition in HTML 4.01. This attribute is deprecated in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLLinkElement">
      <summary>
            The <c>LINK</c> element specifies a link to an external resource, and 
            defines this document's relationship to that resource (or vice versa). 
            See the LINK element definition in HTML 4.01 (see also the 
            <c>LinkStyle</c> interface in the StyleSheet module [<a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113">DOM Level 2 Style Sheets and CSS</a>]).
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Disabled">
      <summary>
            Enables/disables the link. This is currently only used for style sheet 
            links, and may be used to activate or deactivate style sheets. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Charset">
      <summary>
            The character encoding of the resource being linked to. See the charset 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Href">
      <summary>
            The URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] of the linked resource. See the href attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Hreflang">
      <summary>
            Language code of the linked resource. See the hreflang attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Media">
      <summary>
            Designed for use with one or more target media. See the media attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Rel">
      <summary>
            Forward link type. See the rel attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Rev">
      <summary>
            Reverse link type. See the rev attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Target">
      <summary>
            Frame to render the resource in. See the target attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Type">
      <summary>
            Advisory content type. See the type attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLLinkElement.Sheet">
      <summary>
            Gets the associated style sheet.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLMapElement">
      <summary>
            Client-side image map. See the MAP element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLMapElement.Areas">
      <summary>
            The list of areas defined for the image map. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLMapElement.Name">
      <summary>
            Names the map (for use with <c>usemap</c>). See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLMetaElement">
      <summary>
            This contains generic meta-information about the document. See the META 
            element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLMetaElement.Content">
      <summary>
            Associated information. See the content attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLMetaElement.HttpEquiv">
      <summary>
            HTTP response header name [<a href="http://www.ietf.org/rfc/rfc2616.txt">IETF RFC 2616</a>]. See the http-equiv attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLMetaElement.Name">
      <summary>
            Meta information name. See the name attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLMetaElement.Scheme">
      <summary>
            Select form of content. See the scheme attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLModElement">
      <summary>
            Notice of modification to part of a document. See the INS and DEL element 
            definitions in HTML 4.01. 
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLModElement.Cite">
      <summary>
            A URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a document that describes the reason for the change. 
            See the cite attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLModElement.DateTime">
      <summary>
            The date and time of the change. See the datetime attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLOListElement">
      <summary>
            Ordered list. See the OL element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLOListElement.Compact">
      <summary>
            Reduce spacing between list items. See the compact attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOListElement.Start">
      <summary>
            Starting sequence number. See the start attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOListElement.Type">
      <summary>
            Numbering style. See the type attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLOptGroupElement">
      <summary>
            Group options together in logical subdivisions. See the OPTGROUP element 
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptGroupElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptGroupElement.Label">
      <summary>
            Assigns a label to this option group. See the label attribute definition
             in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLOptionElement">
      <summary>
            A selectable choice. See the OPTION element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.DefaultSelected">
      <summary>
            Represents the value of the HTML selected attribute. The value of this 
            attribute does not change if the state of the corresponding form 
            control, in an interactive user agent, changes. See the selected 
            attribute definition in HTML 4.01.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Text">
      <summary>
            The text contained within the option element. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Index">
      <summary>
            The index of this <c>OPTION</c> in its parent <c>SELECT</c>
            , starting from 0.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Label">
      <summary>
            Option label for use in hierarchical menus. See the label attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Selected">
      <summary>
            Represents the current state of the corresponding form control, in an 
            interactive user agent. Changing this attribute changes the state of 
            the form control, but does not change the value of the HTML selected 
            attribute of the element.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLOptionElement.Value">
      <summary>
            The current form control value. See the value attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLParagraphElement">
      <summary>
            Paragraphs. See the P element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLParagraphElement.Align">
      <summary>
            Horizontal text alignment. See the align attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLParamElement">
      <summary>
            Parameters fed to the <c>OBJECT</c> element. See the PARAM element 
            definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLParamElement.Name">
      <summary>
            The name of a run-time parameter. See the name attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLParamElement.Type">
      <summary>
            Content type for the <c>value</c> attribute when 
            <c>valuetype</c> has the value "ref". See the type attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLParamElement.Value">
      <summary>
            The value of a run-time parameter. See the value attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLParamElement.ValueType">
      <summary>
            Information about the meaning of the <c>value</c> attribute 
            value. See the valuetype attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLPreElement">
      <summary>
            Preformatted text. See the PRE element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLPreElement.Width">
      <summary>
            Fixed width for content. See the width attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLQuoteElement">
      <summary>
            For the <c>Q</c> and <c>BLOCKQUOTE</c> elements. See the Q 
            element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLQuoteElement.Cite">
      <summary>
            A URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating a source document or message. See the cite attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLScriptElement">
      <summary>
            Script statements. See the SCRIPT element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Text">
      <summary>
            The script content of the element. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Event">
      <summary>
            Reserved for future use. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Charset">
      <summary>
            The character encoding of the linked resource. See the charset 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Defer">
      <summary>
            Indicates that the user agent can defer processing of the script. See 
            the defer attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Src">
      <summary>
            URI [<a href="http://www.ietf.org/rfc/rfc2396.txt">IETF RFC 2396</a>] designating an external script. See the src attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLScriptElement.Type">
      <summary>
            The content type of the script language. See the type attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLSelectElement">
      <summary>
            The select element allows the selection of an option. The contained options 
            can be directly accessed through the select element as a collection. See 
            the SELECT element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Type">
      <summary>
            The type of this form control. This is the string "select-multiple" 
            when the multiple attribute is <c>true</c> and the string 
            "select-one" when <c>false</c>.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.SelectedIndex">
      <summary>
            The ordinal index of the selected option, starting from 0. The value -1 
            is returned if no element is selected. If multiple options are 
            selected, the index of the first selected option is returned. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Value">
      <summary>
             The current form control value (i.e. the value of the currently 
            selected option), if multiple options are selected this is the value 
            of the first selected option. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Length">
      <summary>
             The number of options in this <c>SELECT</c>. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Form">
      <summary>
             The number of options in this <c>SELECT</c>. </summary>
      <exception cref="T:Aspose.Html.Dom.DOMException">
               NOT_SUPPORTED_ERR: if setting the length is not allowed by the 
              implementation. 
            @version DOM Level 2 </exception>
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Options">
      <summary>
            The collection of <c>OPTION</c> elements contained by this 
            element. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Multiple">
      <summary>
            If true, multiple <c>OPTION</c> elements may be selected in this 
            <c>SELECT</c>. See the multiple attribute definition in HTML 
            4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Name">
      <summary>
            Form control or object name when submitted with a form. See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.Size">
      <summary>
            Number of visible rows. See the size attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLSelectElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLStyleElement">
      <summary>
             Style information. See the STYLE element definition in HTML 4.01, the CSS 
            module [<a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113">DOM Level 2 Style Sheets and CSS</a>] and the <c>LinkStyle</c> interface in the StyleSheets 
            module [<a href="http://www.w3.org/TR/2000/REC-DOM-Level-2-Style-20001113">DOM Level 2 Style Sheets and CSS</a>]. 
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLStyleElement.Disabled">
      <summary>
            Enables/disables the style sheet. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLStyleElement.Media">
      <summary>
            Designed for use with one or more target media. See the media attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLStyleElement.Type">
      <summary>
            The content type of the style sheet language. See the type attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLStyleElement.Sheet">
      <summary>
            Gets the associated style sheet.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableCaptionElement">
      <summary>
            Table caption See the CAPTION element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCaptionElement.Align">
      <summary>
            Caption alignment with respect to the table. See the align attribute 
            definition in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableCellElement">
      <summary>
            The object used to represent the <c>TH</c> and <c>TD</c> 
            elements. See the TD element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.CellIndex">
      <summary>
            The index of this cell in the row, starting from 0. This index is in 
            document tree order and not display order.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Abbr">
      <summary>
            Abbreviation for header cells. See the abbr attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Align">
      <summary>
            Horizontal alignment of data in cell. See the align attribute definition
             in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Axis">
      <summary>
            Names group of related headers. See the axis attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.BgColor">
      <summary>
            Cell background color. See the bgcolor attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Ch">
      <summary>
            Alignment character for cells in a column. See the char attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.ChOff">
      <summary>
            Offset of alignment character. See the charoff attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.ColSpan">
      <summary>
            Number of columns spanned by cell. See the colspan attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Headers">
      <summary>
            List of <c>id</c> attribute values for header cells. See the 
            headers attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Height">
      <summary>
            Cell height. See the height attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.NoWrap">
      <summary>
            Suppress word wrapping. See the nowrap attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.RowSpan">
      <summary>
            Number of rows spanned by cell. See the rowspan attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Scope">
      <summary>
            Scope covered by header cells. See the scope attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.VAlign">
      <summary>
            Vertical alignment of data in cell. See the valign attribute definition 
            in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableCellElement.Width">
      <summary>
            Cell width. See the width attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableColElement">
      <summary>
            Regroups the <c>COL</c> and <c>COLGROUP</c> elements. See the 
            COL element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.Align">
      <summary>
            Horizontal alignment of cell data in column. See the align attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.Ch">
      <summary>
            Alignment character for cells in a column. See the char attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.ChOff">
      <summary>
            Offset of alignment character. See the charoff attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.Span">
      <summary>
            Indicates the number of columns in a group or affected by a grouping. 
            See the span attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.VAlign">
      <summary>
            Vertical alignment of cell data in column. See the valign attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableColElement.Width">
      <summary>
            Default column width. See the width attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableRowElement">
      <summary>
            A row in a table. See the TR element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableRowElement.InsertCell(System.Int32)">
      <summary>
            Insert an empty <c>TD</c> cell into this row. If 
            <c>index</c> is -1 or equal to the number of cells, the new 
            cell is appended. </summary>
      <param name="index"> The place to insert the cell, starting from 0. </param>
      <returns> The newly created cell. </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified <c>index</c> is greater 
              than the number of cells or if the index is a negative number other 
              than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="M:Aspose.Html.HTMLTableRowElement.DeleteCell(System.Int32)">
      <summary>
            Delete a cell from the current row. </summary>
      <param name="index"> The index of the cell to delete, starting from 0. If the 
              index is -1 the last cell in the row is deleted. </param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified <c>index</c> is greater 
              than or equal to the number of cells or if the index is a negative 
              number other than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.RowIndex">
      <summary>
            This is in logical order and not in document order. The 
            <c>rowIndex</c> does take into account sections (
            <c>THEAD</c>, <c>TFOOT</c>, or <c>TBODY</c>) within 
            the table, placing <c>THEAD</c> rows first in the index, 
            followed by <c>TBODY</c> rows, followed by <c>TFOOT</c> 
            rows.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.SectionRowIndex">
      <summary>
            The index of this row, relative to the current section (
            <c>THEAD</c>, <c>TFOOT</c>, or <c>TBODY</c>), 
            starting from 0.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.Cells">
      <summary>
            The collection of cells in this row. 
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.Align">
      <summary>
            Horizontal alignment of data within cells of this row. See the align 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.BgColor">
      <summary>
            Background color for rows. See the bgcolor attribute definition in HTML 
            4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.Ch">
      <summary>
            Alignment character for cells in a column. See the char attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.ChOff">
      <summary>
            Offset of alignment character. See the charoff attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableRowElement.VAlign">
      <summary>
            Vertical alignment of data within cells of this row. See the valign 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTableSectionElement">
      <summary>
            The <c>THEAD</c>, <c>TFOOT</c>, and <c>TBODY</c> 
            elements. 
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="M:Aspose.Html.HTMLTableSectionElement.InsertRow(System.Int32)">
      <summary>
            Insert a row into this section. The new row is inserted immediately 
            before the current <c>index</c>th row in this section. If 
            <c>index</c> is -1 or equal to the number of rows in this 
            section, the new row is appended. </summary>
      <param name="index"> The row number where to insert a new row. This index 
              starts from 0 and is relative only to the rows contained inside 
              this section, not all the rows in the table. </param>
      <returns> The newly created row. </returns>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified index is greater than the 
              number of rows of if the index is a negative number other than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="M:Aspose.Html.HTMLTableSectionElement.DeleteRow(System.Int32)">
      <summary>
            Delete a row from this section. </summary>
      <param name="index"> The index of the row to be deleted, or -1 to delete the 
              last row. This index starts from 0 and is relative only to the rows 
              contained inside this section, not all the rows in the table. </param>
      <exception cref="T:Aspose.Html.Dom.DOMException">
              INDEX_SIZE_ERR: Raised if the specified index is greater than or 
              equal to the number of rows or if the index is a negative number 
              other than -1.
            @version DOM Level 2 </exception>
    </member>
    <member name="P:Aspose.Html.HTMLTableSectionElement.Align">
      <summary>
            Horizontal alignment of data in cells. See the <c>align</c> 
            attribute for HTMLTheadElement for details. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableSectionElement.Ch">
      <summary>
            Alignment character for cells in a column. See the char attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableSectionElement.ChOff">
      <summary>
            Offset of alignment character. See the charoff attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableSectionElement.VAlign">
      <summary>
            Vertical alignment of data in cells. See the <c>valign</c> 
            attribute for HTMLTheadElement for details. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTableSectionElement.Rows">
      <summary>
            The collection of rows in this table section. 
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLTextAreaElement">
      <summary>
            Multi-line text field. See the TEXTAREA element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.DefaultValue">
      <summary>
            Represents the contents of the element. The value of this attribute 
            does not change if the contents of the corresponding form control, in 
            an interactive user agent, changes.
            @version DOM Level 2
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Form">
      <summary>
            Returns the <c>FORM</c> element containing this control. Returns 
            <c>null</c> if this control is not within the context of a 
            form. 
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.AccessKey">
      <summary>
            A single character access key to give access to the form control. See 
            the accesskey attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Cols">
      <summary>
            Width of control (in characters). See the cols attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Disabled">
      <summary>
            The control is unavailable in this context. See the disabled attribute 
            definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Name">
      <summary>
            Form control or object name when submitted with a form. See the name 
            attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.ReadOnly">
      <summary>
            This control is read-only. See the readonly attribute definition in 
            HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Rows">
      <summary>
            Number of text rows. See the rows attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.TabIndex">
      <summary>
            Index that represents the element's position in the tabbing order. See 
            the tabindex attribute definition in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Type">
      <summary>
            The type of this form control. This the string "textarea".
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLTextAreaElement.Value">
      <summary>
            Represents the current contents of the corresponding form control, in 
            an interactive user agent. Changing this attribute changes the 
            contents of the form control, but does not change the contents of the 
            element. If the entirety of the data can not fit into a single 
            <c>DOMString</c>, the implementation may truncate the data.
            </summary>
    </member>
    <member name="T:Aspose.Html.HTMLUListElement">
      <summary>
            Unordered list. See the UL element definition in HTML 4.01.
            <para>See also the <a href="http://www.w3.org/TR/2003/REC-DOM-Level-2-HTML-20030109">Document object Model (DOM) Level 2 HTML Specification</a>.
            </para></summary>
    </member>
    <member name="P:Aspose.Html.HTMLUListElement.Compact">
      <summary>
            Reduce spacing between list items. See the compact attribute definition 
            in HTML 4.01. This attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="P:Aspose.Html.HTMLUListElement.Type">
      <summary>
            Bullet style. See the type attribute definition in HTML 4.01. This 
            attribute is deprecated in HTML 4.01.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Device`2">
      <summary>
            Represents base class for implementation particular rendering devices.
            </summary>
      <typeparam name="TGraphicContext">Graphic context that holds current graphics control parameters</typeparam>
      <typeparam name="TRenderingOptions">Rendering options</typeparam>
    </member>
    <member name="T:Aspose.Html.Rendering.Device`2.DeviceConfiguration">
      <summary>
            Represents configuration object for devices. 
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.DeviceConfiguration.PageWritingStrategy">
      <summary>
            Gets or sets the page writing strategy.
            </summary>
      <value>
            The page writing strategy.
            </value>
    </member>
    <member name="T:Aspose.Html.Rendering.Device`2.PageWritingStrategy">
      <summary>
            Specifies types of strategies for writing pages into output stream\streams. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.#ctor(`1,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Device`2" /> class by rendering options and stream provider.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="streamProvider">Object that implements the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.#ctor(`1,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Device`2" /> class by rendering options and output file name.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="file">The output file name.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.#ctor(`1,System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Device`2" /> class by rendering options and output stream.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="stream">The output stream.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Initialize">
      <summary>
            Initializes context stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.SaveGraphicContext">
      <summary>
            Pushes a copy of the entire graphics context onto the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.RestoreGraphicContext">
      <summary>
            Restores the entire graphics context to its former value by popping it from the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.GetExtension">
      <summary>
            Gets extension of the output file.
            </summary>
      <returns>The file extension.</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.BeginDocument(Aspose.Html.Dom.Document)">
      <summary>
            Begins rendering of the document.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.EndDocument">
      <summary>
            Ends rendering of the document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.BeginPage(System.Drawing.SizeF)">
      <summary>
            Begins rendering of the new page.
            </summary>
      <param name="size">Size of the page.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.EndPage">
      <summary>
            Ends rendering of the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.BeginElement(Aspose.Html.Dom.Element,System.Drawing.RectangleF)">
      <summary>
            Begins rendering of the html node.
            </summary>
      <param name="element">The html element.</param>
      <param name="rect">Bounding box of the node.</param>
      <returns>Returns [true] if element should be processed.</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.EndElement(Aspose.Html.Dom.Element)">
      <summary>
            Ends rendering of the html node.
            </summary>
      <param name="element">The html element.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, "ClosePath" does nothing.
            This operator terminates the current subpath. Appending another segment to the current path begins a new subpath, 
            even if the new segment begins at the endpoint reached by the "ClosePath" method.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.MoveTo(System.Drawing.PointF)">
      <summary>
            Begins a new subpath by moving the current point to coordinates of the parameter pt, omitting any connecting line segment. 
            If the previous path construction method in the current path was also "MoveTo", the new "MoveTo" overrides it; 
            no vestige of the previous "MoveTo" operation remains in the path.
            </summary>
      <param name="pt">Point of where to move the path to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.LineTo(System.Drawing.PointF)">
      <summary>
            Appends a straight line segment from the current point to the point (pt). The new current point is pt.
            </summary>
      <param name="pt">Point of where to create the line to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.AddRect(System.Drawing.RectangleF)">
      <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
      <param name="rect">A rectangle to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.CubicBezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Appends a cubic Bézier curve to the current path. The curve extends from the current point to the point pt2,
            using pt1 and pt2 as the Bézier control points. The new current point is pt3.
            </summary>
      <param name="pt1">Coordinates of first point</param>
      <param name="pt2">Coordinates of second point</param>
      <param name="pt3">Coordinates of third point</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Stroke">
      <summary> 
            Strokes a line along the current path. The stroked line follows each straight or curved segment in the path, 
            centered on the segment with sides parallel to it. Each of the path’s subpaths is treated separately. 
            This method terminates current path. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Fill(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Fills the entire region enclosed by the current path. 
            If the path consists of several disconnected subpaths, it fills the insides of all subpaths, 
            considered together. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Clip(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Modifies the current clipping path by intersecting it with the current path, using the FillMode rule to determine the region to fill. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is clipped</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.StrokeAndFill(System.Drawing.Drawing2D.FillMode)">
      <summary>
            Strokes and fill current path.
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.FillText(System.String,System.Drawing.PointF)">
      <summary>
            Fills the specified text string at the specified location.
            </summary>
      <param name="text">String to fill.</param>
      <param name="pt">Point that specifies the coordinates of the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.StrokeText(System.String,System.Drawing.PointF)">
      <summary>
            Strokes the specified text string at the specified location.
            </summary>
      <param name="text">String to stroke.</param>
      <param name="pt">Point that specifies the coordinates where to start the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.DrawImage(System.Byte[],Aspose.Html.Rendering.ImageType,System.Drawing.RectangleF)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="data">An array of bytes representing the image.</param>
      <param name="type">Image type.</param>
      <param name="rect">A rectangel which determines position and size to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Device`2.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.Options">
      <summary>
            Gets rendering options.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.Configuration">
      <summary>
            Gets device configuration.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.GraphicContext">
      <summary>
            Gets the graphic context
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.StreamProvider">
      <summary>
            Gets the stream provider object.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.OutputStream">
      <summary>
            Sets and gets the output stream.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Device`2.PageIndex">
      <summary>
            Sets or gets the index of the current page
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.GraphicContext">
      <summary>
            Holds current graphics control parameters.
            These parameters define the global framework within which the graphics operators execute.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.GraphicContext.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
            Modify the current transformation matrix by multiplying the specified matrix.
            </summary>
      <param name="matrix">Transformation matrix.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.GraphicContext.Clone">
      <summary>
            Creates a new instance of a GraphicContext class with the same property values as an existing instance.
            </summary>
      <returns>Instance of a GraphicContext</returns>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineCap">
      <summary>
            Sets or gets the code specifying the shape of the endpoints for any open path that is stroked.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineDashOffset">
      <summary>
            Sets or gets the phase offset of the current line dash pattern.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineDashPattern">
      <summary>
            Sets or gets the description of the dash pattern to be used when paths are stroked.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineDashStyle">
      <summary>
            Sets of gets the style of dashed lines of a stroked path.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineJoin">
      <summary>
            Sets or gets the code specifying the shape of joints between connected segments of a stroked path.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.LineWidth">
      <summary>
            Sets or gets the thickness of paths to be stroked.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.MiterLimit">
      <summary>
            Sets or gets the maximum length of mitered line joins for stroked paths. 
            This parameter limits the length of "spikes" produced when line segments join at sharp angles.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.FillBrush">
      <summary>
            Sets or gets the brush object that is used to fill the interiors of paths.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.StrokeBrush">
      <summary>
            Sets or gets the brush object that is used for stroked paths.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.Font">
      <summary>
            Sets or gets the true type font object that is used for rendering text.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.FontSize">
      <summary>
            Sets or gets text font size.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.FontStyle">
      <summary>
            Sets or gets text font style.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.CharacterSpacing">
      <summary>
            Sets or gets character spacing.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.GraphicContext.TransformationMatrix">
      <summary>
            Sets or gets transformation matrix.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.HtmlRenderer">
      <summary>
            Represents an HTML document renderer.
            </summary>
      <seealso cref="T:Aspose.Html.Dom.Document" />
    </member>
    <member name="M:Aspose.Html.Rendering.HtmlRenderer.Render(Aspose.Html.Rendering.IDevice,Aspose.Html.Dom.Document)">
      <summary>
            Defines method for rendering <see cref="T:Aspose.Html.HTMLDocument" /> into specific <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The device.</param>
      <param name="document">The document.</param>
    </member>
    <member name="T:Aspose.Html.Rendering.IDevice">
      <summary>
            Defines methods and properties that support custom rendering of the graphic elements like paths, text and images.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.SaveGraphicContext">
      <summary>
            Pushes a copy of the entire graphics context onto the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.RestoreGraphicContext">
      <summary>
            Restores the entire graphics context to its former value by popping it from the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.BeginDocument(Aspose.Html.Dom.Document)">
      <summary>
            Begins rendering of the document.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.EndDocument">
      <summary>
            Ends rendering of the document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.BeginPage(System.Drawing.SizeF)">
      <summary>
            Begins rendering of the new page.
            </summary>
      <param name="size">Size of the page.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.EndPage">
      <summary>
            Ends rendering of the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.BeginElement(Aspose.Html.Dom.Element,System.Drawing.RectangleF)">
      <summary>
            Begins rendering of the html element.
            </summary>
      <param name="element">The html element.</param>
      <param name="rect">Bounding box of the node.</param>
      <returns>Returns [true] if element should be processed.</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.EndElement(Aspose.Html.Dom.Element)">
      <summary>
            Ends rendering of the html element.
            </summary>
      <param name="element">The html element.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, "ClosePath" does nothing.
            This operator terminates the current subpath. Appending another segment to the current path begins a new subpath, 
            even if the new segment begins at the endpoint reached by the "ClosePath" method.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.MoveTo(System.Drawing.PointF)">
      <summary>
            Begins a new subpath by moving the current point to coordinates of the parameter pt, omitting any connecting line segment. 
            If the previous path construction method in the current path was also "MoveTo", the new "MoveTo" overrides it; 
            no vestige of the previous "MoveTo" operation remains in the path.
            </summary>
      <param name="pt">Point of where to move the path to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.LineTo(System.Drawing.PointF)">
      <summary>
            Appends a straight line segment from the current point to the point (pt). The new current point is pt.
            </summary>
      <param name="pt">Point of where to create the line to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.AddRect(System.Drawing.RectangleF)">
      <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
      <param name="rect">A rectangle to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.CubicBezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Appends a cubic Bézier curve to the current path. The curve extends from the current point to the point pt2,
            using cubP0 and pt2 as the Bézier control points. The new current point is pt2.
            </summary>
      <param name="pt1">Coordinates of first point</param>
      <param name="pt2">Coordinates of second point</param>
      <param name="pt3">Coordinates of third point</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.Stroke">
      <summary> 
            Strokes a line along the current path. The stroked line follows each straight or curved segment in the path, 
            centered on the segment with sides parallel to it. Each of the path’s subpaths is treated separately. 
            This method terminates current path. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.Fill(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Fills the entire region enclosed by the current path. 
            If the path consists of several disconnected subpaths, it fills the insides of all subpaths, 
            considered together. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.Clip(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Modifies the current clipping path by intersecting it with the current path, using the FillMode rule to determine the region to fill. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is clipped</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.StrokeAndFill(System.Drawing.Drawing2D.FillMode)">
      <summary>
            Strokes and fill current path.
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.FillText(System.String,System.Drawing.PointF)">
      <summary>
            Fills the specified text string at the specified location.
            </summary>
      <param name="text">String to fill.</param>
      <param name="pt">Point that specifies the coordinates of the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.StrokeText(System.String,System.Drawing.PointF)">
      <summary>
            Strokes the specified text string at the specified location.
            </summary>
      <param name="text">String to stroke.</param>
      <param name="pt">Point that specifies the coordinates where to start the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.IDevice.DrawImage(System.Byte[],Aspose.Html.Rendering.ImageType,System.Drawing.RectangleF)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="data">An array of bytes representing the image.</param>
      <param name="type">Image type.</param>
      <param name="rect">A rectangel which determines position and size to draw.</param>
    </member>
    <member name="P:Aspose.Html.Rendering.IDevice.Options">
      <summary>
            Gets rendering options.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.IDevice.GraphicContext">
      <summary>
            Gets the graphic context.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.ImageType">
      <summary>
            Specifies the file format of the image
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Unknown">
      <summary>
            Image format was not recognized.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Bmp">
      <summary>
            Gets the bitmap (BMP) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Emf">
      <summary>
            Gets the enhanced metafile (EMF) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Gif">
      <summary>
            Gets the Graphics Interchange Format (GIF) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Icon">
      <summary>
            Gets the Windows icon image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Jpeg">
      <summary>
            Gets the Joint Photographic Experts Group (JPEG) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Png">
      <summary>
            Gets the W3C Portable Network Graphics (PNG) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Tiff">
      <summary>
            Gets the Tagged Image File Format (TIFF) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.ImageType.Wmf">
      <summary>
            Gets the Windows metafile (WMF) image format.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Renderer">
      <summary>
            Represents a base class for all renderers and implemnts IDisposable interface.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Renderer.Dispose">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Renderer.Dispose(System.Boolean)">
      <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
      <param name="disposing">
        <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
    </member>
    <member name="T:Aspose.Html.Rendering.Renderer`1">
      <summary>
            Represents an abstract class for the all renderers.
            </summary>
      <typeparam name="TDocument">The type of the document.</typeparam>
      <seealso cref="T:System.IDisposable" />
    </member>
    <member name="M:Aspose.Html.Rendering.Renderer`1.Render(Aspose.Html.Rendering.IDevice,`0)">
      <summary>
            Defines method for rendering <see cref="!:TDocument" /> into specified <see cref="T:Aspose.Html.Rendering.IDevice" />.
            </summary>
      <param name="device">The device.</param>
      <param name="document">The document.</param>
    </member>
    <member name="T:Aspose.Html.Rendering.RenderingOptions">
      <summary>
            Represents rendering options.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.RenderingOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.RenderingOptions" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.RenderingOptions.PageSetup">
      <summary>
            Gets a page setup object is used for configuration output page-set.
            </summary>
      <value>
            The page setup.
            </value>
    </member>
    <member name="T:Aspose.Html.Rendering.PageSetup">
      <summary>
            Represents a page setup object is used for configuration output page-set.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.PageSetup.SetLeftRightPage(Aspose.Html.Drawing.Page,Aspose.Html.Drawing.Page)">
      <summary>
            Sets the Left/Right page configuration.
            </summary>
      <param name="leftPage">The left page.</param>
      <param name="rightPage">The right page.</param>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.AdjustToWidestPage">
      <summary>
            Gets or sets flag that determines case when page size will be adjusted to widest page in document.
            This options is time-consuming so time of document processing can be increased in two times. Adjustment will
            take place only if widest page in document is wider than page size determined in <see cref="T:Aspose.Html.Rendering.PageSetup" />. Adjusted
            page size will be used for all pages in document.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.LeftPage">
      <summary>
            Gets the Odd Page configuration.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.RightPage">
      <summary>
            Gets the Even Page configuration.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.AnyPage">
      <summary>
            Gets or sets all pages configuration in the the page-sequence.
            </summary>
      <value>
            Any page.
            </value>
    </member>
    <member name="P:Aspose.Html.Rendering.PageSetup.FirstPage">
      <summary>
            Gets or sets the first page configuration.
            </summary>
      <value>
            The first page.
            </value>
    </member>
    <member name="T:Aspose.Html.Rendering.Xps.XpsDevice">
      <summary>
            Represents rendering to a xps document.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Xps.XpsDevice.XpsGraphicContext">
      <summary>
            Holds current graphics control parameters for the XpsDevice.
            These parameters define the global framework within which the graphics operators execute.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.XpsGraphicContext.Clone">
      <summary>
            Creates a new instance of a XpsGraphicContext class with the same property values as an existing instance.
            </summary>
      <returns>Instance of a XpsGraphicContext</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.#ctor(Aspose.Html.Rendering.Xps.XpsRenderingOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Xps.XpsDevice" /> class by rendering options and stream provider.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="streamProvider">Object that implements the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.#ctor(Aspose.Html.Rendering.Xps.XpsRenderingOptions,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Xps.XpsDevice" /> class by rendering options and output file name.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="file">The output file name.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.#ctor(Aspose.Html.Rendering.Xps.XpsRenderingOptions,System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Xps.XpsDevice" /> class by rendering options and output stream.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="stream">The output stream.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.RestoreGraphicContext">
      <summary>
            Restores the entire graphics context to its former value by popping it from the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.LineTo(System.Drawing.PointF)">
      <summary>
            Appends a straight line segment from the current point to the point (pt). The new current point is pt.
            </summary>
      <param name="pt">Point of where to create the line to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.MoveTo(System.Drawing.PointF)">
      <summary>
            Begins a new subpath by moving the current point to coordinates of the parameter pt, omitting any connecting line segment. 
            If the previous path construction method in the current path was also "MoveTo", the new "MoveTo" overrides it; 
            no vestige of the previous "MoveTo" operation remains in the path.
            </summary>
      <param name="pt">Point of where to move the path to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.CubicBezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Appends a cubic Bézier curve to the current path. The curve extends from the current point to the point pt2,
            using pt1 and pt2 as the Bézier control points. The new current point is pt3.
            </summary>
      <param name="pt1">Coordinates of first point</param>
      <param name="pt2">Coordinates of second point</param>
      <param name="pt3">Coordinates of third point</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.AddRect(System.Drawing.RectangleF)">
      <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
      <param name="rect">A rectangle to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, "ClosePath" does nothing.
            This operator terminates the current subpath. Appending another segment to the current path begins a new subpath, 
            even if the new segment begins at the endpoint reached by the "ClosePath" method.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.Clip(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Modifies the current clipping path by intersecting it with the current path, using the FillMode rule to determine the region to fill. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is clipped</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.Fill(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Fills the entire region enclosed by the current path. 
            If the path consists of several disconnected subpaths, it fills the insides of all subpaths, 
            considered together. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.StrokeAndFill(System.Drawing.Drawing2D.FillMode)">
      <summary>
            Strokes and fill current path.
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.Stroke">
      <summary> 
            Strokes a line along the current path. The stroked line follows each straight or curved segment in the path, 
            centered on the segment with sides parallel to it. Each of the path’s subpaths is treated separately. 
            This method terminates current path. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.FillText(System.String,System.Drawing.PointF)">
      <summary>
            Fills the specified text string at the specified location.
            </summary>
      <param name="text">String to fill.</param>
      <param name="pt">Point that specifies the coordinates of the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.StrokeText(System.String,System.Drawing.PointF)">
      <summary>
            Strokes the specified text string at the specified location.
            </summary>
      <param name="text">String to stroke.</param>
      <param name="pt">Point that specifies the coordinates where to start the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.BeginDocument(Aspose.Html.Dom.Document)">
      <summary>
            Begins rendering of the document.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.BeginElement(Aspose.Html.Dom.Element,System.Drawing.RectangleF)">
      <summary>
            Begins rendering of the html element.
            </summary>
      <param name="element">The html element.</param>
      <param name="rect">Bounding box of the node.</param>
      <returns>
            Returns [true] if element should be processed.
            </returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.BeginPage(System.Drawing.SizeF)">
      <summary>
            Begins rendering of the new page.
            </summary>
      <param name="size">Size of the page.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.EndPage">
      <summary>
            Ends rendering of the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.EndDocument">
      <summary>
            Ends rendering of the document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.EndElement(Aspose.Html.Dom.Element)">
      <summary>
            Ends rendering of the html element.
            </summary>
      <param name="element">The html element.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.DrawImage(System.Byte[],Aspose.Html.Rendering.ImageType,System.Drawing.RectangleF)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="data">An array of bytes representing the image.</param>
      <param name="type">Image type.</param>
      <param name="rect">A rectangel which determines position and size to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Xps.XpsDevice.GetExtension">
      <summary>
            Gets extension of the output file.
            </summary>
      <returns>The file extension.</returns>
    </member>
    <member name="T:Aspose.Html.Rendering.Xps.XpsRenderingOptions">
      <summary>
            Represents rendering options for <see cref="T:Aspose.Html.Rendering.Xps.XpsDevice" />.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.PdfDevice">
      <summary>
            Represents rendering to a pdf document.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext">
      <summary>
            Holds current graphics control parameters for the PdfDevice.
            These parameters define the global framework within which the graphics operators execute.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
            Modify the current transformation matrix by multiplying the specified matrix.
            </summary>
      <param name="matrix">Transformation matrix.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.Clone">
      <summary>
            Creates a new instance of a class with the same property values as an existing instance.
            </summary>
      <returns>
            Instance of a GraphicContext
            </returns>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.FillBrush">
      <summary>
            Sets or gets the brush object that is used to fill the interiors of paths.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.LineCap">
      <summary>
            Sets or gets the code specifying the shape of the endpoints for any open path that is stroked.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.LineJoin">
      <summary>
            Sets or gets the code specifying the shape of joints between connected segments of a stroked path.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.LineWidth">
      <summary>
            Sets or gets the thickness of paths to be stroked.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.MiterLimit">
      <summary>
            Sets or gets the maximum length of mitered line joins for stroked paths. 
            This parameter limits the length of "spikes" produced when line segments join at sharp angles.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.StrokeBrush">
      <summary>
            Sets or gets the brush object that is used for stroked paths.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfDevice.PdfGraphicContext.TransformationMatrix">
      <summary>
            Sets or gets transformation matrix.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.#ctor(Aspose.Html.Rendering.Pdf.PdfRenderingOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.PdfDevice" /> class by rendering options and stream provider.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="streamProvider">Object that implements the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.#ctor(Aspose.Html.Rendering.Pdf.PdfRenderingOptions,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.PdfDevice" /> class by rendering options and output file name.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="file">The output file name.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.#ctor(Aspose.Html.Rendering.Pdf.PdfRenderingOptions,System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.PdfDevice" /> class by rendering options and output stream.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="stream">The output stream.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.SaveGraphicContext">
      <summary>
            Pushes a copy of the entire graphics context onto the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.RestoreGraphicContext">
      <summary>
            Restores the entire graphics context to its former value by popping it from the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.AddRect(System.Drawing.RectangleF)">
      <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
      <param name="rect">A rectangle to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.BeginDocument(Aspose.Html.Dom.Document)">
      <summary>
            Begins rendering of the document.
            </summary>
      <param name="document">The document.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.BeginElement(Aspose.Html.Dom.Element,System.Drawing.RectangleF)">
      <summary>
            Begins rendering of the html element.
            </summary>
      <param name="element">The html element.</param>
      <param name="rect">Bounding box of the node.</param>
      <returns>
            Returns [true] if element should be processed.
            </returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.BeginPage(System.Drawing.SizeF)">
      <summary>
            Begins rendering of the new page.
            </summary>
      <param name="size">Size of the page.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.Clip(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Modifies the current clipping path by intersecting it with the current path, using the FillMode rule to determine the region to fill. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is clipped</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, "ClosePath" does nothing.
            This operator terminates the current subpath. Appending another segment to the current path begins a new subpath, 
            even if the new segment begins at the endpoint reached by the "ClosePath" method.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.CubicBezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Appends a cubic Bézier curve to the current path. The curve extends from the current point to the point pt2,
            using pt1 and pt2 as the Bézier control points. The new current point is pt3.
            </summary>
      <param name="pt1">Coordinates of first point</param>
      <param name="pt2">Coordinates of second point</param>
      <param name="pt3">Coordinates of third point</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.DrawImage(System.Byte[],Aspose.Html.Rendering.ImageType,System.Drawing.RectangleF)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="data">An array of bytes representing the image.</param>
      <param name="type">Image type.</param>
      <param name="rect">A rectangel which determines position and size to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.EndDocument">
      <summary>
            Ends rendering of the document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.EndElement(Aspose.Html.Dom.Element)">
      <summary>
            Ends rendering of the html element.
            </summary>
      <param name="element">The html element.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.EndPage">
      <summary>
            Ends rendering of the current page.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.Fill(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Fills the entire region enclosed by the current path. 
            If the path consists of several disconnected subpaths, it fills the insides of all subpaths, 
            considered together. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.FillText(System.String,System.Drawing.PointF)">
      <summary>
            Fills the specified text string at the specified location.
            </summary>
      <param name="text">String to fill.</param>
      <param name="pt">Point that specifies the coordinates of the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.LineTo(System.Drawing.PointF)">
      <summary>
            Appends a straight line segment from the current point to the point (pt). The new current point is pt.
            </summary>
      <param name="pt">Point of where to create the line to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.MoveTo(System.Drawing.PointF)">
      <summary>
            Begins a new subpath by moving the current point to coordinates of the parameter pt, omitting any connecting line segment. 
            If the previous path construction method in the current path was also "MoveTo", the new "MoveTo" overrides it; 
            no vestige of the previous "MoveTo" operation remains in the path.
            </summary>
      <param name="pt">Point of where to move the path to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.Stroke">
      <summary> 
            Strokes a line along the current path. The stroked line follows each straight or curved segment in the path, 
            centered on the segment with sides parallel to it. Each of the path’s subpaths is treated separately. 
            This method terminates current path. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.StrokeAndFill(System.Drawing.Drawing2D.FillMode)">
      <summary>
            Strokes and fill current path.
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.StrokeText(System.String,System.Drawing.PointF)">
      <summary>
            Strokes the specified text string at the specified location.
            </summary>
      <param name="text">String to stroke.</param>
      <param name="pt">Point that specifies the coordinates where to start the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.PdfDevice.GetExtension">
      <summary>
            Gets extension of the output file.
            </summary>
      <returns>The file extension.</returns>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.PdfRenderingOptions">
      <summary>
            Represents rendering options for <see cref="T:Aspose.Html.Rendering.Pdf.PdfDevice" />.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfRenderingOptions.JpegQuality">
      <summary>
            Specifies the quality of JPEG compression for images (if JPEG compression is used).
            Default is 95.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.PdfRenderingOptions.Encryption">
      <summary>
            Gets or sets a encryption details. If not set, then no encryption will be performed.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionAlgorithm">
      <summary>
            Encryption mode enum. Describe using algorithm and key length.
            This enum is extended in order to be able to further increase functionality.
            This enum implements "Base-to-Core" pattern.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionAlgorithm.RC4_40">
      <summary>
            Algorithm, with an RC4 encryption key length of 40 bits;
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionAlgorithm.RC4_128">
      <summary>
            Algorithm, with an RC4 encryption key length of 128 bits and advanced permission set;
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo">
      <summary>
            Contains details for a pdf encryption.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo.#ctor(System.String,System.String,System.Int32,Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionAlgorithm)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo" /> class.
            </summary>
      <param name="userPassword">The user password.</param>
      <param name="ownerPassword">The owner password.</param>
      <param name="permissions">The permissions.</param>
      <param name="encryptionAlgorithm">The encryption algorithm.</param>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo.UserPassword">
      <summary>
            Gets or sets the User password.
            </summary>
      <value>
            The user password.
            </value>
      <remarks>
            Opening the document with the correct user password (or opening a document
            that does not have a user password) allows additional operations to be
            performed according to the user access permissions specified in the document’s
            encryption dictionary.
            </remarks>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo.OwnerPassword">
      <summary>
            Gets or sets the Owner password.
            </summary>
      <value>
            The owner password.
            </value>
      <remarks>
            Opening the document with the correct owner password (assuming it is not the
            same as the user password) allows full (owner) access to the document. This
            unlimited access includes the ability to change the document’s passwords and
            access permissions.
            </remarks>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo.Permissions">
      <summary>
            Gets or sets the permissions.
            </summary>
      <value>
            The permissions.
            </value>
    </member>
    <member name="P:Aspose.Html.Rendering.Pdf.Encryption.PdfEncryptionInfo.EncryptionAlgorithm">
      <summary>
            Gets or sets the encryption mode.
            </summary>
      <value>
            The encryption algorithm.
            </value>
    </member>
    <member name="T:Aspose.Html.Rendering.Image.ImageFormat">
      <summary>
            Specifies the file format of the image.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.ImageFormat.Jpeg">
      <summary>
            The Joint Photographic Experts Group (JPEG) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.ImageFormat.Png">
      <summary>
            The W3C Portable Network Graphics (PNG) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.ImageFormat.Bmp">
      <summary>
            The bitmap (BMP) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.ImageFormat.Gif">
      <summary>
            The Graphics Interchange Format (GIF) image format.
            </summary>
    </member>
    <member name="F:Aspose.Html.Rendering.Image.ImageFormat.Tiff">
      <summary>
            The Tagged Image File Format (TIFF) image format.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Image.ImageDevice">
      <summary>
            Represents rendering to raster formats: jpeg, png, bmp, gif, tiff.
            </summary>
      <seealso cref="T:Aspose.Html.Rendering.Image.ImageDevice.ImageGraphicContext" />
    </member>
    <member name="T:Aspose.Html.Rendering.Image.ImageDevice.ImageGraphicContext">
      <summary>
            Holds current graphics control parameters for the <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" />.
            These parameters define the global framework within which the graphics operators execute.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.ImageGraphicContext.Transform(System.Drawing.Drawing2D.Matrix)">
      <summary>
            Modify the current transformation matrix by multiplying the specified matrix.
            </summary>
      <param name="matrix">Transformation matrix.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.ImageGraphicContext.Clone">
      <summary>
            Creates a new instance of a GdiGraphicContext class with the same property values as an existing instance.
            </summary>
      <returns>Instance of a GdiGraphicContext</returns>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageDevice.ImageGraphicContext.TransformationMatrix">
      <summary>
            Sets or gets transformation matrix.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.#ctor(Aspose.Html.Rendering.Image.ImageRenderingOptions,Aspose.Html.IO.ICreateStreamProvider)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" /> class by rendering options and stream provider.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="streamProvider">Object that implements the <see cref="T:Aspose.Html.IO.ICreateStreamProvider" /> interface</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.#ctor(Aspose.Html.Rendering.Image.ImageRenderingOptions,System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" /> class by rendering options and output file name.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="file">The output file name.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.#ctor(Aspose.Html.Rendering.Image.ImageRenderingOptions,System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" /> class by rendering options and output stream.
            </summary>
      <param name="options">Rendering options.</param>
      <param name="stream">The output stream.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.Initialize">
      <summary>
            Initializes context stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.EndDocument">
      <summary>
            Ends rendering of the document.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.SaveGraphicContext">
      <summary>
            Pushes a copy of the entire graphics context onto the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.RestoreGraphicContext">
      <summary>
            Restores the entire graphics context to its former value by popping it from the stack.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.BeginElement(Aspose.Html.Dom.Element,System.Drawing.RectangleF)">
      <summary>
            Begins rendering of the html element.
            </summary>
      <param name="element">The html element.</param>
      <param name="rect">Bounding box of the node.</param>
      <returns>
            Returns [true] if element should be processed.
            </returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.EndElement(Aspose.Html.Dom.Element)">
      <summary>
            Ends rendering of the html element.
            </summary>
      <param name="element">The html element.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.ClosePath">
      <summary>
            Closes the current subpath by appending a straight line segment from the current point to the starting point of the subpath. 
            If the current subpath is already closed, "ClosePath" does nothing.
            This operator terminates the current subpath. Appending another segment to the current path begins a new subpath, 
            even if the new segment begins at the endpoint reached by the "ClosePath" method.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.MoveTo(System.Drawing.PointF)">
      <summary>
            Begins a new subpath by moving the current point to coordinates of the parameter pt, omitting any connecting line segment. 
            If the previous path construction method in the current path was also "MoveTo", the new "MoveTo" overrides it; 
            no vestige of the previous "MoveTo" operation remains in the path.
            </summary>
      <param name="pt">Point of where to move the path to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.LineTo(System.Drawing.PointF)">
      <summary>
            Appends a straight line segment from the current point to the point (pt). The new current point is pt.
            </summary>
      <param name="pt">Point of where to create the line to.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.AddRect(System.Drawing.RectangleF)">
      <summary>
            Appends a rectangle to the current path as a complete subpath.
            </summary>
      <param name="rect">A rectangle to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.CubicBezierTo(System.Drawing.PointF,System.Drawing.PointF,System.Drawing.PointF)">
      <summary>
            Appends a cubic Bézier curve to the current path. The curve extends from the current point to the point pt2,
            using pt1 and pt2 as the Bézier control points. The new current point is pt3.
            </summary>
      <param name="pt1">Coordinates of first point</param>
      <param name="pt2">Coordinates of second point</param>
      <param name="pt3">Coordinates of third point</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.Stroke">
      <summary> 
            Strokes a line along the current path. The stroked line follows each straight or curved segment in the path, 
            centered on the segment with sides parallel to it. Each of the path’s subpaths is treated separately. 
            This method terminates current path. 
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.Fill(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Fills the entire region enclosed by the current path. 
            If the path consists of several disconnected subpaths, it fills the insides of all subpaths, 
            considered together. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.Clip(System.Drawing.Drawing2D.FillMode)">
      <summary> 
            Modifies the current clipping path by intersecting it with the current path, using the FillMode rule to determine the region to fill. 
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is clipped</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.StrokeAndFill(System.Drawing.Drawing2D.FillMode)">
      <summary>
            Strokes and fill current path.
            This method terminates current path. 
            </summary>
      <param name="mode">Filling mode specifies how the interior of a closed path is filled.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.FillText(System.String,System.Drawing.PointF)">
      <summary>
            Fills the specified text string at the specified location.
            </summary>
      <param name="text">String to fill.</param>
      <param name="pt">Point that specifies the coordinates of the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.StrokeText(System.String,System.Drawing.PointF)">
      <summary>
            Strokes the specified text string at the specified location.
            </summary>
      <param name="text">String to stroke.</param>
      <param name="pt">Point that specifies the coordinates where to start the text.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.DrawImage(System.Byte[],Aspose.Html.Rendering.ImageType,System.Drawing.RectangleF)">
      <summary>
            Draws the specified image.
            </summary>
      <param name="data">An array of bytes representing the image.</param>
      <param name="type">Image type.</param>
      <param name="rect">A rectangel which determines position and size to draw.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.GetExtension">
      <summary>
            Gets extension of the output file.
            </summary>
      <returns>The file extension.</returns>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.BeginPage(System.Drawing.SizeF)">
      <summary>
            Begins rendering of the new page.
            </summary>
      <param name="size">Size of the page.</param>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageDevice.EndPage">
      <summary>
            Ends rendering of the current page.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageDevice.Configuration">
      <summary>
            Gets device configuration.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageDevice.Graphics">
      <summary>
            Gets the instance of Graphics.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Image.ImageRenderingOptions">
      <summary>
            Represents rendering options for <see cref="T:Aspose.Html.Rendering.Image.ImageDevice" />.
            </summary>
    </member>
    <member name="T:Aspose.Html.Rendering.Image.ImageRenderingOptions.Comression">
      <summary>
            Specifies the possible compression schemes for Tagged Image File Format (TIFF) bitmap images.
            </summary>
    </member>
    <member name="M:Aspose.Html.Rendering.Image.ImageRenderingOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Html.Rendering.Image.ImageRenderingOptions" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageRenderingOptions.HorizontalResolution">
      <summary>
            Sets or gets horizontal resolution, in pixels per inch. By default this property is 96 dpi.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageRenderingOptions.VerticalResolution">
      <summary>
            Sets or gets vertical resolution, in pixels per inch. By default this property is 96 dpi.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageRenderingOptions.Format">
      <summary>
            Sets or gets <see cref="T:Aspose.Html.Rendering.Image.ImageFormat" />. By default this property is Png.
            </summary>
    </member>
    <member name="P:Aspose.Html.Rendering.Image.ImageRenderingOptions.Compression">
      <summary>
            Sets or gets Tagged Image File Format (TIFF) <see cref="T:Aspose.Html.Rendering.Image.ImageRenderingOptions.Comression" />. By default this property is LZW.
            </summary>
    </member>
  </members>
</doc>